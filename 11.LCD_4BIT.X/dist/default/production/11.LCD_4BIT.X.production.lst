

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Apr 19 10:47:23 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    11                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    12                           	dabs	1,0x7E,2
    13  0000                     
    14                           ; Version 2.40
    15                           ; Generated 17/11/2021 GMT
    16                           ; 
    17                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F877A Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0094                     	;# 
    97  0098                     	;# 
    98  0099                     	;# 
    99  009C                     	;# 
   100  009D                     	;# 
   101  009E                     	;# 
   102  009F                     	;# 
   103  010C                     	;# 
   104  010D                     	;# 
   105  010E                     	;# 
   106  010F                     	;# 
   107  018C                     	;# 
   108  018D                     	;# 
   109  0000                     	;# 
   110  0001                     	;# 
   111  0002                     	;# 
   112  0003                     	;# 
   113  0004                     	;# 
   114  0005                     	;# 
   115  0006                     	;# 
   116  0007                     	;# 
   117  0008                     	;# 
   118  0009                     	;# 
   119  000A                     	;# 
   120  000B                     	;# 
   121  000C                     	;# 
   122  000D                     	;# 
   123  000E                     	;# 
   124  000E                     	;# 
   125  000F                     	;# 
   126  0010                     	;# 
   127  0011                     	;# 
   128  0012                     	;# 
   129  0013                     	;# 
   130  0014                     	;# 
   131  0015                     	;# 
   132  0015                     	;# 
   133  0016                     	;# 
   134  0017                     	;# 
   135  0018                     	;# 
   136  0019                     	;# 
   137  001A                     	;# 
   138  001B                     	;# 
   139  001B                     	;# 
   140  001C                     	;# 
   141  001D                     	;# 
   142  001E                     	;# 
   143  001F                     	;# 
   144  0081                     	;# 
   145  0085                     	;# 
   146  0086                     	;# 
   147  0087                     	;# 
   148  0088                     	;# 
   149  0089                     	;# 
   150  008C                     	;# 
   151  008D                     	;# 
   152  008E                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0094                     	;# 
   157  0098                     	;# 
   158  0099                     	;# 
   159  009C                     	;# 
   160  009D                     	;# 
   161  009E                     	;# 
   162  009F                     	;# 
   163  010C                     	;# 
   164  010D                     	;# 
   165  010E                     	;# 
   166  010F                     	;# 
   167  018C                     	;# 
   168  018D                     	;# 
   169  0008                     _PORTD	set	8
   170  0042                     _RD2	set	66
   171  0041                     _RD1	set	65
   172  0088                     _TRISD	set	136
   173                           
   174                           	psect	cinit
   175  07FC                     start_initialization:	
   176                           ; #config settings
   177                           
   178  07FC                     __initialization:
   179  07FC                     end_of_initialization:	
   180                           ;End of C runtime variable initialization code
   181                           
   182  07FC                     __end_of__initialization:
   183  07FC  0183               	clrf	3
   184  07FD  120A  118A  2F2B   	ljmp	_main	;jump to C main() function
   185                           
   186                           	psect	cstackCOMMON
   187  0070                     __pcstackCOMMON:
   188  0070                     ?_LCD_Command:
   189  0070                     ??_LCD_Command:	
   190                           ; 1 bytes @ 0x0
   191                           
   192  0070                     ?_LCD_data:	
   193                           ; 1 bytes @ 0x0
   194                           
   195  0070                     ??_LCD_data:	
   196                           ; 1 bytes @ 0x0
   197                           
   198  0070                     ?_LCD_init:	
   199                           ; 1 bytes @ 0x0
   200                           
   201  0070                     ?_main:	
   202                           ; 1 bytes @ 0x0
   203                           
   204                           
   205                           ; 1 bytes @ 0x0
   206  0070                     	ds	2
   207  0072                     LCD_Command@cmd:
   208  0072                     LCD_data@data:	
   209                           ; 1 bytes @ 0x2
   210                           
   211                           
   212                           ; 1 bytes @ 0x2
   213  0072                     	ds	1
   214  0073                     ??_LCD_init:
   215                           
   216                           ; 1 bytes @ 0x3
   217  0073                     	ds	2
   218  0075                     ??_main:
   219                           
   220                           	psect	maintext
   221  072B                     __pmaintext:	
   222                           ; 1 bytes @ 0x5
   223 ;;
   224 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   225 ;;
   226 ;; *************** function _main *****************
   227 ;; Defined at:
   228 ;;		line 66 in file "main.c"
   229 ;; Parameters:    Size  Location     Type
   230 ;;		None
   231 ;; Auto vars:     Size  Location     Type
   232 ;;		None
   233 ;; Return value:  Size  Location     Type
   234 ;;                  1    wreg      void 
   235 ;; Registers used:
   236 ;;		wreg, status,2, status,0, pclath, cstack
   237 ;; Tracked objects:
   238 ;;		On entry : B00/0
   239 ;;		On exit  : 0/0
   240 ;;		Unchanged: 0/0
   241 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   242 ;;      Params:         0       0       0       0       0
   243 ;;      Locals:         0       0       0       0       0
   244 ;;      Temps:          0       0       0       0       0
   245 ;;      Totals:         0       0       0       0       0
   246 ;;Total ram usage:        0 bytes
   247 ;; Hardware stack levels required when called: 2
   248 ;; This function calls:
   249 ;;		_LCD_data
   250 ;;		_LCD_init
   251 ;; This function is called by:
   252 ;;		Startup code after reset
   253 ;; This function uses a non-reentrant model
   254 ;;
   255                           
   256                           
   257                           ;psect for function _main
   258  072B                     _main:
   259  072B                     l660:	
   260                           ;incstack = 0
   261                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   262                           
   263                           
   264                           ;main.c: 68: TRISD=0x00;
   265  072B  1683               	bsf	3,5	;RP0=1, select bank1
   266  072C  1303               	bcf	3,6	;RP1=0, select bank1
   267  072D  0188               	clrf	8	;volatile
   268  072E                     l662:
   269                           
   270                           ;main.c: 69: LCD_init();
   271  072E  120A  118A  273C  120A  118A  	fcall	_LCD_init
   272  0733                     l664:
   273                           
   274                           ;main.c: 70: LCD_data('a');
   275  0733  3061               	movlw	97
   276  0734  120A  118A  2764  120A  118A  	fcall	_LCD_data
   277  0739                     l24:
   278  0739  120A  118A  2800   	ljmp	start
   279  073C                     __end_of_main:
   280                           
   281                           	psect	text1
   282  073C                     __ptext1:	
   283 ;; *************** function _LCD_init *****************
   284 ;; Defined at:
   285 ;;		line 56 in file "main.c"
   286 ;; Parameters:    Size  Location     Type
   287 ;;		None
   288 ;; Auto vars:     Size  Location     Type
   289 ;;		None
   290 ;; Return value:  Size  Location     Type
   291 ;;                  1    wreg      void 
   292 ;; Registers used:
   293 ;;		wreg, status,2, status,0, pclath, cstack
   294 ;; Tracked objects:
   295 ;;		On entry : 0/0
   296 ;;		On exit  : 0/0
   297 ;;		Unchanged: 0/0
   298 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   299 ;;      Params:         0       0       0       0       0
   300 ;;      Locals:         0       0       0       0       0
   301 ;;      Temps:          2       0       0       0       0
   302 ;;      Totals:         2       0       0       0       0
   303 ;;Total ram usage:        2 bytes
   304 ;; Hardware stack levels used: 1
   305 ;; Hardware stack levels required when called: 1
   306 ;; This function calls:
   307 ;;		_LCD_Command
   308 ;; This function is called by:
   309 ;;		_main
   310 ;; This function uses a non-reentrant model
   311 ;;
   312                           
   313                           
   314                           ;psect for function _LCD_init
   315  073C                     _LCD_init:
   316  073C                     l656:	
   317                           ;incstack = 0
   318                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
   319                           
   320                           
   321                           ;main.c: 58: LCD_Command (0x02);
   322  073C  3002               	movlw	2
   323  073D  120A  118A  27B0  120A  118A  	fcall	_LCD_Command
   324                           
   325                           ;main.c: 59: LCD_Command (0x28);
   326  0742  3028               	movlw	40
   327  0743  120A  118A  27B0  120A  118A  	fcall	_LCD_Command
   328                           
   329                           ;main.c: 60: LCD_Command (0x80);
   330  0748  3080               	movlw	128
   331  0749  120A  118A  27B0  120A  118A  	fcall	_LCD_Command
   332                           
   333                           ;main.c: 61: LCD_Command (0x0C);
   334  074E  300C               	movlw	12
   335  074F  120A  118A  27B0  120A  118A  	fcall	_LCD_Command
   336                           
   337                           ;main.c: 62: LCD_Command (0x06);
   338  0754  3006               	movlw	6
   339  0755  120A  118A  27B0  120A  118A  	fcall	_LCD_Command
   340  075A                     l658:
   341                           
   342                           ;main.c: 63: _delay((unsigned long)((10)*(16000000/4000.0)));
   343  075A  3034               	movlw	52
   344  075B  00F4               	movwf	??_LCD_init+1
   345  075C  30F1               	movlw	241
   346  075D  00F3               	movwf	??_LCD_init
   347  075E                     u37:
   348  075E  0BF3               	decfsz	??_LCD_init,f
   349  075F  2F5E               	goto	u37
   350  0760  0BF4               	decfsz	??_LCD_init+1,f
   351  0761  2F5E               	goto	u37
   352  0762  2F63               	nop2
   353  0763                     l19:
   354  0763  0008               	return
   355  0764                     __end_of_LCD_init:
   356                           
   357                           	psect	text2
   358  07B0                     __ptext2:	
   359 ;; *************** function _LCD_Command *****************
   360 ;; Defined at:
   361 ;;		line 20 in file "main.c"
   362 ;; Parameters:    Size  Location     Type
   363 ;;  cmd             1    wreg     unsigned char 
   364 ;; Auto vars:     Size  Location     Type
   365 ;;  cmd             1    2[COMMON] unsigned char 
   366 ;; Return value:  Size  Location     Type
   367 ;;                  1    wreg      void 
   368 ;; Registers used:
   369 ;;		wreg, status,2, status,0
   370 ;; Tracked objects:
   371 ;;		On entry : 0/0
   372 ;;		On exit  : 0/0
   373 ;;		Unchanged: 0/0
   374 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   375 ;;      Params:         0       0       0       0       0
   376 ;;      Locals:         1       0       0       0       0
   377 ;;      Temps:          2       0       0       0       0
   378 ;;      Totals:         3       0       0       0       0
   379 ;;Total ram usage:        3 bytes
   380 ;; Hardware stack levels used: 1
   381 ;; This function calls:
   382 ;;		Nothing
   383 ;; This function is called by:
   384 ;;		_LCD_init
   385 ;; This function uses a non-reentrant model
   386 ;;
   387                           
   388                           
   389                           ;psect for function _LCD_Command
   390  07B0                     _LCD_Command:
   391                           
   392                           ;incstack = 0
   393                           ; Regs used in _LCD_Command: [wreg+status,2+status,0]
   394                           ;LCD_Command@cmd stored from wreg
   395  07B0  00F2               	movwf	LCD_Command@cmd
   396  07B1                     l616:
   397                           
   398                           ;main.c: 20: void LCD_Command(unsigned char cmd);main.c: 21: {;main.c: 22: RD1=0;
   399  07B1  1283               	bcf	3,5	;RP0=0, select bank0
   400  07B2  1303               	bcf	3,6	;RP1=0, select bank0
   401  07B3  1088               	bcf	8,1	;volatile
   402  07B4                     l618:
   403                           
   404                           ;main.c: 23: _delay((unsigned long)((10)*(16000000/4000.0)));
   405  07B4  3034               	movlw	52
   406  07B5  00F1               	movwf	??_LCD_Command+1
   407  07B6  30F1               	movlw	241
   408  07B7  00F0               	movwf	??_LCD_Command
   409  07B8                     u47:
   410  07B8  0BF0               	decfsz	??_LCD_Command,f
   411  07B9  2FB8               	goto	u47
   412  07BA  0BF1               	decfsz	??_LCD_Command+1,f
   413  07BB  2FB8               	goto	u47
   414  07BC  2FBD               	nop2
   415                           
   416                           ;main.c: 24: PORTD=(cmd);
   417  07BD  0872               	movf	LCD_Command@cmd,w
   418  07BE  1283               	bcf	3,5	;RP0=0, select bank0
   419  07BF  1303               	bcf	3,6	;RP1=0, select bank0
   420  07C0  0088               	movwf	8	;volatile
   421  07C1                     l620:
   422                           
   423                           ;main.c: 25: RD2=1;
   424  07C1  1508               	bsf	8,2	;volatile
   425                           
   426                           ;main.c: 26: _delay((unsigned long)((10)*(16000000/4000.0)));
   427  07C2  3034               	movlw	52
   428  07C3  00F1               	movwf	??_LCD_Command+1
   429  07C4  30F1               	movlw	241
   430  07C5  00F0               	movwf	??_LCD_Command
   431  07C6                     u57:
   432  07C6  0BF0               	decfsz	??_LCD_Command,f
   433  07C7  2FC6               	goto	u57
   434  07C8  0BF1               	decfsz	??_LCD_Command+1,f
   435  07C9  2FC6               	goto	u57
   436  07CA  2FCB               	nop2
   437  07CB                     l622:
   438                           
   439                           ;main.c: 27: RD2=0;
   440  07CB  1283               	bcf	3,5	;RP0=0, select bank0
   441  07CC  1303               	bcf	3,6	;RP1=0, select bank0
   442  07CD  1108               	bcf	8,2	;volatile
   443                           
   444                           ;main.c: 28: _delay((unsigned long)((10)*(16000000/4000.0)));
   445  07CE  3034               	movlw	52
   446  07CF  00F1               	movwf	??_LCD_Command+1
   447  07D0  30F1               	movlw	241
   448  07D1  00F0               	movwf	??_LCD_Command
   449  07D2                     u67:
   450  07D2  0BF0               	decfsz	??_LCD_Command,f
   451  07D3  2FD2               	goto	u67
   452  07D4  0BF1               	decfsz	??_LCD_Command+1,f
   453  07D5  2FD2               	goto	u67
   454  07D6  2FD7               	nop2
   455  07D7                     l624:
   456                           
   457                           ;main.c: 30: PORTD=(cmd<<4);
   458  07D7  0872               	movf	LCD_Command@cmd,w
   459  07D8  00F0               	movwf	??_LCD_Command
   460  07D9  3003               	movlw	3
   461  07DA                     u15:
   462  07DA  1003               	clrc
   463  07DB  0DF0               	rlf	??_LCD_Command,f
   464  07DC  3EFF               	addlw	-1
   465  07DD  1D03               	skipz
   466  07DE  2FDA               	goto	u15
   467  07DF  1003               	clrc
   468  07E0  0D70               	rlf	??_LCD_Command,w
   469  07E1  1283               	bcf	3,5	;RP0=0, select bank0
   470  07E2  1303               	bcf	3,6	;RP1=0, select bank0
   471  07E3  0088               	movwf	8	;volatile
   472  07E4                     l626:
   473                           
   474                           ;main.c: 31: RD1=0;
   475  07E4  1088               	bcf	8,1	;volatile
   476  07E5                     l628:
   477                           
   478                           ;main.c: 32: RD2=1;
   479  07E5  1508               	bsf	8,2	;volatile
   480  07E6                     l630:
   481                           
   482                           ;main.c: 33: _delay((unsigned long)((10)*(16000000/4000.0)));
   483  07E6  3034               	movlw	52
   484  07E7  00F1               	movwf	??_LCD_Command+1
   485  07E8  30F1               	movlw	241
   486  07E9  00F0               	movwf	??_LCD_Command
   487  07EA                     u77:
   488  07EA  0BF0               	decfsz	??_LCD_Command,f
   489  07EB  2FEA               	goto	u77
   490  07EC  0BF1               	decfsz	??_LCD_Command+1,f
   491  07ED  2FEA               	goto	u77
   492  07EE  2FEF               	nop2
   493  07EF                     l632:
   494                           
   495                           ;main.c: 34: RD2=0;
   496  07EF  1283               	bcf	3,5	;RP0=0, select bank0
   497  07F0  1303               	bcf	3,6	;RP1=0, select bank0
   498  07F1  1108               	bcf	8,2	;volatile
   499  07F2                     l634:
   500                           
   501                           ;main.c: 35: _delay((unsigned long)((10)*(16000000/4000.0)));
   502  07F2  3034               	movlw	52
   503  07F3  00F1               	movwf	??_LCD_Command+1
   504  07F4  30F1               	movlw	241
   505  07F5  00F0               	movwf	??_LCD_Command
   506  07F6                     u87:
   507  07F6  0BF0               	decfsz	??_LCD_Command,f
   508  07F7  2FF6               	goto	u87
   509  07F8  0BF1               	decfsz	??_LCD_Command+1,f
   510  07F9  2FF6               	goto	u87
   511  07FA  2FFB               	nop2
   512  07FB                     l13:
   513  07FB  0008               	return
   514  07FC                     __end_of_LCD_Command:
   515                           
   516                           	psect	text3
   517  0764                     __ptext3:	
   518 ;; *************** function _LCD_data *****************
   519 ;; Defined at:
   520 ;;		line 38 in file "main.c"
   521 ;; Parameters:    Size  Location     Type
   522 ;;  data            1    wreg     unsigned char 
   523 ;; Auto vars:     Size  Location     Type
   524 ;;  data            1    2[COMMON] unsigned char 
   525 ;; Return value:  Size  Location     Type
   526 ;;                  1    wreg      void 
   527 ;; Registers used:
   528 ;;		wreg, status,2, status,0
   529 ;; Tracked objects:
   530 ;;		On entry : 0/0
   531 ;;		On exit  : 0/0
   532 ;;		Unchanged: 0/0
   533 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   534 ;;      Params:         0       0       0       0       0
   535 ;;      Locals:         1       0       0       0       0
   536 ;;      Temps:          2       0       0       0       0
   537 ;;      Totals:         3       0       0       0       0
   538 ;;Total ram usage:        3 bytes
   539 ;; Hardware stack levels used: 1
   540 ;; This function calls:
   541 ;;		Nothing
   542 ;; This function is called by:
   543 ;;		_main
   544 ;; This function uses a non-reentrant model
   545 ;;
   546                           
   547                           
   548                           ;psect for function _LCD_data
   549  0764                     _LCD_data:
   550                           
   551                           ;incstack = 0
   552                           ; Regs used in _LCD_data: [wreg+status,2+status,0]
   553                           ;LCD_data@data stored from wreg
   554  0764  00F2               	movwf	LCD_data@data
   555  0765                     l636:
   556                           
   557                           ;main.c: 38: void LCD_data(unsigned char data);main.c: 39: {;main.c: 40: RD1=1;
   558  0765  1283               	bcf	3,5	;RP0=0, select bank0
   559  0766  1303               	bcf	3,6	;RP1=0, select bank0
   560  0767  1488               	bsf	8,1	;volatile
   561  0768                     l638:
   562                           
   563                           ;main.c: 41: _delay((unsigned long)((10)*(16000000/4000.0)));
   564  0768  3034               	movlw	52
   565  0769  00F1               	movwf	??_LCD_data+1
   566  076A  30F1               	movlw	241
   567  076B  00F0               	movwf	??_LCD_data
   568  076C                     u97:
   569  076C  0BF0               	decfsz	??_LCD_data,f
   570  076D  2F6C               	goto	u97
   571  076E  0BF1               	decfsz	??_LCD_data+1,f
   572  076F  2F6C               	goto	u97
   573  0770  2F71               	nop2
   574                           
   575                           ;main.c: 42: PORTD =(data);
   576  0771  0872               	movf	LCD_data@data,w
   577  0772  1283               	bcf	3,5	;RP0=0, select bank0
   578  0773  1303               	bcf	3,6	;RP1=0, select bank0
   579  0774  0088               	movwf	8	;volatile
   580  0775                     l640:
   581                           
   582                           ;main.c: 43: RD2=1;
   583  0775  1508               	bsf	8,2	;volatile
   584                           
   585                           ;main.c: 44: _delay((unsigned long)((10)*(16000000/4000.0)));
   586  0776  3034               	movlw	52
   587  0777  00F1               	movwf	??_LCD_data+1
   588  0778  30F1               	movlw	241
   589  0779  00F0               	movwf	??_LCD_data
   590  077A                     u107:
   591  077A  0BF0               	decfsz	??_LCD_data,f
   592  077B  2F7A               	goto	u107
   593  077C  0BF1               	decfsz	??_LCD_data+1,f
   594  077D  2F7A               	goto	u107
   595  077E  2F7F               	nop2
   596  077F                     l642:
   597                           
   598                           ;main.c: 45: RD2=0;
   599  077F  1283               	bcf	3,5	;RP0=0, select bank0
   600  0780  1303               	bcf	3,6	;RP1=0, select bank0
   601  0781  1108               	bcf	8,2	;volatile
   602                           
   603                           ;main.c: 46: _delay((unsigned long)((10)*(16000000/4000.0)));
   604  0782  3034               	movlw	52
   605  0783  00F1               	movwf	??_LCD_data+1
   606  0784  30F1               	movlw	241
   607  0785  00F0               	movwf	??_LCD_data
   608  0786                     u117:
   609  0786  0BF0               	decfsz	??_LCD_data,f
   610  0787  2F86               	goto	u117
   611  0788  0BF1               	decfsz	??_LCD_data+1,f
   612  0789  2F86               	goto	u117
   613  078A  2F8B               	nop2
   614  078B                     l644:
   615                           
   616                           ;main.c: 48: PORTD =(data<<4);
   617  078B  0872               	movf	LCD_data@data,w
   618  078C  00F0               	movwf	??_LCD_data
   619  078D  3003               	movlw	3
   620  078E                     u25:
   621  078E  1003               	clrc
   622  078F  0DF0               	rlf	??_LCD_data,f
   623  0790  3EFF               	addlw	-1
   624  0791  1D03               	skipz
   625  0792  2F8E               	goto	u25
   626  0793  1003               	clrc
   627  0794  0D70               	rlf	??_LCD_data,w
   628  0795  1283               	bcf	3,5	;RP0=0, select bank0
   629  0796  1303               	bcf	3,6	;RP1=0, select bank0
   630  0797  0088               	movwf	8	;volatile
   631  0798                     l646:
   632                           
   633                           ;main.c: 49: RD1=1;
   634  0798  1488               	bsf	8,1	;volatile
   635  0799                     l648:
   636                           
   637                           ;main.c: 50: RD2=1;
   638  0799  1508               	bsf	8,2	;volatile
   639  079A                     l650:
   640                           
   641                           ;main.c: 51: _delay((unsigned long)((10)*(16000000/4000.0)));
   642  079A  3034               	movlw	52
   643  079B  00F1               	movwf	??_LCD_data+1
   644  079C  30F1               	movlw	241
   645  079D  00F0               	movwf	??_LCD_data
   646  079E                     u127:
   647  079E  0BF0               	decfsz	??_LCD_data,f
   648  079F  2F9E               	goto	u127
   649  07A0  0BF1               	decfsz	??_LCD_data+1,f
   650  07A1  2F9E               	goto	u127
   651  07A2  2FA3               	nop2
   652  07A3                     l652:
   653                           
   654                           ;main.c: 52: RD2=0;
   655  07A3  1283               	bcf	3,5	;RP0=0, select bank0
   656  07A4  1303               	bcf	3,6	;RP1=0, select bank0
   657  07A5  1108               	bcf	8,2	;volatile
   658  07A6                     l654:
   659                           
   660                           ;main.c: 53: _delay((unsigned long)((10)*(16000000/4000.0)));
   661  07A6  3034               	movlw	52
   662  07A7  00F1               	movwf	??_LCD_data+1
   663  07A8  30F1               	movlw	241
   664  07A9  00F0               	movwf	??_LCD_data
   665  07AA                     u137:
   666  07AA  0BF0               	decfsz	??_LCD_data,f
   667  07AB  2FAA               	goto	u137
   668  07AC  0BF1               	decfsz	??_LCD_data+1,f
   669  07AD  2FAA               	goto	u137
   670  07AE  2FAF               	nop2
   671  07AF                     l16:
   672  07AF  0008               	return
   673  07B0                     __end_of_LCD_data:
   674  007E                     btemp	set	126	;btemp
   675  007E                     wtemp0	set	126
   676                           
   677                           	psect	idloc
   678                           
   679                           ;Config register IDLOC0 @ 0x2000
   680                           ;	unspecified, using default values
   681  2000                     	org	8192
   682  2000  3FFF               	dw	16383
   683                           
   684                           ;Config register IDLOC1 @ 0x2001
   685                           ;	unspecified, using default values
   686  2001                     	org	8193
   687  2001  3FFF               	dw	16383
   688                           
   689                           ;Config register IDLOC2 @ 0x2002
   690                           ;	unspecified, using default values
   691  2002                     	org	8194
   692  2002  3FFF               	dw	16383
   693                           
   694                           ;Config register IDLOC3 @ 0x2003
   695                           ;	unspecified, using default values
   696  2003                     	org	8195
   697  2003  3FFF               	dw	16383
   698                           
   699                           	psect	config
   700                           
   701                           ;Config register CONFIG @ 0x2007
   702                           ;	Oscillator Selection bits
   703                           ;	FOSC = HS, HS oscillator
   704                           ;	Watchdog Timer Enable bit
   705                           ;	WDTE = OFF, WDT disabled
   706                           ;	Power-up Timer Enable bit
   707                           ;	PWRTE = OFF, PWRT disabled
   708                           ;	Brown-out Reset Enable bit
   709                           ;	BOREN = ON, BOR enabled
   710                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   711                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   712                           ;	Data EEPROM Memory Code Protection bit
   713                           ;	CPD = OFF, Data EEPROM code protection off
   714                           ;	Flash Program Memory Write Enable bits
   715                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   716                           ;	In-Circuit Debugger Mode bit
   717                           ;	DEBUG = 0x1, unprogrammed default
   718                           ;	Flash Program Memory Code Protection bit
   719                           ;	CP = OFF, Code protection off
   720  2007                     	org	8199
   721  2007  3FFA               	dw	16378

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_LCD_init
    _LCD_init->_LCD_Command

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0      60
                           _LCD_data
                           _LCD_init
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0      30
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          3     3      0      30
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_data                                             3     3      0      30
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_data
   _LCD_init
     _LCD_Command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Apr 19 10:47:23 2022

           ?_LCD_Command 0070                       l13 07FB                       l16 07AF  
                     l24 0739                       l19 0763                       u15 07DA  
                     u25 078E                       u37 075E                       u47 07B8  
                     u57 07C6                       u67 07D2                       u77 07EA  
                     u87 07F6                       u97 076C                      l620 07C1  
                    l630 07E6                      l622 07CB                      l640 0775  
                    l632 07EF                      l624 07D7                      l616 07B1  
                    l650 079A                      l642 077F                      l634 07F2  
                    l626 07E4                      l618 07B4                      l652 07A3  
                    l644 078B                      l636 0765                      l628 07E5  
                    l660 072B                      l654 07A6                      l646 0798  
                    l638 0768                      l662 072E                      l648 0799  
                    l656 073C                      l664 0733                      l658 075A  
                    _RD1 0041                      _RD2 0042                      u107 077A  
                    u117 0786                      u127 079E                      u137 07AA  
                   _main 072B                     btemp 007E                     start 0000  
       __end_of_LCD_data 07B0         __end_of_LCD_init 0764                    ?_main 0070  
                  _PORTD 0008                    _TRISD 0088                    status 0003  
                  wtemp0 007E          __initialization 07FC             __end_of_main 073C  
                 ??_main 0075             LCD_data@data 0072     __size_of_LCD_Command 004C  
__end_of__initialization 07FC                ?_LCD_data 0070                ?_LCD_init 0070  
         __pcstackCOMMON 0070               ??_LCD_data 0070               ??_LCD_init 0073  
             __pmaintext 072B                  __ptext1 073C                  __ptext2 07B0  
                __ptext3 0764     end_of_initialization 07FC           LCD_Command@cmd 0072  
      __size_of_LCD_data 004C        __size_of_LCD_init 0028            ??_LCD_Command 0070  
    start_initialization 07FC      __end_of_LCD_Command 07FC                ___latbits 0002  
               _LCD_data 0764                 _LCD_init 073C              _LCD_Command 07B0  
          __size_of_main 0011  
