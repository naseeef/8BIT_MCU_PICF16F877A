

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon May 09 12:41:28 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16LF877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	text5,local,class=CODE,merge=1,delta=2
    12                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.40
    17                           ; Generated 17/11/2021 GMT
    18                           ; 
    19                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16LF877A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0098                     	;# 
   100  0099                     	;# 
   101  009C                     	;# 
   102  009D                     	;# 
   103  009E                     	;# 
   104  009F                     	;# 
   105  010C                     	;# 
   106  010D                     	;# 
   107  010E                     	;# 
   108  010F                     	;# 
   109  018C                     	;# 
   110  018D                     	;# 
   111  0000                     	;# 
   112  0001                     	;# 
   113  0002                     	;# 
   114  0003                     	;# 
   115  0004                     	;# 
   116  0005                     	;# 
   117  0006                     	;# 
   118  0007                     	;# 
   119  0008                     	;# 
   120  0009                     	;# 
   121  000A                     	;# 
   122  000B                     	;# 
   123  000C                     	;# 
   124  000D                     	;# 
   125  000E                     	;# 
   126  000E                     	;# 
   127  000F                     	;# 
   128  0010                     	;# 
   129  0011                     	;# 
   130  0012                     	;# 
   131  0013                     	;# 
   132  0014                     	;# 
   133  0015                     	;# 
   134  0015                     	;# 
   135  0016                     	;# 
   136  0017                     	;# 
   137  0018                     	;# 
   138  0019                     	;# 
   139  001A                     	;# 
   140  001B                     	;# 
   141  001B                     	;# 
   142  001C                     	;# 
   143  001D                     	;# 
   144  001E                     	;# 
   145  001F                     	;# 
   146  0081                     	;# 
   147  0085                     	;# 
   148  0086                     	;# 
   149  0087                     	;# 
   150  0088                     	;# 
   151  0089                     	;# 
   152  008C                     	;# 
   153  008D                     	;# 
   154  008E                     	;# 
   155  0091                     	;# 
   156  0092                     	;# 
   157  0093                     	;# 
   158  0094                     	;# 
   159  0098                     	;# 
   160  0099                     	;# 
   161  009C                     	;# 
   162  009D                     	;# 
   163  009E                     	;# 
   164  009F                     	;# 
   165  010C                     	;# 
   166  010D                     	;# 
   167  010E                     	;# 
   168  010F                     	;# 
   169  018C                     	;# 
   170  018D                     	;# 
   171  0008                     _PORTD	set	8
   172  001A                     _RCREG	set	26
   173  0019                     _TXREG	set	25
   174  0018                     _RCSTA	set	24
   175  0043                     _RD3	set	67
   176  0042                     _RD2	set	66
   177  0041                     _RD1	set	65
   178  0065                     _RCIF	set	101
   179  0064                     _TXIF	set	100
   180  0086                     _TRISB	set	134
   181  0088                     _TRISD	set	136
   182  0099                     _SPBRG	set	153
   183  0098                     _TXSTA	set	152
   184  0087                     _TRISC	set	135
   185                           
   186                           	psect	cinit
   187  07FC                     start_initialization:	
   188                           ; #config settings
   189                           
   190  07FC                     __initialization:
   191  07FC                     end_of_initialization:	
   192                           ;End of C runtime variable initialization code
   193                           
   194  07FC                     __end_of__initialization:
   195  07FC  0183               	clrf	3
   196  07FD  120A  118A  2F1B   	ljmp	_main	;jump to C main() function
   197                           
   198                           	psect	cstackCOMMON
   199  0070                     __pcstackCOMMON:
   200  0070                     ?_ser_int:
   201  0070                     ??_ser_int:	
   202                           ; 1 bytes @ 0x0
   203                           
   204  0070                     ?_rx:	
   205                           ; 1 bytes @ 0x0
   206                           
   207  0070                     ??_rx:	
   208                           ; 1 bytes @ 0x0
   209                           
   210  0070                     ?_LCD_Command:	
   211                           ; 1 bytes @ 0x0
   212                           
   213  0070                     ??_LCD_Command:	
   214                           ; 1 bytes @ 0x0
   215                           
   216  0070                     ?_LCD_data:	
   217                           ; 1 bytes @ 0x0
   218                           
   219  0070                     ??_LCD_data:	
   220                           ; 1 bytes @ 0x0
   221                           
   222  0070                     ?_main:	
   223                           ; 1 bytes @ 0x0
   224                           
   225  0070                     ?_LCD_init:	
   226                           ; 1 bytes @ 0x0
   227                           
   228                           
   229                           ; 2 bytes @ 0x0
   230  0070                     	ds	2
   231  0072                     LCD_Command@cmd:
   232  0072                     LCD_data@data:	
   233                           ; 1 bytes @ 0x2
   234                           
   235                           
   236                           ; 1 bytes @ 0x2
   237  0072                     	ds	1
   238  0073                     ??_LCD_init:
   239                           
   240                           ; 1 bytes @ 0x3
   241  0073                     	ds	2
   242  0075                     ??_main:
   243                           
   244                           ; 1 bytes @ 0x5
   245  0075                     	ds	1
   246  0076                     main@rec_char:
   247                           
   248                           ; 1 bytes @ 0x6
   249  0076                     	ds	1
   250                           
   251                           	psect	maintext
   252  071B                     __pmaintext:	
   253 ;;
   254 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   255 ;;
   256 ;; *************** function _main *****************
   257 ;; Defined at:
   258 ;;		line 91 in file "main.c"
   259 ;; Parameters:    Size  Location     Type
   260 ;;		None
   261 ;; Auto vars:     Size  Location     Type
   262 ;;  rec_char        1    6[COMMON] unsigned char 
   263 ;; Return value:  Size  Location     Type
   264 ;;                  1    wreg      void 
   265 ;; Registers used:
   266 ;;		wreg, status,2, status,0, pclath, cstack
   267 ;; Tracked objects:
   268 ;;		On entry : B00/0
   269 ;;		On exit  : 0/0
   270 ;;		Unchanged: 0/0
   271 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   272 ;;      Params:         0       0       0       0       0
   273 ;;      Locals:         1       0       0       0       0
   274 ;;      Temps:          1       0       0       0       0
   275 ;;      Totals:         2       0       0       0       0
   276 ;;Total ram usage:        2 bytes
   277 ;; Hardware stack levels required when called: 2
   278 ;; This function calls:
   279 ;;		_LCD_data
   280 ;;		_LCD_init
   281 ;;		_rx
   282 ;;		_ser_int
   283 ;; This function is called by:
   284 ;;		Startup code after reset
   285 ;; This function uses a non-reentrant model
   286 ;;
   287                           
   288                           
   289                           ;psect for function _main
   290  071B                     _main:
   291  071B                     l705:	
   292                           ;incstack = 0
   293                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   294                           
   295                           
   296                           ;main.c: 93: char rec_char;;main.c: 94: TRISD=0x00;
   297  071B  1683               	bsf	3,5	;RP0=1, select bank1
   298  071C  1303               	bcf	3,6	;RP1=0, select bank1
   299  071D  0188               	clrf	8	;volatile
   300                           
   301                           ;main.c: 95: TRISB=0X00;
   302  071E  0186               	clrf	6	;volatile
   303  071F                     l707:
   304                           
   305                           ;main.c: 96: LCD_init();
   306  071F  120A  118A  273A  120A  118A  	fcall	_LCD_init
   307  0724                     l709:
   308                           
   309                           ;main.c: 97: ser_int();
   310  0724  120A  118A  270C  120A  118A  	fcall	_ser_int
   311  0729                     l711:
   312                           
   313                           ;main.c: 98: rec_char= rx();
   314  0729  120A  118A  2703  120A  118A  	fcall	_rx
   315  072E  00F5               	movwf	??_main
   316  072F  0875               	movf	??_main,w
   317  0730  00F6               	movwf	main@rec_char
   318  0731                     l713:
   319                           
   320                           ;main.c: 99:  LCD_data(rec_char);
   321  0731  0876               	movf	main@rec_char,w
   322  0732  120A  118A  2762  120A  118A  	fcall	_LCD_data
   323  0737                     l59:
   324  0737  120A  118A  2800   	ljmp	start
   325  073A                     __end_of_main:
   326                           
   327                           	psect	text1
   328  070C                     __ptext1:	
   329 ;; *************** function _ser_int *****************
   330 ;; Defined at:
   331 ;;		line 26 in file "main.c"
   332 ;; Parameters:    Size  Location     Type
   333 ;;		None
   334 ;; Auto vars:     Size  Location     Type
   335 ;;		None
   336 ;; Return value:  Size  Location     Type
   337 ;;                  1    wreg      void 
   338 ;; Registers used:
   339 ;;		wreg
   340 ;; Tracked objects:
   341 ;;		On entry : 0/0
   342 ;;		On exit  : 0/0
   343 ;;		Unchanged: 0/0
   344 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   345 ;;      Params:         0       0       0       0       0
   346 ;;      Locals:         0       0       0       0       0
   347 ;;      Temps:          0       0       0       0       0
   348 ;;      Totals:         0       0       0       0       0
   349 ;;Total ram usage:        0 bytes
   350 ;; Hardware stack levels used: 1
   351 ;; This function calls:
   352 ;;		Nothing
   353 ;; This function is called by:
   354 ;;		_main
   355 ;; This function uses a non-reentrant model
   356 ;;
   357                           
   358                           
   359                           ;psect for function _ser_int
   360  070C                     _ser_int:
   361  070C                     l671:	
   362                           ;incstack = 0
   363                           ; Regs used in _ser_int: [wreg]
   364                           
   365                           
   366                           ;main.c: 28:  TRISC=0x80;
   367  070C  3080               	movlw	128
   368  070D  1683               	bsf	3,5	;RP0=1, select bank1
   369  070E  1303               	bcf	3,6	;RP1=0, select bank1
   370  070F  0087               	movwf	7	;volatile
   371                           
   372                           ;main.c: 29:  TXSTA= 0x20;
   373  0710  3020               	movlw	32
   374  0711  0098               	movwf	24	;volatile
   375                           
   376                           ;main.c: 30:  RCSTA= 0b10010000;
   377  0712  3090               	movlw	144
   378  0713  1283               	bcf	3,5	;RP0=0, select bank0
   379  0714  1303               	bcf	3,6	;RP1=0, select bank0
   380  0715  0098               	movwf	24	;volatile
   381                           
   382                           ;main.c: 31:  SPBRG=31;
   383  0716  301F               	movlw	31
   384  0717  1683               	bsf	3,5	;RP0=1, select bank1
   385  0718  1303               	bcf	3,6	;RP1=0, select bank1
   386  0719  0099               	movwf	25	;volatile
   387  071A                     l33:
   388  071A  0008               	return
   389  071B                     __end_of_ser_int:
   390                           
   391                           	psect	text2
   392  0703                     __ptext2:	
   393 ;; *************** function _rx *****************
   394 ;; Defined at:
   395 ;;		line 40 in file "main.c"
   396 ;; Parameters:    Size  Location     Type
   397 ;;		None
   398 ;; Auto vars:     Size  Location     Type
   399 ;;		None
   400 ;; Return value:  Size  Location     Type
   401 ;;                  1    wreg      unsigned char 
   402 ;; Registers used:
   403 ;;		wreg
   404 ;; Tracked objects:
   405 ;;		On entry : 0/0
   406 ;;		On exit  : 0/0
   407 ;;		Unchanged: 0/0
   408 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   409 ;;      Params:         0       0       0       0       0
   410 ;;      Locals:         0       0       0       0       0
   411 ;;      Temps:          0       0       0       0       0
   412 ;;      Totals:         0       0       0       0       0
   413 ;;Total ram usage:        0 bytes
   414 ;; Hardware stack levels used: 1
   415 ;; This function calls:
   416 ;;		Nothing
   417 ;; This function is called by:
   418 ;;		_main
   419 ;; This function uses a non-reentrant model
   420 ;;
   421                           
   422                           
   423                           ;psect for function _rx
   424  0703                     _rx:
   425  0703                     l673:	
   426                           ;incstack = 0
   427                           ; Regs used in _rx: [wreg]
   428                           
   429  0703                     l42:	
   430                           ;main.c: 42:  while(!RCIF);
   431                           
   432  0703  1283               	bcf	3,5	;RP0=0, select bank0
   433  0704  1303               	bcf	3,6	;RP1=0, select bank0
   434  0705  1E8C               	btfss	12,5	;volatile
   435  0706  2F08               	goto	u21
   436  0707  2F09               	goto	u20
   437  0708                     u21:
   438  0708  2F03               	goto	l42
   439  0709                     u20:
   440  0709                     l44:
   441                           
   442                           ;main.c: 43:  RCIF=0;
   443  0709  128C               	bcf	12,5	;volatile
   444  070A                     l675:
   445                           
   446                           ;main.c: 44:  return RCREG;
   447  070A  081A               	movf	26,w	;volatile
   448  070B                     l45:
   449  070B  0008               	return
   450  070C                     __end_of_rx:
   451                           
   452                           	psect	text3
   453  073A                     __ptext3:	
   454 ;; *************** function _LCD_init *****************
   455 ;; Defined at:
   456 ;;		line 80 in file "main.c"
   457 ;; Parameters:    Size  Location     Type
   458 ;;		None
   459 ;; Auto vars:     Size  Location     Type
   460 ;;		None
   461 ;; Return value:  Size  Location     Type
   462 ;;                  2   53[None  ] int 
   463 ;; Registers used:
   464 ;;		wreg, status,2, status,0, pclath, cstack
   465 ;; Tracked objects:
   466 ;;		On entry : 0/0
   467 ;;		On exit  : 0/0
   468 ;;		Unchanged: 0/0
   469 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   470 ;;      Params:         0       0       0       0       0
   471 ;;      Locals:         0       0       0       0       0
   472 ;;      Temps:          2       0       0       0       0
   473 ;;      Totals:         2       0       0       0       0
   474 ;;Total ram usage:        2 bytes
   475 ;; Hardware stack levels used: 1
   476 ;; Hardware stack levels required when called: 1
   477 ;; This function calls:
   478 ;;		_LCD_Command
   479 ;; This function is called by:
   480 ;;		_main
   481 ;; This function uses a non-reentrant model
   482 ;;
   483                           
   484                           
   485                           ;psect for function _LCD_init
   486  073A                     _LCD_init:
   487  073A                     l699:	
   488                           ;incstack = 0
   489                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
   490                           
   491                           
   492                           ;main.c: 83: LCD_Command (0x02);
   493  073A  3002               	movlw	2
   494  073B  120A  118A  27AF  120A  118A  	fcall	_LCD_Command
   495                           
   496                           ;main.c: 84: LCD_Command (0x28);
   497  0740  3028               	movlw	40
   498  0741  120A  118A  27AF  120A  118A  	fcall	_LCD_Command
   499                           
   500                           ;main.c: 85: LCD_Command (0x80);
   501  0746  3080               	movlw	128
   502  0747  120A  118A  27AF  120A  118A  	fcall	_LCD_Command
   503                           
   504                           ;main.c: 86: LCD_Command (0x0C);
   505  074C  300C               	movlw	12
   506  074D  120A  118A  27AF  120A  118A  	fcall	_LCD_Command
   507                           
   508                           ;main.c: 87: LCD_Command (0x06);
   509  0752  3006               	movlw	6
   510  0753  120A  118A  27AF  120A  118A  	fcall	_LCD_Command
   511  0758                     l701:
   512                           
   513                           ;main.c: 88: _delay((unsigned long)((10)*(20000000/4000.0)));
   514  0758  3041               	movlw	65
   515  0759  00F4               	movwf	??_LCD_init+1
   516  075A  30EE               	movlw	238
   517  075B  00F3               	movwf	??_LCD_init
   518  075C                     u57:
   519  075C  0BF3               	decfsz	??_LCD_init,f
   520  075D  2F5C               	goto	u57
   521  075E  0BF4               	decfsz	??_LCD_init+1,f
   522  075F  2F5C               	goto	u57
   523  0760  0000               	nop
   524  0761                     l54:
   525  0761  0008               	return
   526  0762                     __end_of_LCD_init:
   527                           
   528                           	psect	text4
   529  07AF                     __ptext4:	
   530 ;; *************** function _LCD_Command *****************
   531 ;; Defined at:
   532 ;;		line 46 in file "main.c"
   533 ;; Parameters:    Size  Location     Type
   534 ;;  cmd             1    wreg     unsigned char 
   535 ;; Auto vars:     Size  Location     Type
   536 ;;  cmd             1    2[COMMON] unsigned char 
   537 ;; Return value:  Size  Location     Type
   538 ;;                  1    wreg      void 
   539 ;; Registers used:
   540 ;;		wreg, status,2, status,0
   541 ;; Tracked objects:
   542 ;;		On entry : 0/0
   543 ;;		On exit  : 0/0
   544 ;;		Unchanged: 0/0
   545 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   546 ;;      Params:         0       0       0       0       0
   547 ;;      Locals:         1       0       0       0       0
   548 ;;      Temps:          2       0       0       0       0
   549 ;;      Totals:         3       0       0       0       0
   550 ;;Total ram usage:        3 bytes
   551 ;; Hardware stack levels used: 1
   552 ;; This function calls:
   553 ;;		Nothing
   554 ;; This function is called by:
   555 ;;		_LCD_init
   556 ;; This function uses a non-reentrant model
   557 ;;
   558                           
   559                           
   560                           ;psect for function _LCD_Command
   561  07AF                     _LCD_Command:
   562                           
   563                           ;incstack = 0
   564                           ; Regs used in _LCD_Command: [wreg+status,2+status,0]
   565                           ;LCD_Command@cmd stored from wreg
   566  07AF  00F2               	movwf	LCD_Command@cmd
   567  07B0                     l651:
   568                           
   569                           ;main.c: 46: void LCD_Command(unsigned char cmd);main.c: 47: {;main.c: 48: RD1=0;
   570  07B0  1283               	bcf	3,5	;RP0=0, select bank0
   571  07B1  1303               	bcf	3,6	;RP1=0, select bank0
   572  07B2  1088               	bcf	8,1	;volatile
   573                           
   574                           ;main.c: 49: RD2=0;
   575  07B3  1108               	bcf	8,2	;volatile
   576  07B4                     l653:
   577                           
   578                           ;main.c: 50: _delay((unsigned long)((10)*(20000000/4000.0)));
   579  07B4  3041               	movlw	65
   580  07B5  00F1               	movwf	??_LCD_Command+1
   581  07B6  30EE               	movlw	238
   582  07B7  00F0               	movwf	??_LCD_Command
   583  07B8                     u67:
   584  07B8  0BF0               	decfsz	??_LCD_Command,f
   585  07B9  2FB8               	goto	u67
   586  07BA  0BF1               	decfsz	??_LCD_Command+1,f
   587  07BB  2FB8               	goto	u67
   588  07BC  0000               	nop
   589                           
   590                           ;main.c: 51: PORTD=(cmd);
   591  07BD  0872               	movf	LCD_Command@cmd,w
   592  07BE  1283               	bcf	3,5	;RP0=0, select bank0
   593  07BF  1303               	bcf	3,6	;RP1=0, select bank0
   594  07C0  0088               	movwf	8	;volatile
   595  07C1                     l655:
   596                           
   597                           ;main.c: 52: RD3=1;
   598  07C1  1588               	bsf	8,3	;volatile
   599                           
   600                           ;main.c: 53: _delay((unsigned long)((10)*(20000000/4000.0)));
   601  07C2  3041               	movlw	65
   602  07C3  00F1               	movwf	??_LCD_Command+1
   603  07C4  30EE               	movlw	238
   604  07C5  00F0               	movwf	??_LCD_Command
   605  07C6                     u77:
   606  07C6  0BF0               	decfsz	??_LCD_Command,f
   607  07C7  2FC6               	goto	u77
   608  07C8  0BF1               	decfsz	??_LCD_Command+1,f
   609  07C9  2FC6               	goto	u77
   610  07CA  0000               	nop
   611  07CB                     l657:
   612                           
   613                           ;main.c: 54: RD3=0;
   614  07CB  1283               	bcf	3,5	;RP0=0, select bank0
   615  07CC  1303               	bcf	3,6	;RP1=0, select bank0
   616  07CD  1188               	bcf	8,3	;volatile
   617                           
   618                           ;main.c: 55: _delay((unsigned long)((10)*(20000000/4000.0)));
   619  07CE  3041               	movlw	65
   620  07CF  00F1               	movwf	??_LCD_Command+1
   621  07D0  30EE               	movlw	238
   622  07D1  00F0               	movwf	??_LCD_Command
   623  07D2                     u87:
   624  07D2  0BF0               	decfsz	??_LCD_Command,f
   625  07D3  2FD2               	goto	u87
   626  07D4  0BF1               	decfsz	??_LCD_Command+1,f
   627  07D5  2FD2               	goto	u87
   628  07D6  0000               	nop
   629  07D7                     l659:
   630                           
   631                           ;main.c: 56: PORTD=(cmd<<4);
   632  07D7  0872               	movf	LCD_Command@cmd,w
   633  07D8  00F0               	movwf	??_LCD_Command
   634  07D9  3003               	movlw	3
   635  07DA                     u15:
   636  07DA  1003               	clrc
   637  07DB  0DF0               	rlf	??_LCD_Command,f
   638  07DC  3EFF               	addlw	-1
   639  07DD  1D03               	skipz
   640  07DE  2FDA               	goto	u15
   641  07DF  1003               	clrc
   642  07E0  0D70               	rlf	??_LCD_Command,w
   643  07E1  1283               	bcf	3,5	;RP0=0, select bank0
   644  07E2  1303               	bcf	3,6	;RP1=0, select bank0
   645  07E3  0088               	movwf	8	;volatile
   646  07E4                     l661:
   647                           
   648                           ;main.c: 57: RD2=0;
   649  07E4  1108               	bcf	8,2	;volatile
   650  07E5                     l663:
   651                           
   652                           ;main.c: 58: RD3=1;
   653  07E5  1588               	bsf	8,3	;volatile
   654  07E6                     l665:
   655                           
   656                           ;main.c: 59: _delay((unsigned long)((10)*(20000000/4000.0)));
   657  07E6  3041               	movlw	65
   658  07E7  00F1               	movwf	??_LCD_Command+1
   659  07E8  30EE               	movlw	238
   660  07E9  00F0               	movwf	??_LCD_Command
   661  07EA                     u97:
   662  07EA  0BF0               	decfsz	??_LCD_Command,f
   663  07EB  2FEA               	goto	u97
   664  07EC  0BF1               	decfsz	??_LCD_Command+1,f
   665  07ED  2FEA               	goto	u97
   666  07EE  0000               	nop
   667  07EF                     l667:
   668                           
   669                           ;main.c: 60: RD3=0;
   670  07EF  1283               	bcf	3,5	;RP0=0, select bank0
   671  07F0  1303               	bcf	3,6	;RP1=0, select bank0
   672  07F1  1188               	bcf	8,3	;volatile
   673  07F2                     l669:
   674                           
   675                           ;main.c: 61: _delay((unsigned long)((10)*(20000000/4000.0)));
   676  07F2  3041               	movlw	65
   677  07F3  00F1               	movwf	??_LCD_Command+1
   678  07F4  30EE               	movlw	238
   679  07F5  00F0               	movwf	??_LCD_Command
   680  07F6                     u107:
   681  07F6  0BF0               	decfsz	??_LCD_Command,f
   682  07F7  2FF6               	goto	u107
   683  07F8  0BF1               	decfsz	??_LCD_Command+1,f
   684  07F9  2FF6               	goto	u107
   685  07FA  0000               	nop
   686  07FB                     l48:
   687  07FB  0008               	return
   688  07FC                     __end_of_LCD_Command:
   689                           
   690                           	psect	text5
   691  0762                     __ptext5:	
   692 ;; *************** function _LCD_data *****************
   693 ;; Defined at:
   694 ;;		line 63 in file "main.c"
   695 ;; Parameters:    Size  Location     Type
   696 ;;  data            1    wreg     unsigned char 
   697 ;; Auto vars:     Size  Location     Type
   698 ;;  data            1    2[COMMON] unsigned char 
   699 ;; Return value:  Size  Location     Type
   700 ;;                  1    wreg      void 
   701 ;; Registers used:
   702 ;;		wreg, status,2, status,0
   703 ;; Tracked objects:
   704 ;;		On entry : 0/0
   705 ;;		On exit  : 0/0
   706 ;;		Unchanged: 0/0
   707 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   708 ;;      Params:         0       0       0       0       0
   709 ;;      Locals:         1       0       0       0       0
   710 ;;      Temps:          2       0       0       0       0
   711 ;;      Totals:         3       0       0       0       0
   712 ;;Total ram usage:        3 bytes
   713 ;; Hardware stack levels used: 1
   714 ;; This function calls:
   715 ;;		Nothing
   716 ;; This function is called by:
   717 ;;		_main
   718 ;; This function uses a non-reentrant model
   719 ;;
   720                           
   721                           
   722                           ;psect for function _LCD_data
   723  0762                     _LCD_data:
   724                           
   725                           ;incstack = 0
   726                           ; Regs used in _LCD_data: [wreg+status,2+status,0]
   727                           ;LCD_data@data stored from wreg
   728  0762  00F2               	movwf	LCD_data@data
   729  0763                     l679:
   730                           
   731                           ;main.c: 63: void LCD_data(unsigned char data);main.c: 64: {;main.c: 65: RD1=0;
   732  0763  1283               	bcf	3,5	;RP0=0, select bank0
   733  0764  1303               	bcf	3,6	;RP1=0, select bank0
   734  0765  1088               	bcf	8,1	;volatile
   735                           
   736                           ;main.c: 66: RD2=1;
   737  0766  1508               	bsf	8,2	;volatile
   738  0767                     l681:
   739                           
   740                           ;main.c: 67: _delay((unsigned long)((10)*(20000000/4000.0)));
   741  0767  3041               	movlw	65
   742  0768  00F1               	movwf	??_LCD_data+1
   743  0769  30EE               	movlw	238
   744  076A  00F0               	movwf	??_LCD_data
   745  076B                     u117:
   746  076B  0BF0               	decfsz	??_LCD_data,f
   747  076C  2F6B               	goto	u117
   748  076D  0BF1               	decfsz	??_LCD_data+1,f
   749  076E  2F6B               	goto	u117
   750  076F  0000               	nop
   751                           
   752                           ;main.c: 68: PORTD=(data);
   753  0770  0872               	movf	LCD_data@data,w
   754  0771  1283               	bcf	3,5	;RP0=0, select bank0
   755  0772  1303               	bcf	3,6	;RP1=0, select bank0
   756  0773  0088               	movwf	8	;volatile
   757  0774                     l683:
   758                           
   759                           ;main.c: 69: RD3=1;
   760  0774  1588               	bsf	8,3	;volatile
   761                           
   762                           ;main.c: 70: _delay((unsigned long)((10)*(20000000/4000.0)));
   763  0775  3041               	movlw	65
   764  0776  00F1               	movwf	??_LCD_data+1
   765  0777  30EE               	movlw	238
   766  0778  00F0               	movwf	??_LCD_data
   767  0779                     u127:
   768  0779  0BF0               	decfsz	??_LCD_data,f
   769  077A  2F79               	goto	u127
   770  077B  0BF1               	decfsz	??_LCD_data+1,f
   771  077C  2F79               	goto	u127
   772  077D  0000               	nop
   773  077E                     l685:
   774                           
   775                           ;main.c: 71: RD3=0;
   776  077E  1283               	bcf	3,5	;RP0=0, select bank0
   777  077F  1303               	bcf	3,6	;RP1=0, select bank0
   778  0780  1188               	bcf	8,3	;volatile
   779                           
   780                           ;main.c: 72: _delay((unsigned long)((10)*(20000000/4000.0)));
   781  0781  3041               	movlw	65
   782  0782  00F1               	movwf	??_LCD_data+1
   783  0783  30EE               	movlw	238
   784  0784  00F0               	movwf	??_LCD_data
   785  0785                     u137:
   786  0785  0BF0               	decfsz	??_LCD_data,f
   787  0786  2F85               	goto	u137
   788  0787  0BF1               	decfsz	??_LCD_data+1,f
   789  0788  2F85               	goto	u137
   790  0789  0000               	nop
   791  078A                     l687:
   792                           
   793                           ;main.c: 73: PORTD=(data<<4);
   794  078A  0872               	movf	LCD_data@data,w
   795  078B  00F0               	movwf	??_LCD_data
   796  078C  3003               	movlw	3
   797  078D                     u35:
   798  078D  1003               	clrc
   799  078E  0DF0               	rlf	??_LCD_data,f
   800  078F  3EFF               	addlw	-1
   801  0790  1D03               	skipz
   802  0791  2F8D               	goto	u35
   803  0792  1003               	clrc
   804  0793  0D70               	rlf	??_LCD_data,w
   805  0794  1283               	bcf	3,5	;RP0=0, select bank0
   806  0795  1303               	bcf	3,6	;RP1=0, select bank0
   807  0796  0088               	movwf	8	;volatile
   808  0797                     l689:
   809                           
   810                           ;main.c: 74: RD2=1;
   811  0797  1508               	bsf	8,2	;volatile
   812  0798                     l691:
   813                           
   814                           ;main.c: 75: RD3=1;
   815  0798  1588               	bsf	8,3	;volatile
   816  0799                     l693:
   817                           
   818                           ;main.c: 76: _delay((unsigned long)((10)*(20000000/4000.0)));
   819  0799  3041               	movlw	65
   820  079A  00F1               	movwf	??_LCD_data+1
   821  079B  30EE               	movlw	238
   822  079C  00F0               	movwf	??_LCD_data
   823  079D                     u147:
   824  079D  0BF0               	decfsz	??_LCD_data,f
   825  079E  2F9D               	goto	u147
   826  079F  0BF1               	decfsz	??_LCD_data+1,f
   827  07A0  2F9D               	goto	u147
   828  07A1  0000               	nop
   829  07A2                     l695:
   830                           
   831                           ;main.c: 77: RD3=0;
   832  07A2  1283               	bcf	3,5	;RP0=0, select bank0
   833  07A3  1303               	bcf	3,6	;RP1=0, select bank0
   834  07A4  1188               	bcf	8,3	;volatile
   835  07A5                     l697:
   836                           
   837                           ;main.c: 78: _delay((unsigned long)((10)*(20000000/4000.0)));
   838  07A5  3041               	movlw	65
   839  07A6  00F1               	movwf	??_LCD_data+1
   840  07A7  30EE               	movlw	238
   841  07A8  00F0               	movwf	??_LCD_data
   842  07A9                     u157:
   843  07A9  0BF0               	decfsz	??_LCD_data,f
   844  07AA  2FA9               	goto	u157
   845  07AB  0BF1               	decfsz	??_LCD_data+1,f
   846  07AC  2FA9               	goto	u157
   847  07AD  0000               	nop
   848  07AE                     l51:
   849  07AE  0008               	return
   850  07AF                     __end_of_LCD_data:
   851  007E                     btemp	set	126	;btemp
   852  007E                     wtemp0	set	126
   853                           
   854                           	psect	idloc
   855                           
   856                           ;Config register IDLOC0 @ 0x2000
   857                           ;	unspecified, using default values
   858  2000                     	org	8192
   859  2000  3FFF               	dw	16383
   860                           
   861                           ;Config register IDLOC1 @ 0x2001
   862                           ;	unspecified, using default values
   863  2001                     	org	8193
   864  2001  3FFF               	dw	16383
   865                           
   866                           ;Config register IDLOC2 @ 0x2002
   867                           ;	unspecified, using default values
   868  2002                     	org	8194
   869  2002  3FFF               	dw	16383
   870                           
   871                           ;Config register IDLOC3 @ 0x2003
   872                           ;	unspecified, using default values
   873  2003                     	org	8195
   874  2003  3FFF               	dw	16383
   875                           
   876                           	psect	config
   877                           
   878                           ;Config register CONFIG @ 0x2007
   879                           ;	Oscillator Selection bits
   880                           ;	FOSC = HS, HS oscillator
   881                           ;	Watchdog Timer Enable bit
   882                           ;	WDTE = OFF, WDT disabled
   883                           ;	Power-up Timer Enable bit
   884                           ;	PWRTE = OFF, PWRT disabled
   885                           ;	Brown-out Reset Enable bit
   886                           ;	BOREN = ON, BOR enabled
   887                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   888                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   889                           ;	Data EEPROM Memory Code Protection bit
   890                           ;	CPD = OFF, Data EEPROM code protection off
   891                           ;	Flash Program Memory Write Enable bits
   892                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   893                           ;	In-Circuit Debugger Mode bit
   894                           ;	DEBUG = 0x1, unprogrammed default
   895                           ;	Flash Program Memory Code Protection bit
   896                           ;	CP = OFF, Code protection off
   897  2007                     	org	8199
   898  2007  3FFA               	dw	16378

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_LCD_init
    _LCD_init->_LCD_Command

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0      75
                                              5 COMMON     2     2      0
                           _LCD_data
                           _LCD_init
                                 _rx
                            _ser_int
 ---------------------------------------------------------------------------------
 (1) _ser_int                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _rx                                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0      30
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          3     3      0      30
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_data                                             3     3      0      30
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_data
   _LCD_init
     _LCD_Command
   _rx
   _ser_int

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon May 09 12:41:28 2022

           ?_LCD_Command 0070                       l33 071A                       l42 0703  
                     l51 07AE                       l44 0709                       l45 070B  
                     l54 0761                       l48 07FB                       l59 0737  
                     u20 0709                       u21 0708                       u15 07DA  
                     u35 078D                       u57 075C                       u67 07B8  
                     u77 07C6                       u87 07D2                       u97 07EA  
                     _rx 0703                      l701 0758                      l711 0729  
                    ?_rx 0070                      l713 0731                      l705 071B  
                    l651 07B0                      l707 071F                      l661 07E4  
                    l653 07B4                      l709 0724                      l663 07E5  
                    l655 07C1                      l671 070C                      l681 0767  
                    l665 07E6                      l657 07CB                      l673 0703  
                    l691 0798                      l683 0774                      l667 07EF  
                    l659 07D7                      l675 070A                      l693 0799  
                    l685 077E                      l669 07F2                      l695 07A2  
                    l687 078A                      l679 0763                      l697 07A5  
                    l689 0797                      l699 073A                      _RD1 0041  
                    _RD2 0042                      _RD3 0043                      u107 07F6  
                    u117 076B                      u127 0779                      u137 0785  
                    u147 079D                      u157 07A9                     ??_rx 0070  
                   _RCIF 0065                     _TXIF 0064                     _main 071B  
                   btemp 007E                     start 0000         __end_of_LCD_data 07AF  
       __end_of_LCD_init 0762                    ?_main 0070                    _RCREG 001A  
                  _RCSTA 0018                    _SPBRG 0099                    _PORTD 0008  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TXREG 0019                    _TXSTA 0098             main@rec_char 0076  
        __end_of_ser_int 071B                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 073A                   ??_main 0075  
           LCD_data@data 0072     __size_of_LCD_Command 004D                ??_ser_int 0070  
__end_of__initialization 07FC                ?_LCD_data 0070                ?_LCD_init 0070  
         __pcstackCOMMON 0070               __end_of_rx 070C               ??_LCD_data 0070  
             ??_LCD_init 0073               __pmaintext 071B                  __ptext1 070C  
                __ptext2 0703                  __ptext3 073A                  __ptext4 07AF  
                __ptext5 0762                  _ser_int 070C     end_of_initialization 07FC  
         LCD_Command@cmd 0072        __size_of_LCD_data 004D        __size_of_LCD_init 0028  
          ??_LCD_Command 0070      start_initialization 07FC      __end_of_LCD_Command 07FC  
              ___latbits 0002                 ?_ser_int 0070              __size_of_rx 0009  
               _LCD_data 0762                 _LCD_init 073A              _LCD_Command 07AF  
       __size_of_ser_int 000F            __size_of_main 001F  
