

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon Apr 18 11:38:29 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.40
    19                           ; Generated 17/11/2021 GMT
    20                           ; 
    21                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F877A Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009C                     	;# 
   104  009D                     	;# 
   105  009E                     	;# 
   106  009F                     	;# 
   107  010C                     	;# 
   108  010D                     	;# 
   109  010E                     	;# 
   110  010F                     	;# 
   111  018C                     	;# 
   112  018D                     	;# 
   113  0000                     	;# 
   114  0001                     	;# 
   115  0002                     	;# 
   116  0003                     	;# 
   117  0004                     	;# 
   118  0005                     	;# 
   119  0006                     	;# 
   120  0007                     	;# 
   121  0008                     	;# 
   122  0009                     	;# 
   123  000A                     	;# 
   124  000B                     	;# 
   125  000C                     	;# 
   126  000D                     	;# 
   127  000E                     	;# 
   128  000E                     	;# 
   129  000F                     	;# 
   130  0010                     	;# 
   131  0011                     	;# 
   132  0012                     	;# 
   133  0013                     	;# 
   134  0014                     	;# 
   135  0015                     	;# 
   136  0015                     	;# 
   137  0016                     	;# 
   138  0017                     	;# 
   139  0018                     	;# 
   140  0019                     	;# 
   141  001A                     	;# 
   142  001B                     	;# 
   143  001B                     	;# 
   144  001C                     	;# 
   145  001D                     	;# 
   146  001E                     	;# 
   147  001F                     	;# 
   148  0081                     	;# 
   149  0085                     	;# 
   150  0086                     	;# 
   151  0087                     	;# 
   152  0088                     	;# 
   153  0089                     	;# 
   154  008C                     	;# 
   155  008D                     	;# 
   156  008E                     	;# 
   157  0091                     	;# 
   158  0092                     	;# 
   159  0093                     	;# 
   160  0094                     	;# 
   161  0098                     	;# 
   162  0099                     	;# 
   163  009C                     	;# 
   164  009D                     	;# 
   165  009E                     	;# 
   166  009F                     	;# 
   167  010C                     	;# 
   168  010D                     	;# 
   169  010E                     	;# 
   170  010F                     	;# 
   171  018C                     	;# 
   172  018D                     	;# 
   173                           
   174                           	psect	idataBANK0
   175  0710                     __pidataBANK0:
   176                           
   177                           ;initializer for main@F884
   178  0710  3467               	retlw	103
   179  0711  346F               	retlw	111
   180  0712  346F               	retlw	111
   181  0713  3464               	retlw	100
   182  0714  3420               	retlw	32
   183  0715  346D               	retlw	109
   184  0716  346F               	retlw	111
   185  0717  3472               	retlw	114
   186  0718  346E               	retlw	110
   187  0719  3469               	retlw	105
   188  071A  346E               	retlw	110
   189  071B  3467               	retlw	103
   190  071C  3400               	retlw	0
   191  0006                     _PORTB	set	6
   192  0039                     _RC1	set	57
   193  0038                     _RC0	set	56
   194  0087                     _TRISC	set	135
   195  0086                     _TRISB	set	134
   196                           
   197                           	psect	cinit
   198  07EE                     start_initialization:	
   199                           ; #config settings
   200                           
   201  07EE                     __initialization:
   202                           
   203                           ; Initialize objects allocated to BANK0
   204  07EE  1383               	bcf	3,7	;select IRP bank0
   205  07EF  303C               	movlw	low (__pdataBANK0+13)
   206  07F0  00FD               	movwf	btemp+-1
   207  07F1  3007               	movlw	high __pidataBANK0
   208  07F2  00FE               	movwf	btemp
   209  07F3  3010               	movlw	low __pidataBANK0
   210  07F4  00FF               	movwf	btemp+1
   211  07F5  302F               	movlw	low __pdataBANK0
   212  07F6  0084               	movwf	4
   213  07F7  120A  118A  2721  120A  118A  	fcall	init_ram0
   214  07FC                     end_of_initialization:	
   215                           ;End of C runtime variable initialization code
   216                           
   217  07FC                     __end_of__initialization:
   218  07FC  0183               	clrf	3
   219  07FD  120A  118A  2FA8   	ljmp	_main	;jump to C main() function
   220                           
   221                           	psect	dataBANK0
   222  002F                     __pdataBANK0:
   223  002F                     main@F884:
   224  002F                     	ds	13
   225                           
   226                           	psect	inittext
   227  071D                     init_fetch0:	
   228                           ;	Called with low address in FSR and high address in W
   229                           
   230  071D  087E               	movf	btemp,w
   231  071E  008A               	movwf	10
   232  071F  087F               	movf	btemp+1,w
   233  0720  0082               	movwf	2
   234  0721                     init_ram0:	
   235                           ;Called with:
   236                           ;	high address of idata address in btemp 
   237                           ;	low address of idata address in btemp+1 
   238                           ;	low address of data in FSR
   239                           ;	high address + 1 of data in btemp-1
   240                           
   241  0721  120A  118A  271D  120A  118A  	fcall	init_fetch0
   242  0726  0080               	movwf	0
   243  0727  0A84               	incf	4,f
   244  0728  0804               	movf	4,w
   245  0729  067D               	xorwf	btemp+-1,w
   246  072A  1903               	btfsc	3,2
   247  072B  3400               	retlw	0
   248  072C  0AFF               	incf	btemp+1,f
   249  072D  1903               	btfsc	3,2
   250  072E  0AFE               	incf	btemp,f
   251  072F  2F21               	goto	init_ram0
   252                           
   253                           	psect	cstackCOMMON
   254  0070                     __pcstackCOMMON:
   255  0070                     ?_LCD_Command:
   256  0070                     ??_LCD_Command:	
   257                           ; 1 bytes @ 0x0
   258                           
   259  0070                     ?_LCD_data:	
   260                           ; 1 bytes @ 0x0
   261                           
   262  0070                     ??_LCD_data:	
   263                           ; 1 bytes @ 0x0
   264                           
   265  0070                     ?_LCD_init:	
   266                           ; 1 bytes @ 0x0
   267                           
   268  0070                     ?_main:	
   269                           ; 1 bytes @ 0x0
   270                           
   271                           
   272                           ; 1 bytes @ 0x0
   273  0070                     	ds	2
   274  0072                     LCD_Command@cmd:
   275  0072                     LCD_data@data:	
   276                           ; 1 bytes @ 0x2
   277                           
   278                           
   279                           ; 1 bytes @ 0x2
   280  0072                     	ds	1
   281  0073                     ??_LCD_init:
   282                           
   283                           ; 1 bytes @ 0x3
   284  0073                     	ds	2
   285  0075                     ??_main:
   286                           
   287                           ; 1 bytes @ 0x5
   288  0075                     	ds	4
   289                           
   290                           	psect	cstackBANK0
   291  0020                     __pcstackBANK0:
   292  0020                     main@a:
   293                           
   294                           ; 13 bytes @ 0x0
   295  0020                     	ds	13
   296  002D                     main@i:
   297                           
   298                           ; 2 bytes @ 0xD
   299  002D                     	ds	2
   300                           
   301                           	psect	maintext
   302  07A8                     __pmaintext:	
   303 ;;
   304 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   305 ;;
   306 ;; *************** function _main *****************
   307 ;; Defined at:
   308 ;;		line 101 in file "main.c"
   309 ;; Parameters:    Size  Location     Type
   310 ;;		None
   311 ;; Auto vars:     Size  Location     Type
   312 ;;  a              13    0[BANK0 ] unsigned char [13]
   313 ;;  i               2   13[BANK0 ] int 
   314 ;; Return value:  Size  Location     Type
   315 ;;                  1    wreg      void 
   316 ;; Registers used:
   317 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   318 ;; Tracked objects:
   319 ;;		On entry : B00/0
   320 ;;		On exit  : 0/0
   321 ;;		Unchanged: 0/0
   322 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   323 ;;      Params:         0       0       0       0       0
   324 ;;      Locals:         0      15       0       0       0
   325 ;;      Temps:          4       0       0       0       0
   326 ;;      Totals:         4      15       0       0       0
   327 ;;Total ram usage:       19 bytes
   328 ;; Hardware stack levels required when called: 2
   329 ;; This function calls:
   330 ;;		_LCD_Command
   331 ;;		_LCD_data
   332 ;;		_LCD_init
   333 ;; This function is called by:
   334 ;;		Startup code after reset
   335 ;; This function uses a non-reentrant model
   336 ;;
   337                           
   338                           
   339                           ;psect for function _main
   340  07A8                     _main:
   341  07A8                     l679:	
   342                           ;incstack = 0
   343                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   344                           
   345                           
   346                           ;main.c: 103: TRISB=0x00;
   347  07A8  1683               	bsf	3,5	;RP0=1, select bank1
   348  07A9  1303               	bcf	3,6	;RP1=0, select bank1
   349  07AA  0186               	clrf	6	;volatile
   350                           
   351                           ;main.c: 104: TRISC=0X00;
   352  07AB  0187               	clrf	7	;volatile
   353  07AC                     l681:
   354                           
   355                           ;main.c: 105: LCD_init();
   356  07AC  120A  118A  2780  120A  118A  	fcall	_LCD_init
   357  07B1                     l683:
   358                           
   359                           ;main.c: 106: LCD_Command(0x80);
   360  07B1  3080               	movlw	128
   361  07B2  120A  118A  2758  120A  118A  	fcall	_LCD_Command
   362  07B7                     l685:
   363                           
   364                           ;main.c: 107: char a[]={"good morning"};
   365  07B7  3020               	movlw	main@a& (0+255)
   366  07B8  0084               	movwf	4
   367  07B9  302F               	movlw	low main@F884
   368  07BA  00F5               	movwf	??_main
   369  07BB  0804               	movf	4,w
   370  07BC  00F6               	movwf	??_main+1
   371  07BD  300D               	movlw	13
   372  07BE  00F7               	movwf	??_main+2
   373  07BF                     u30:
   374  07BF  0875               	movf	??_main,w
   375  07C0  0084               	movwf	4
   376  07C1  1383               	bcf	3,7	;select IRP bank0
   377  07C2  0800               	movf	0,w
   378  07C3  00F8               	movwf	??_main+3
   379  07C4  0AF5               	incf	??_main,f
   380  07C5  0876               	movf	??_main+1,w
   381  07C6  0084               	movwf	4
   382  07C7  0878               	movf	??_main+3,w
   383  07C8  0080               	movwf	0
   384  07C9  0AF6               	incf	??_main+1,f
   385  07CA  0BF7               	decfsz	??_main+2,f
   386  07CB  2FBF               	goto	u30
   387  07CC                     l687:
   388                           
   389                           ;main.c: 108: int i;;main.c: 109:  for(i=0;a[i]!='\0';i++)
   390  07CC  1283               	bcf	3,5	;RP0=0, select bank0
   391  07CD  1303               	bcf	3,6	;RP1=0, select bank0
   392  07CE  01AD               	clrf	main@i
   393  07CF  01AE               	clrf	main@i+1
   394  07D0  2FE2               	goto	l693
   395  07D1                     l689:
   396                           
   397                           ;main.c: 110:     {;main.c: 111:     LCD_data(a[i]);
   398  07D1  082D               	movf	main@i,w
   399  07D2  3E20               	addlw	(low (main@a| 0))& (0+255)
   400  07D3  0084               	movwf	4
   401  07D4  0800               	movf	0,w
   402  07D5  120A  118A  2730  120A  118A  	fcall	_LCD_data
   403  07DA                     l691:
   404                           
   405                           ;main.c: 112:     }
   406  07DA  3001               	movlw	1
   407  07DB  1283               	bcf	3,5	;RP0=0, select bank0
   408  07DC  1303               	bcf	3,6	;RP1=0, select bank0
   409  07DD  07AD               	addwf	main@i,f
   410  07DE  1803               	skipnc
   411  07DF  0AAE               	incf	main@i+1,f
   412  07E0  3000               	movlw	0
   413  07E1  07AE               	addwf	main@i+1,f
   414  07E2                     l693:
   415  07E2  082D               	movf	main@i,w
   416  07E3  3E20               	addlw	(low (main@a| 0))& (0+255)
   417  07E4  0084               	movwf	4
   418  07E5  1383               	bcf	3,7	;select IRP bank0
   419  07E6  0800               	movf	0,w
   420  07E7  1D03               	btfss	3,2
   421  07E8  2FEA               	goto	u41
   422  07E9  2FEB               	goto	u40
   423  07EA                     u41:
   424  07EA  2FD1               	goto	l689
   425  07EB                     u40:
   426  07EB                     l31:
   427  07EB  120A  118A  2800   	ljmp	start
   428  07EE                     __end_of_main:
   429                           
   430                           	psect	text1
   431  0780                     __ptext1:	
   432 ;; *************** function _LCD_init *****************
   433 ;; Defined at:
   434 ;;		line 90 in file "main.c"
   435 ;; Parameters:    Size  Location     Type
   436 ;;		None
   437 ;; Auto vars:     Size  Location     Type
   438 ;;		None
   439 ;; Return value:  Size  Location     Type
   440 ;;                  1    wreg      void 
   441 ;; Registers used:
   442 ;;		wreg, status,2, status,0, pclath, cstack
   443 ;; Tracked objects:
   444 ;;		On entry : 0/0
   445 ;;		On exit  : 0/0
   446 ;;		Unchanged: 0/0
   447 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   448 ;;      Params:         0       0       0       0       0
   449 ;;      Locals:         0       0       0       0       0
   450 ;;      Temps:          2       0       0       0       0
   451 ;;      Totals:         2       0       0       0       0
   452 ;;Total ram usage:        2 bytes
   453 ;; Hardware stack levels used: 1
   454 ;; Hardware stack levels required when called: 1
   455 ;; This function calls:
   456 ;;		_LCD_Command
   457 ;; This function is called by:
   458 ;;		_main
   459 ;; This function uses a non-reentrant model
   460 ;;
   461                           
   462                           
   463                           ;psect for function _LCD_init
   464  0780                     _LCD_init:
   465  0780                     l675:	
   466                           ;incstack = 0
   467                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
   468                           
   469                           
   470                           ;main.c: 92: LCD_Command (0x02);
   471  0780  3002               	movlw	2
   472  0781  120A  118A  2758  120A  118A  	fcall	_LCD_Command
   473                           
   474                           ;main.c: 93: LCD_Command (0x38);
   475  0786  3038               	movlw	56
   476  0787  120A  118A  2758  120A  118A  	fcall	_LCD_Command
   477                           
   478                           ;main.c: 94: LCD_Command (0x80);
   479  078C  3080               	movlw	128
   480  078D  120A  118A  2758  120A  118A  	fcall	_LCD_Command
   481                           
   482                           ;main.c: 95: LCD_Command (0x0C);
   483  0792  300C               	movlw	12
   484  0793  120A  118A  2758  120A  118A  	fcall	_LCD_Command
   485                           
   486                           ;main.c: 96: LCD_Command (0x06);
   487  0798  3006               	movlw	6
   488  0799  120A  118A  2758  120A  118A  	fcall	_LCD_Command
   489  079E                     l677:
   490                           
   491                           ;main.c: 97: _delay((unsigned long)((10)*(16000000/4000.0)));
   492  079E  3034               	movlw	52
   493  079F  00F4               	movwf	??_LCD_init+1
   494  07A0  30F1               	movlw	241
   495  07A1  00F3               	movwf	??_LCD_init
   496  07A2                     u57:
   497  07A2  0BF3               	decfsz	??_LCD_init,f
   498  07A3  2FA2               	goto	u57
   499  07A4  0BF4               	decfsz	??_LCD_init+1,f
   500  07A5  2FA2               	goto	u57
   501  07A6  2FA7               	nop2
   502  07A7                     l21:
   503  07A7  0008               	return
   504  07A8                     __end_of_LCD_init:
   505                           
   506                           	psect	text2
   507  0758                     __ptext2:	
   508 ;; *************** function _LCD_Command *****************
   509 ;; Defined at:
   510 ;;		line 66 in file "main.c"
   511 ;; Parameters:    Size  Location     Type
   512 ;;  cmd             1    wreg     unsigned char 
   513 ;; Auto vars:     Size  Location     Type
   514 ;;  cmd             1    2[COMMON] unsigned char 
   515 ;; Return value:  Size  Location     Type
   516 ;;                  1    wreg      void 
   517 ;; Registers used:
   518 ;;		wreg
   519 ;; Tracked objects:
   520 ;;		On entry : 0/0
   521 ;;		On exit  : 0/0
   522 ;;		Unchanged: 0/0
   523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   524 ;;      Params:         0       0       0       0       0
   525 ;;      Locals:         1       0       0       0       0
   526 ;;      Temps:          2       0       0       0       0
   527 ;;      Totals:         3       0       0       0       0
   528 ;;Total ram usage:        3 bytes
   529 ;; Hardware stack levels used: 1
   530 ;; This function calls:
   531 ;;		Nothing
   532 ;; This function is called by:
   533 ;;		_LCD_init
   534 ;;		_main
   535 ;; This function uses a non-reentrant model
   536 ;;
   537                           
   538                           
   539                           ;psect for function _LCD_Command
   540  0758                     _LCD_Command:
   541                           
   542                           ;incstack = 0
   543                           ; Regs used in _LCD_Command: [wreg]
   544                           ;LCD_Command@cmd stored from wreg
   545  0758  00F2               	movwf	LCD_Command@cmd
   546  0759                     l659:
   547                           
   548                           ;main.c: 66: void LCD_Command(unsigned char cmd);main.c: 67: {;main.c: 69: RC0=0;
   549  0759  1283               	bcf	3,5	;RP0=0, select bank0
   550  075A  1303               	bcf	3,6	;RP1=0, select bank0
   551  075B  1007               	bcf	7,0	;volatile
   552  075C                     l661:
   553                           
   554                           ;main.c: 70: _delay((unsigned long)((10)*(16000000/4000.0)));
   555  075C  3034               	movlw	52
   556  075D  00F1               	movwf	??_LCD_Command+1
   557  075E  30F1               	movlw	241
   558  075F  00F0               	movwf	??_LCD_Command
   559  0760                     u67:
   560  0760  0BF0               	decfsz	??_LCD_Command,f
   561  0761  2F60               	goto	u67
   562  0762  0BF1               	decfsz	??_LCD_Command+1,f
   563  0763  2F60               	goto	u67
   564  0764  2F65               	nop2
   565                           
   566                           ;main.c: 71: PORTB=(cmd);
   567  0765  0872               	movf	LCD_Command@cmd,w
   568  0766  1283               	bcf	3,5	;RP0=0, select bank0
   569  0767  1303               	bcf	3,6	;RP1=0, select bank0
   570  0768  0086               	movwf	6	;volatile
   571  0769                     l663:
   572                           
   573                           ;main.c: 72: RC1=1;
   574  0769  1487               	bsf	7,1	;volatile
   575                           
   576                           ;main.c: 73: _delay((unsigned long)((10)*(16000000/4000.0)));
   577  076A  3034               	movlw	52
   578  076B  00F1               	movwf	??_LCD_Command+1
   579  076C  30F1               	movlw	241
   580  076D  00F0               	movwf	??_LCD_Command
   581  076E                     u77:
   582  076E  0BF0               	decfsz	??_LCD_Command,f
   583  076F  2F6E               	goto	u77
   584  0770  0BF1               	decfsz	??_LCD_Command+1,f
   585  0771  2F6E               	goto	u77
   586  0772  2F73               	nop2
   587  0773                     l665:
   588                           
   589                           ;main.c: 74: RC1=0;
   590  0773  1283               	bcf	3,5	;RP0=0, select bank0
   591  0774  1303               	bcf	3,6	;RP1=0, select bank0
   592  0775  1087               	bcf	7,1	;volatile
   593                           
   594                           ;main.c: 75: _delay((unsigned long)((10)*(16000000/4000.0)));
   595  0776  3034               	movlw	52
   596  0777  00F1               	movwf	??_LCD_Command+1
   597  0778  30F1               	movlw	241
   598  0779  00F0               	movwf	??_LCD_Command
   599  077A                     u87:
   600  077A  0BF0               	decfsz	??_LCD_Command,f
   601  077B  2F7A               	goto	u87
   602  077C  0BF1               	decfsz	??_LCD_Command+1,f
   603  077D  2F7A               	goto	u87
   604  077E  2F7F               	nop2
   605  077F                     l15:
   606  077F  0008               	return
   607  0780                     __end_of_LCD_Command:
   608                           
   609                           	psect	text3
   610  0730                     __ptext3:	
   611 ;; *************** function _LCD_data *****************
   612 ;; Defined at:
   613 ;;		line 78 in file "main.c"
   614 ;; Parameters:    Size  Location     Type
   615 ;;  data            1    wreg     unsigned char 
   616 ;; Auto vars:     Size  Location     Type
   617 ;;  data            1    2[COMMON] unsigned char 
   618 ;; Return value:  Size  Location     Type
   619 ;;                  1    wreg      void 
   620 ;; Registers used:
   621 ;;		wreg
   622 ;; Tracked objects:
   623 ;;		On entry : 0/0
   624 ;;		On exit  : 0/0
   625 ;;		Unchanged: 0/0
   626 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   627 ;;      Params:         0       0       0       0       0
   628 ;;      Locals:         1       0       0       0       0
   629 ;;      Temps:          2       0       0       0       0
   630 ;;      Totals:         3       0       0       0       0
   631 ;;Total ram usage:        3 bytes
   632 ;; Hardware stack levels used: 1
   633 ;; This function calls:
   634 ;;		Nothing
   635 ;; This function is called by:
   636 ;;		_main
   637 ;; This function uses a non-reentrant model
   638 ;;
   639                           
   640                           
   641                           ;psect for function _LCD_data
   642  0730                     _LCD_data:
   643                           
   644                           ;incstack = 0
   645                           ; Regs used in _LCD_data: [wreg]
   646                           ;LCD_data@data stored from wreg
   647  0730  00F2               	movwf	LCD_data@data
   648  0731                     l667:
   649                           
   650                           ;main.c: 78: void LCD_data(unsigned char data);main.c: 79: {;main.c: 81: RC0=1;
   651  0731  1283               	bcf	3,5	;RP0=0, select bank0
   652  0732  1303               	bcf	3,6	;RP1=0, select bank0
   653  0733  1407               	bsf	7,0	;volatile
   654  0734                     l669:
   655                           
   656                           ;main.c: 82: _delay((unsigned long)((10)*(16000000/4000.0)));
   657  0734  3034               	movlw	52
   658  0735  00F1               	movwf	??_LCD_data+1
   659  0736  30F1               	movlw	241
   660  0737  00F0               	movwf	??_LCD_data
   661  0738                     u97:
   662  0738  0BF0               	decfsz	??_LCD_data,f
   663  0739  2F38               	goto	u97
   664  073A  0BF1               	decfsz	??_LCD_data+1,f
   665  073B  2F38               	goto	u97
   666  073C  2F3D               	nop2
   667                           
   668                           ;main.c: 83: PORTB =(data);
   669  073D  0872               	movf	LCD_data@data,w
   670  073E  1283               	bcf	3,5	;RP0=0, select bank0
   671  073F  1303               	bcf	3,6	;RP1=0, select bank0
   672  0740  0086               	movwf	6	;volatile
   673  0741                     l671:
   674                           
   675                           ;main.c: 84: RC1=1;
   676  0741  1487               	bsf	7,1	;volatile
   677                           
   678                           ;main.c: 85: _delay((unsigned long)((10)*(16000000/4000.0)));
   679  0742  3034               	movlw	52
   680  0743  00F1               	movwf	??_LCD_data+1
   681  0744  30F1               	movlw	241
   682  0745  00F0               	movwf	??_LCD_data
   683  0746                     u107:
   684  0746  0BF0               	decfsz	??_LCD_data,f
   685  0747  2F46               	goto	u107
   686  0748  0BF1               	decfsz	??_LCD_data+1,f
   687  0749  2F46               	goto	u107
   688  074A  2F4B               	nop2
   689  074B                     l673:
   690                           
   691                           ;main.c: 86: RC1=0;
   692  074B  1283               	bcf	3,5	;RP0=0, select bank0
   693  074C  1303               	bcf	3,6	;RP1=0, select bank0
   694  074D  1087               	bcf	7,1	;volatile
   695                           
   696                           ;main.c: 87: _delay((unsigned long)((10)*(16000000/4000.0)));
   697  074E  3034               	movlw	52
   698  074F  00F1               	movwf	??_LCD_data+1
   699  0750  30F1               	movlw	241
   700  0751  00F0               	movwf	??_LCD_data
   701  0752                     u117:
   702  0752  0BF0               	decfsz	??_LCD_data,f
   703  0753  2F52               	goto	u117
   704  0754  0BF1               	decfsz	??_LCD_data+1,f
   705  0755  2F52               	goto	u117
   706  0756  2F57               	nop2
   707  0757                     l18:
   708  0757  0008               	return
   709  0758                     __end_of_LCD_data:
   710  007E                     btemp	set	126	;btemp
   711  007E                     wtemp0	set	126
   712                           
   713                           	psect	idloc
   714                           
   715                           ;Config register IDLOC0 @ 0x2000
   716                           ;	unspecified, using default values
   717  2000                     	org	8192
   718  2000  3FFF               	dw	16383
   719                           
   720                           ;Config register IDLOC1 @ 0x2001
   721                           ;	unspecified, using default values
   722  2001                     	org	8193
   723  2001  3FFF               	dw	16383
   724                           
   725                           ;Config register IDLOC2 @ 0x2002
   726                           ;	unspecified, using default values
   727  2002                     	org	8194
   728  2002  3FFF               	dw	16383
   729                           
   730                           ;Config register IDLOC3 @ 0x2003
   731                           ;	unspecified, using default values
   732  2003                     	org	8195
   733  2003  3FFF               	dw	16383
   734                           
   735                           	psect	config
   736                           
   737                           ;Config register CONFIG @ 0x2007
   738                           ;	Oscillator Selection bits
   739                           ;	FOSC = HS, HS oscillator
   740                           ;	Watchdog Timer Enable bit
   741                           ;	WDTE = OFF, WDT disabled
   742                           ;	Power-up Timer Enable bit
   743                           ;	PWRTE = OFF, PWRT disabled
   744                           ;	Brown-out Reset Enable bit
   745                           ;	BOREN = ON, BOR enabled
   746                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   747                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   748                           ;	Data EEPROM Memory Code Protection bit
   749                           ;	CPD = OFF, Data EEPROM code protection off
   750                           ;	Flash Program Memory Write Enable bits
   751                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   752                           ;	In-Circuit Debugger Mode bit
   753                           ;	DEBUG = 0x1, unprogrammed default
   754                           ;	Flash Program Memory Code Protection bit
   755                           ;	CP = OFF, Code protection off
   756  2007                     	org	8199
   757  2007  3FFA               	dw	16378

Data Sizes:
    Strings     0
    Constant    0
    Data        13
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9       9
    BANK0            80     15      28
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_LCD_init
    _LCD_init->_LCD_Command

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0     159
                                              5 COMMON     4     4      0
                                              0 BANK0     15    15      0
                        _LCD_Command
                           _LCD_data
                           _LCD_init
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0      22
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_data                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Command
   _LCD_data
   _LCD_init
     _LCD_Command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      F      1C       5       35.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      25      12        0.0%
ABS                  0      0      25       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon Apr 18 11:38:29 2022

                      pc 0002             ?_LCD_Command 0070                       l21 07A7  
                     l15 077F                       l31 07EB                       l18 0757  
                     u30 07BF                       u40 07EB                       u41 07EA  
                     u57 07A2                       u67 0760                       u77 076E  
                     u87 077A                       u97 0738                       fsr 0004  
                    l661 075C                      l671 0741                      l663 0769  
                    l673 074B                      l665 0773                      l681 07AC  
                    l667 0731                      l659 0759                      l675 0780  
                    l691 07DA                      l683 07B1                      l669 0734  
                    l677 079E                      l693 07E2                      l685 07B7  
                    l687 07CC                      l679 07A8                      l689 07D1  
                    _RC0 0038                      _RC1 0039                      u107 0746  
                    u117 0752                      fsr0 0004                      indf 0000  
                   _main 07A8                     btemp 007E                     start 0000  
       __end_of_LCD_data 0758         __end_of_LCD_init 07A8                    ?_main 0070  
                  _PORTB 0006                    _TRISB 0086                    _TRISC 0087  
                  main@a 0020                    main@i 002D                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07EE  
           __end_of_main 07EE                   ??_main 0075             LCD_data@data 0072  
   __size_of_LCD_Command 0028  __end_of__initialization 07FC                ?_LCD_data 0070  
              ?_LCD_init 0070           __pcstackCOMMON 0070             __pidataBANK0 0710  
             ??_LCD_data 0070               ??_LCD_init 0073               __pmaintext 07A8  
                __ptext1 0780                  __ptext2 0758                  __ptext3 0730  
   end_of_initialization 07FC           LCD_Command@cmd 0072        __size_of_LCD_data 0028  
      __size_of_LCD_init 0028            ??_LCD_Command 0070      start_initialization 07EE  
             init_fetch0 071D              __pdataBANK0 002F      __end_of_LCD_Command 0780  
              ___latbits 0002            __pcstackBANK0 0020                 _LCD_data 0730  
               _LCD_init 0780              _LCD_Command 0758            __size_of_main 0046  
               main@F884 002F                 init_ram0 0721  
