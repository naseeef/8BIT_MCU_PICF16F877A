

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Apr 19 11:22:49 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	idataBANK1,global,class=CODE,delta=2,noexec
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,noexec
     9                           	psect	inittext,global,class=CODE,delta=2
    10                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    11                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	psect	text2,local,class=CODE,merge=1,delta=2
    15                           	psect	text3,local,class=CODE,merge=1,delta=2
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.40
    21                           ; Generated 17/11/2021 GMT
    22                           ; 
    23                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F877A Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  009F                     	;# 
   109  010C                     	;# 
   110  010D                     	;# 
   111  010E                     	;# 
   112  010F                     	;# 
   113  018C                     	;# 
   114  018D                     	;# 
   115  0000                     	;# 
   116  0001                     	;# 
   117  0002                     	;# 
   118  0003                     	;# 
   119  0004                     	;# 
   120  0005                     	;# 
   121  0006                     	;# 
   122  0007                     	;# 
   123  0008                     	;# 
   124  0009                     	;# 
   125  000A                     	;# 
   126  000B                     	;# 
   127  000C                     	;# 
   128  000D                     	;# 
   129  000E                     	;# 
   130  000E                     	;# 
   131  000F                     	;# 
   132  0010                     	;# 
   133  0011                     	;# 
   134  0012                     	;# 
   135  0013                     	;# 
   136  0014                     	;# 
   137  0015                     	;# 
   138  0015                     	;# 
   139  0016                     	;# 
   140  0017                     	;# 
   141  0018                     	;# 
   142  0019                     	;# 
   143  001A                     	;# 
   144  001B                     	;# 
   145  001B                     	;# 
   146  001C                     	;# 
   147  001D                     	;# 
   148  001E                     	;# 
   149  001F                     	;# 
   150  0081                     	;# 
   151  0085                     	;# 
   152  0086                     	;# 
   153  0087                     	;# 
   154  0088                     	;# 
   155  0089                     	;# 
   156  008C                     	;# 
   157  008D                     	;# 
   158  008E                     	;# 
   159  0091                     	;# 
   160  0092                     	;# 
   161  0093                     	;# 
   162  0094                     	;# 
   163  0098                     	;# 
   164  0099                     	;# 
   165  009C                     	;# 
   166  009D                     	;# 
   167  009E                     	;# 
   168  009F                     	;# 
   169  010C                     	;# 
   170  010D                     	;# 
   171  010E                     	;# 
   172  010F                     	;# 
   173  018C                     	;# 
   174  018D                     	;# 
   175                           
   176                           	psect	idataBANK0
   177  061C                     __pidataBANK0:
   178                           
   179                           ;initializer for main@F896
   180  061C  3420               	retlw	32
   181  061D  3448               	retlw	72
   182  061E  3469               	retlw	105
   183  061F  3469               	retlw	105
   184  0620  3469               	retlw	105
   185  0621  3400               	retlw	0
   186                           
   187                           	psect	idataBANK1
   188  067F                     __pidataBANK1:
   189                           
   190                           ;initializer for main@F884
   191  067F  3447               	retlw	71
   192  0680  346F               	retlw	111
   193  0681  346F               	retlw	111
   194  0682  3464               	retlw	100
   195  0683  3420               	retlw	32
   196  0684  344D               	retlw	77
   197  0685  346F               	retlw	111
   198  0686  3472               	retlw	114
   199  0687  346E               	retlw	110
   200  0688  3469               	retlw	105
   201  0689  346E               	retlw	110
   202  068A  3467               	retlw	103
   203  068B  342C               	retlw	44
   204  068C  3400               	retlw	0
   205                           
   206                           ;initializer for main@F893
   207  068D  3447               	retlw	71
   208  068E  346F               	retlw	111
   209  068F  346F               	retlw	111
   210  0690  3464               	retlw	100
   211  0691  3420               	retlw	32
   212  0692  344D               	retlw	77
   213  0693  346F               	retlw	111
   214  0694  3472               	retlw	114
   215  0695  346E               	retlw	110
   216  0696  3469               	retlw	105
   217  0697  346E               	retlw	110
   218  0698  3467               	retlw	103
   219  0699  3400               	retlw	0
   220                           
   221                           ;initializer for main@F890
   222  069A  3447               	retlw	71
   223  069B  346F               	retlw	111
   224  069C  346F               	retlw	111
   225  069D  3464               	retlw	100
   226  069E  3420               	retlw	32
   227  069F  344D               	retlw	77
   228  06A0  346F               	retlw	111
   229  06A1  3472               	retlw	114
   230  06A2  346E               	retlw	110
   231  06A3  3469               	retlw	105
   232  06A4  346E               	retlw	110
   233  06A5  3467               	retlw	103
   234  06A6  3400               	retlw	0
   235                           
   236                           ;initializer for main@F887
   237  06A7  3447               	retlw	71
   238  06A8  346F               	retlw	111
   239  06A9  346F               	retlw	111
   240  06AA  3464               	retlw	100
   241  06AB  3420               	retlw	32
   242  06AC  344D               	retlw	77
   243  06AD  346F               	retlw	111
   244  06AE  3472               	retlw	114
   245  06AF  346E               	retlw	110
   246  06B0  3469               	retlw	105
   247  06B1  346E               	retlw	110
   248  06B2  3467               	retlw	103
   249  06B3  3400               	retlw	0
   250  0006                     _PORTB	set	6
   251  0039                     _RC1	set	57
   252  0038                     _RC0	set	56
   253  0087                     _TRISC	set	135
   254  0086                     _TRISB	set	134
   255                           
   256                           	psect	cinit
   257  07E1                     start_initialization:	
   258                           ; #config settings
   259                           
   260  07E1                     __initialization:
   261                           
   262                           ; Initialize objects allocated to BANK1
   263  07E1  1383               	bcf	3,7	;select IRP bank0
   264  07E2  30D5               	movlw	low (__pdataBANK1+53)
   265  07E3  00FD               	movwf	btemp+-1
   266  07E4  3006               	movlw	high __pidataBANK1
   267  07E5  00FE               	movwf	btemp
   268  07E6  307F               	movlw	low __pidataBANK1
   269  07E7  00FF               	movwf	btemp+1
   270  07E8  30A0               	movlw	low __pdataBANK1
   271  07E9  0084               	movwf	4
   272  07EA  120A  118A  2626  120A  118A  	fcall	init_ram0
   273                           
   274                           ; Initialize objects allocated to BANK0
   275  07EF  306B               	movlw	low (__pdataBANK0+6)
   276  07F0  00FD               	movwf	btemp+-1
   277  07F1  3006               	movlw	high __pidataBANK0
   278  07F2  00FE               	movwf	btemp
   279  07F3  301C               	movlw	low __pidataBANK0
   280  07F4  00FF               	movwf	btemp+1
   281  07F5  3065               	movlw	low __pdataBANK0
   282  07F6  0084               	movwf	4
   283  07F7  120A  118A  2626  120A  118A  	fcall	init_ram0
   284  07FC                     end_of_initialization:	
   285                           ;End of C runtime variable initialization code
   286                           
   287  07FC                     __end_of__initialization:
   288  07FC  0183               	clrf	3
   289  07FD  120A  118A  2EB4   	ljmp	_main	;jump to C main() function
   290                           
   291                           	psect	dataBANK0
   292  0065                     __pdataBANK0:
   293  0065                     main@F896:
   294  0065                     	ds	6
   295                           
   296                           	psect	dataBANK1
   297  00A0                     __pdataBANK1:
   298  00A0                     main@F884:
   299  00A0                     	ds	14
   300  00AE                     main@F893:
   301  00AE                     	ds	13
   302  00BB                     main@F890:
   303  00BB                     	ds	13
   304  00C8                     main@F887:
   305  00C8                     	ds	13
   306                           
   307                           	psect	inittext
   308  0622                     init_fetch0:	
   309                           ;	Called with low address in FSR and high address in W
   310                           
   311  0622  087E               	movf	btemp,w
   312  0623  008A               	movwf	10
   313  0624  087F               	movf	btemp+1,w
   314  0625  0082               	movwf	2
   315  0626                     init_ram0:	
   316                           ;Called with:
   317                           ;	high address of idata address in btemp 
   318                           ;	low address of idata address in btemp+1 
   319                           ;	low address of data in FSR
   320                           ;	high address + 1 of data in btemp-1
   321                           
   322  0626  120A  118A  2622  120A  118A  	fcall	init_fetch0
   323  062B  0080               	movwf	0
   324  062C  0A84               	incf	4,f
   325  062D  0804               	movf	4,w
   326  062E  067D               	xorwf	btemp+-1,w
   327  062F  1903               	btfsc	3,2
   328  0630  3400               	retlw	0
   329  0631  0AFF               	incf	btemp+1,f
   330  0632  1903               	btfsc	3,2
   331  0633  0AFE               	incf	btemp,f
   332  0634  2E26               	goto	init_ram0
   333                           
   334                           	psect	cstackCOMMON
   335  0070                     __pcstackCOMMON:
   336  0070                     ??_LCD_command:
   337  0070                     ??_LCD_data:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0070                     ?_LCD_init:	
   341                           ; 1 bytes @ 0x0
   342                           
   343  0070                     ?_main:	
   344                           ; 1 bytes @ 0x0
   345                           
   346  0070                     ?_LCD_command:	
   347                           ; 1 bytes @ 0x0
   348                           
   349  0070                     ?_LCD_data:	
   350                           ; 2 bytes @ 0x0
   351                           
   352                           
   353                           ; 2 bytes @ 0x0
   354  0070                     	ds	2
   355  0072                     LCD_command@cmd:
   356  0072                     LCD_data@data:	
   357                           ; 1 bytes @ 0x2
   358                           
   359                           
   360                           ; 1 bytes @ 0x2
   361  0072                     	ds	1
   362  0073                     ??_LCD_init:
   363                           
   364                           ; 1 bytes @ 0x3
   365  0073                     	ds	2
   366  0075                     ??_main:
   367                           
   368                           ; 1 bytes @ 0x5
   369  0075                     	ds	4
   370                           
   371                           	psect	cstackBANK0
   372  0020                     __pcstackBANK0:
   373  0020                     main@a:
   374                           
   375                           ; 14 bytes @ 0x0
   376  0020                     	ds	14
   377  002E                     main@b:
   378                           
   379                           ; 13 bytes @ 0xE
   380  002E                     	ds	13
   381  003B                     main@c:
   382                           
   383                           ; 13 bytes @ 0x1B
   384  003B                     	ds	13
   385  0048                     main@d:
   386                           
   387                           ; 13 bytes @ 0x28
   388  0048                     	ds	13
   389  0055                     main@e:
   390                           
   391                           ; 6 bytes @ 0x35
   392  0055                     	ds	6
   393  005B                     main@i:
   394                           
   395                           ; 2 bytes @ 0x3B
   396  005B                     	ds	2
   397  005D                     main@i_51:
   398                           
   399                           ; 2 bytes @ 0x3D
   400  005D                     	ds	2
   401  005F                     main@i_54:
   402                           
   403                           ; 2 bytes @ 0x3F
   404  005F                     	ds	2
   405  0061                     main@i_57:
   406                           
   407                           ; 2 bytes @ 0x41
   408  0061                     	ds	2
   409  0063                     main@i_60:
   410                           
   411                           ; 2 bytes @ 0x43
   412  0063                     	ds	2
   413                           
   414                           	psect	maintext
   415  06B4                     __pmaintext:	
   416 ;;
   417 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   418 ;;
   419 ;; *************** function _main *****************
   420 ;; Defined at:
   421 ;;		line 49 in file "main.c"
   422 ;; Parameters:    Size  Location     Type
   423 ;;		None
   424 ;; Auto vars:     Size  Location     Type
   425 ;;  i               2   67[BANK0 ] int 
   426 ;;  i               2   65[BANK0 ] int 
   427 ;;  i               2   63[BANK0 ] int 
   428 ;;  i               2   61[BANK0 ] int 
   429 ;;  i               2   59[BANK0 ] int 
   430 ;;  a              14    0[BANK0 ] unsigned char [14]
   431 ;;  d              13   40[BANK0 ] unsigned char [13]
   432 ;;  c              13   27[BANK0 ] unsigned char [13]
   433 ;;  b              13   14[BANK0 ] unsigned char [13]
   434 ;;  e               6   53[BANK0 ] unsigned char [6]
   435 ;; Return value:  Size  Location     Type
   436 ;;                  1    wreg      void 
   437 ;; Registers used:
   438 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   439 ;; Tracked objects:
   440 ;;		On entry : B00/0
   441 ;;		On exit  : 0/0
   442 ;;		Unchanged: 0/0
   443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   444 ;;      Params:         0       0       0       0       0
   445 ;;      Locals:         0      69       0       0       0
   446 ;;      Temps:          4       0       0       0       0
   447 ;;      Totals:         4      69       0       0       0
   448 ;;Total ram usage:       73 bytes
   449 ;; Hardware stack levels required when called: 2
   450 ;; This function calls:
   451 ;;		_LCD_command
   452 ;;		_LCD_data
   453 ;;		_LCD_init
   454 ;; This function is called by:
   455 ;;		Startup code after reset
   456 ;; This function uses a non-reentrant model
   457 ;;
   458                           
   459                           
   460                           ;psect for function _main
   461  06B4                     _main:
   462  06B4                     l747:	
   463                           ;incstack = 0
   464                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   465                           
   466                           
   467                           ;main.c: 51:     TRISB = 0x00;
   468  06B4  1683               	bsf	3,5	;RP0=1, select bank1
   469  06B5  1303               	bcf	3,6	;RP1=0, select bank1
   470  06B6  0186               	clrf	6	;volatile
   471                           
   472                           ;main.c: 52:     TRISC = 0x00;
   473  06B7  0187               	clrf	7	;volatile
   474  06B8                     l749:
   475                           
   476                           ;main.c: 53:     LCD_init();
   477  06B8  120A  118A  265D  120A  118A  	fcall	_LCD_init
   478  06BD                     l751:
   479                           
   480                           ;main.c: 54:     LCD_command(0x80);
   481  06BD  3080               	movlw	128
   482  06BE  120A  118A  2649  120A  118A  	fcall	_LCD_command
   483  06C3                     l753:
   484                           
   485                           ;main.c: 55:     char a[]={"Good Morning,"};
   486  06C3  3020               	movlw	main@a& (0+255)
   487  06C4  0084               	movwf	4
   488  06C5  30A0               	movlw	low main@F884
   489  06C6  00F5               	movwf	??_main
   490  06C7  0804               	movf	4,w
   491  06C8  00F6               	movwf	??_main+1
   492  06C9  300E               	movlw	14
   493  06CA  00F7               	movwf	??_main+2
   494  06CB                     u100:
   495  06CB  0875               	movf	??_main,w
   496  06CC  0084               	movwf	4
   497  06CD  1383               	bcf	3,7	;select IRP bank1
   498  06CE  0800               	movf	0,w
   499  06CF  00F8               	movwf	??_main+3
   500  06D0  0AF5               	incf	??_main,f
   501  06D1  0876               	movf	??_main+1,w
   502  06D2  0084               	movwf	4
   503  06D3  0878               	movf	??_main+3,w
   504  06D4  0080               	movwf	0
   505  06D5  0AF6               	incf	??_main+1,f
   506  06D6  0BF7               	decfsz	??_main+2,f
   507  06D7  2ECB               	goto	u100
   508  06D8                     l755:
   509                           
   510                           ;main.c: 56:     for (int i=0; a[i]!='\0';i++)
   511  06D8  1283               	bcf	3,5	;RP0=0, select bank0
   512  06D9  1303               	bcf	3,6	;RP1=0, select bank0
   513  06DA  01DB               	clrf	main@i
   514  06DB  01DC               	clrf	main@i+1
   515  06DC  2EEE               	goto	l761
   516  06DD                     l757:
   517                           
   518                           ;main.c: 57:     {;main.c: 58:         LCD_data(a[i]);
   519  06DD  085B               	movf	main@i,w
   520  06DE  3E20               	addlw	(low (main@a| 0))& (0+255)
   521  06DF  0084               	movwf	4
   522  06E0  0800               	movf	0,w
   523  06E1  120A  118A  2635  120A  118A  	fcall	_LCD_data
   524  06E6                     l759:
   525                           
   526                           ;main.c: 59:     }
   527  06E6  3001               	movlw	1
   528  06E7  1283               	bcf	3,5	;RP0=0, select bank0
   529  06E8  1303               	bcf	3,6	;RP1=0, select bank0
   530  06E9  07DB               	addwf	main@i,f
   531  06EA  1803               	skipnc
   532  06EB  0ADC               	incf	main@i+1,f
   533  06EC  3000               	movlw	0
   534  06ED  07DC               	addwf	main@i+1,f
   535  06EE                     l761:
   536  06EE  085B               	movf	main@i,w
   537  06EF  3E20               	addlw	(low (main@a| 0))& (0+255)
   538  06F0  0084               	movwf	4
   539  06F1  1383               	bcf	3,7	;select IRP bank0
   540  06F2  0800               	movf	0,w
   541  06F3  1D03               	btfss	3,2
   542  06F4  2EF6               	goto	u111
   543  06F5  2EF7               	goto	u110
   544  06F6                     u111:
   545  06F6  2EDD               	goto	l757
   546  06F7                     u110:
   547  06F7                     l763:
   548                           
   549                           ;main.c: 60:     LCD_command(0xC0);
   550  06F7  30C0               	movlw	192
   551  06F8  120A  118A  2649  120A  118A  	fcall	_LCD_command
   552  06FD                     l765:
   553                           
   554                           ;main.c: 61:     char b[]={"Good Morning"};
   555  06FD  302E               	movlw	main@b& (0+255)
   556  06FE  0084               	movwf	4
   557  06FF  30C8               	movlw	low main@F887
   558  0700  00F5               	movwf	??_main
   559  0701  0804               	movf	4,w
   560  0702  00F6               	movwf	??_main+1
   561  0703  300D               	movlw	13
   562  0704  00F7               	movwf	??_main+2
   563  0705                     u120:
   564  0705  0875               	movf	??_main,w
   565  0706  0084               	movwf	4
   566  0707  1383               	bcf	3,7	;select IRP bank1
   567  0708  0800               	movf	0,w
   568  0709  00F8               	movwf	??_main+3
   569  070A  0AF5               	incf	??_main,f
   570  070B  0876               	movf	??_main+1,w
   571  070C  0084               	movwf	4
   572  070D  0878               	movf	??_main+3,w
   573  070E  0080               	movwf	0
   574  070F  0AF6               	incf	??_main+1,f
   575  0710  0BF7               	decfsz	??_main+2,f
   576  0711  2F05               	goto	u120
   577  0712                     l767:
   578                           
   579                           ;main.c: 62:     for (int i=0; b[i]!='\0';i++)
   580  0712  1283               	bcf	3,5	;RP0=0, select bank0
   581  0713  1303               	bcf	3,6	;RP1=0, select bank0
   582  0714  01DD               	clrf	main@i_51
   583  0715  01DE               	clrf	main@i_51+1
   584  0716  2F28               	goto	l773
   585  0717                     l769:
   586                           
   587                           ;main.c: 63:     {;main.c: 64:         LCD_data(b[i]);
   588  0717  085D               	movf	main@i_51,w
   589  0718  3E2E               	addlw	(low (main@b| 0))& (0+255)
   590  0719  0084               	movwf	4
   591  071A  0800               	movf	0,w
   592  071B  120A  118A  2635  120A  118A  	fcall	_LCD_data
   593  0720                     l771:
   594                           
   595                           ;main.c: 65:     }
   596  0720  3001               	movlw	1
   597  0721  1283               	bcf	3,5	;RP0=0, select bank0
   598  0722  1303               	bcf	3,6	;RP1=0, select bank0
   599  0723  07DD               	addwf	main@i_51,f
   600  0724  1803               	skipnc
   601  0725  0ADE               	incf	main@i_51+1,f
   602  0726  3000               	movlw	0
   603  0727  07DE               	addwf	main@i_51+1,f
   604  0728                     l773:
   605  0728  085D               	movf	main@i_51,w
   606  0729  3E2E               	addlw	(low (main@b| 0))& (0+255)
   607  072A  0084               	movwf	4
   608  072B  1383               	bcf	3,7	;select IRP bank0
   609  072C  0800               	movf	0,w
   610  072D  1D03               	btfss	3,2
   611  072E  2F30               	goto	u131
   612  072F  2F31               	goto	u130
   613  0730                     u131:
   614  0730  2F17               	goto	l769
   615  0731                     u130:
   616  0731                     l775:
   617                           
   618                           ;main.c: 66:     LCD_command(0x94);
   619  0731  3094               	movlw	148
   620  0732  120A  118A  2649  120A  118A  	fcall	_LCD_command
   621  0737                     l777:
   622                           
   623                           ;main.c: 67:     char c[]={"Good Morning"};
   624  0737  303B               	movlw	main@c& (0+255)
   625  0738  0084               	movwf	4
   626  0739  30BB               	movlw	low main@F890
   627  073A  00F5               	movwf	??_main
   628  073B  0804               	movf	4,w
   629  073C  00F6               	movwf	??_main+1
   630  073D  300D               	movlw	13
   631  073E  00F7               	movwf	??_main+2
   632  073F                     u140:
   633  073F  0875               	movf	??_main,w
   634  0740  0084               	movwf	4
   635  0741  1383               	bcf	3,7	;select IRP bank1
   636  0742  0800               	movf	0,w
   637  0743  00F8               	movwf	??_main+3
   638  0744  0AF5               	incf	??_main,f
   639  0745  0876               	movf	??_main+1,w
   640  0746  0084               	movwf	4
   641  0747  0878               	movf	??_main+3,w
   642  0748  0080               	movwf	0
   643  0749  0AF6               	incf	??_main+1,f
   644  074A  0BF7               	decfsz	??_main+2,f
   645  074B  2F3F               	goto	u140
   646  074C                     l779:
   647                           
   648                           ;main.c: 68:     for (int i=0; c[i]!='\0';i++)
   649  074C  1283               	bcf	3,5	;RP0=0, select bank0
   650  074D  1303               	bcf	3,6	;RP1=0, select bank0
   651  074E  01DF               	clrf	main@i_54
   652  074F  01E0               	clrf	main@i_54+1
   653  0750  2F62               	goto	l785
   654  0751                     l781:
   655                           
   656                           ;main.c: 69:     {;main.c: 70:         LCD_data(c[i]);
   657  0751  085F               	movf	main@i_54,w
   658  0752  3E3B               	addlw	(low (main@c| 0))& (0+255)
   659  0753  0084               	movwf	4
   660  0754  0800               	movf	0,w
   661  0755  120A  118A  2635  120A  118A  	fcall	_LCD_data
   662  075A                     l783:
   663                           
   664                           ;main.c: 71:     }
   665  075A  3001               	movlw	1
   666  075B  1283               	bcf	3,5	;RP0=0, select bank0
   667  075C  1303               	bcf	3,6	;RP1=0, select bank0
   668  075D  07DF               	addwf	main@i_54,f
   669  075E  1803               	skipnc
   670  075F  0AE0               	incf	main@i_54+1,f
   671  0760  3000               	movlw	0
   672  0761  07E0               	addwf	main@i_54+1,f
   673  0762                     l785:
   674  0762  085F               	movf	main@i_54,w
   675  0763  3E3B               	addlw	(low (main@c| 0))& (0+255)
   676  0764  0084               	movwf	4
   677  0765  1383               	bcf	3,7	;select IRP bank0
   678  0766  0800               	movf	0,w
   679  0767  1D03               	btfss	3,2
   680  0768  2F6A               	goto	u151
   681  0769  2F6B               	goto	u150
   682  076A                     u151:
   683  076A  2F51               	goto	l781
   684  076B                     u150:
   685  076B                     l787:
   686                           
   687                           ;main.c: 72:     LCD_command(0xD4);
   688  076B  30D4               	movlw	212
   689  076C  120A  118A  2649  120A  118A  	fcall	_LCD_command
   690  0771                     l789:
   691                           
   692                           ;main.c: 73:     char d[]={"Good Morning"};
   693  0771  3048               	movlw	main@d& (0+255)
   694  0772  0084               	movwf	4
   695  0773  30AE               	movlw	low main@F893
   696  0774  00F5               	movwf	??_main
   697  0775  0804               	movf	4,w
   698  0776  00F6               	movwf	??_main+1
   699  0777  300D               	movlw	13
   700  0778  00F7               	movwf	??_main+2
   701  0779                     u160:
   702  0779  0875               	movf	??_main,w
   703  077A  0084               	movwf	4
   704  077B  1383               	bcf	3,7	;select IRP bank1
   705  077C  0800               	movf	0,w
   706  077D  00F8               	movwf	??_main+3
   707  077E  0AF5               	incf	??_main,f
   708  077F  0876               	movf	??_main+1,w
   709  0780  0084               	movwf	4
   710  0781  0878               	movf	??_main+3,w
   711  0782  0080               	movwf	0
   712  0783  0AF6               	incf	??_main+1,f
   713  0784  0BF7               	decfsz	??_main+2,f
   714  0785  2F79               	goto	u160
   715  0786                     l791:
   716                           
   717                           ;main.c: 74:     for (int i=0; d[i]!='\0';i++)
   718  0786  1283               	bcf	3,5	;RP0=0, select bank0
   719  0787  1303               	bcf	3,6	;RP1=0, select bank0
   720  0788  01E1               	clrf	main@i_57
   721  0789  01E2               	clrf	main@i_57+1
   722  078A  2F9C               	goto	l797
   723  078B                     l793:
   724                           
   725                           ;main.c: 75:     {;main.c: 76:         LCD_data(d[i]);
   726  078B  0861               	movf	main@i_57,w
   727  078C  3E48               	addlw	(low (main@d| 0))& (0+255)
   728  078D  0084               	movwf	4
   729  078E  0800               	movf	0,w
   730  078F  120A  118A  2635  120A  118A  	fcall	_LCD_data
   731  0794                     l795:
   732                           
   733                           ;main.c: 77:     }
   734  0794  3001               	movlw	1
   735  0795  1283               	bcf	3,5	;RP0=0, select bank0
   736  0796  1303               	bcf	3,6	;RP1=0, select bank0
   737  0797  07E1               	addwf	main@i_57,f
   738  0798  1803               	skipnc
   739  0799  0AE2               	incf	main@i_57+1,f
   740  079A  3000               	movlw	0
   741  079B  07E2               	addwf	main@i_57+1,f
   742  079C                     l797:
   743  079C  0861               	movf	main@i_57,w
   744  079D  3E48               	addlw	(low (main@d| 0))& (0+255)
   745  079E  0084               	movwf	4
   746  079F  1383               	bcf	3,7	;select IRP bank0
   747  07A0  0800               	movf	0,w
   748  07A1  1D03               	btfss	3,2
   749  07A2  2FA4               	goto	u171
   750  07A3  2FA5               	goto	u170
   751  07A4                     u171:
   752  07A4  2F8B               	goto	l793
   753  07A5                     u170:
   754  07A5                     l799:
   755                           
   756                           ;main.c: 78:     LCD_command(0x8F);
   757  07A5  308F               	movlw	143
   758  07A6  120A  118A  2649  120A  118A  	fcall	_LCD_command
   759  07AB                     l801:
   760                           
   761                           ;main.c: 79:     char e[]={" Hiii"};
   762  07AB  3055               	movlw	main@e& (0+255)
   763  07AC  0084               	movwf	4
   764  07AD  1283               	bcf	3,5	;RP0=0, select bank0
   765  07AE  1303               	bcf	3,6	;RP1=0, select bank0
   766  07AF  0865               	movf	main@F896,w
   767  07B0  1383               	bcf	3,7	;select IRP bank0
   768  07B1  0080               	movwf	0
   769  07B2  0A84               	incf	4,f
   770  07B3  0866               	movf	main@F896+1,w
   771  07B4  0080               	movwf	0
   772  07B5  0A84               	incf	4,f
   773  07B6  0867               	movf	main@F896+2,w
   774  07B7  0080               	movwf	0
   775  07B8  0A84               	incf	4,f
   776  07B9  0868               	movf	main@F896+3,w
   777  07BA  0080               	movwf	0
   778  07BB  0A84               	incf	4,f
   779  07BC  0869               	movf	main@F896+4,w
   780  07BD  0080               	movwf	0
   781  07BE  0A84               	incf	4,f
   782  07BF  086A               	movf	main@F896+5,w
   783  07C0  0080               	movwf	0
   784  07C1                     l803:
   785                           
   786                           ;main.c: 80:     for (int i=0; e[i]!='\0';i++)
   787  07C1  01E3               	clrf	main@i_60
   788  07C2  01E4               	clrf	main@i_60+1
   789  07C3  2FD5               	goto	l809
   790  07C4                     l805:
   791                           
   792                           ;main.c: 81:     {;main.c: 82:         LCD_data(e[i]);
   793  07C4  0863               	movf	main@i_60,w
   794  07C5  3E55               	addlw	(low (main@e| 0))& (0+255)
   795  07C6  0084               	movwf	4
   796  07C7  0800               	movf	0,w
   797  07C8  120A  118A  2635  120A  118A  	fcall	_LCD_data
   798  07CD                     l807:
   799                           
   800                           ;main.c: 83:     }
   801  07CD  3001               	movlw	1
   802  07CE  1283               	bcf	3,5	;RP0=0, select bank0
   803  07CF  1303               	bcf	3,6	;RP1=0, select bank0
   804  07D0  07E3               	addwf	main@i_60,f
   805  07D1  1803               	skipnc
   806  07D2  0AE4               	incf	main@i_60+1,f
   807  07D3  3000               	movlw	0
   808  07D4  07E4               	addwf	main@i_60+1,f
   809  07D5                     l809:
   810  07D5  0863               	movf	main@i_60,w
   811  07D6  3E55               	addlw	(low (main@e| 0))& (0+255)
   812  07D7  0084               	movwf	4
   813  07D8  1383               	bcf	3,7	;select IRP bank0
   814  07D9  0800               	movf	0,w
   815  07DA  1D03               	btfss	3,2
   816  07DB  2FDD               	goto	u181
   817  07DC  2FDE               	goto	u180
   818  07DD                     u181:
   819  07DD  2FC4               	goto	l805
   820  07DE                     u180:
   821  07DE                     l51:
   822  07DE  120A  118A  2800   	ljmp	start
   823  07E1                     __end_of_main:
   824                           
   825                           	psect	text1
   826  065D                     __ptext1:	
   827 ;; *************** function _LCD_init *****************
   828 ;; Defined at:
   829 ;;		line 39 in file "main.c"
   830 ;; Parameters:    Size  Location     Type
   831 ;;		None
   832 ;; Auto vars:     Size  Location     Type
   833 ;;		None
   834 ;; Return value:  Size  Location     Type
   835 ;;                  1    wreg      void 
   836 ;; Registers used:
   837 ;;		wreg, status,2, status,0, pclath, cstack
   838 ;; Tracked objects:
   839 ;;		On entry : 0/0
   840 ;;		On exit  : 0/0
   841 ;;		Unchanged: 0/0
   842 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   843 ;;      Params:         0       0       0       0       0
   844 ;;      Locals:         0       0       0       0       0
   845 ;;      Temps:          2       0       0       0       0
   846 ;;      Totals:         2       0       0       0       0
   847 ;;Total ram usage:        2 bytes
   848 ;; Hardware stack levels used: 1
   849 ;; Hardware stack levels required when called: 1
   850 ;; This function calls:
   851 ;;		_LCD_command
   852 ;; This function is called by:
   853 ;;		_main
   854 ;; This function uses a non-reentrant model
   855 ;;
   856                           
   857                           
   858                           ;psect for function _LCD_init
   859  065D                     _LCD_init:
   860  065D                     l743:	
   861                           ;incstack = 0
   862                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
   863                           
   864                           
   865                           ;main.c: 41:     LCD_command(0x02);
   866  065D  3002               	movlw	2
   867  065E  120A  118A  2649  120A  118A  	fcall	_LCD_command
   868                           
   869                           ;main.c: 42:     LCD_command(0x38);
   870  0663  3038               	movlw	56
   871  0664  120A  118A  2649  120A  118A  	fcall	_LCD_command
   872                           
   873                           ;main.c: 44:     LCD_command(0x0C);
   874  0669  300C               	movlw	12
   875  066A  120A  118A  2649  120A  118A  	fcall	_LCD_command
   876                           
   877                           ;main.c: 45:     LCD_command(0x06);
   878  066F  3006               	movlw	6
   879  0670  120A  118A  2649  120A  118A  	fcall	_LCD_command
   880  0675                     l745:
   881                           
   882                           ;main.c: 46:     _delay((unsigned long)((10)*(16000000/4000.0)));
   883  0675  3034               	movlw	52
   884  0676  00F4               	movwf	??_LCD_init+1
   885  0677  30F1               	movlw	241
   886  0678  00F3               	movwf	??_LCD_init
   887  0679                     u197:
   888  0679  0BF3               	decfsz	??_LCD_init,f
   889  067A  2E79               	goto	u197
   890  067B  0BF4               	decfsz	??_LCD_init+1,f
   891  067C  2E79               	goto	u197
   892  067D  2E7E               	nop2
   893  067E                     l21:
   894  067E  0008               	return
   895  067F                     __end_of_LCD_init:
   896                           
   897                           	psect	text2
   898  0649                     __ptext2:	
   899 ;; *************** function _LCD_command *****************
   900 ;; Defined at:
   901 ;;		line 22 in file "main.c"
   902 ;; Parameters:    Size  Location     Type
   903 ;;  cmd             1    wreg     unsigned char 
   904 ;; Auto vars:     Size  Location     Type
   905 ;;  cmd             1    2[COMMON] unsigned char 
   906 ;; Return value:  Size  Location     Type
   907 ;;                  2   14[None  ] int 
   908 ;; Registers used:
   909 ;;		wreg
   910 ;; Tracked objects:
   911 ;;		On entry : 0/0
   912 ;;		On exit  : 0/0
   913 ;;		Unchanged: 0/0
   914 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   915 ;;      Params:         0       0       0       0       0
   916 ;;      Locals:         1       0       0       0       0
   917 ;;      Temps:          2       0       0       0       0
   918 ;;      Totals:         3       0       0       0       0
   919 ;;Total ram usage:        3 bytes
   920 ;; Hardware stack levels used: 1
   921 ;; This function calls:
   922 ;;		Nothing
   923 ;; This function is called by:
   924 ;;		_LCD_init
   925 ;;		_main
   926 ;; This function uses a non-reentrant model
   927 ;;
   928                           
   929                           
   930                           ;psect for function _LCD_command
   931  0649                     _LCD_command:
   932                           
   933                           ;incstack = 0
   934                           ; Regs used in _LCD_command: [wreg]
   935                           ;LCD_command@cmd stored from wreg
   936  0649  00F2               	movwf	LCD_command@cmd
   937  064A                     l727:
   938                           
   939                           ;main.c: 22: LCD_command(unsigned char cmd);main.c: 23: {;main.c: 24:     PORTB = cmd;
   940  064A  0872               	movf	LCD_command@cmd,w
   941  064B  1283               	bcf	3,5	;RP0=0, select bank0
   942  064C  1303               	bcf	3,6	;RP1=0, select bank0
   943  064D  0086               	movwf	6	;volatile
   944  064E                     l729:
   945                           
   946                           ;main.c: 25:     RC0 = 0;
   947  064E  1007               	bcf	7,0	;volatile
   948  064F                     l731:
   949                           
   950                           ;main.c: 26:     RC1 = 1;
   951  064F  1487               	bsf	7,1	;volatile
   952                           
   953                           ;main.c: 27:     _delay((unsigned long)((10)*(16000000/4000.0)));
   954  0650  3034               	movlw	52
   955  0651  00F1               	movwf	??_LCD_command+1
   956  0652  30F1               	movlw	241
   957  0653  00F0               	movwf	??_LCD_command
   958  0654                     u207:
   959  0654  0BF0               	decfsz	??_LCD_command,f
   960  0655  2E54               	goto	u207
   961  0656  0BF1               	decfsz	??_LCD_command+1,f
   962  0657  2E54               	goto	u207
   963  0658  2E59               	nop2
   964  0659                     l733:
   965                           
   966                           ;main.c: 28:     RC1 = 0;
   967  0659  1283               	bcf	3,5	;RP0=0, select bank0
   968  065A  1303               	bcf	3,6	;RP1=0, select bank0
   969  065B  1087               	bcf	7,1	;volatile
   970  065C                     l15:
   971  065C  0008               	return
   972  065D                     __end_of_LCD_command:
   973                           
   974                           	psect	text3
   975  0635                     __ptext3:	
   976 ;; *************** function _LCD_data *****************
   977 ;; Defined at:
   978 ;;		line 30 in file "main.c"
   979 ;; Parameters:    Size  Location     Type
   980 ;;  data            1    wreg     unsigned char 
   981 ;; Auto vars:     Size  Location     Type
   982 ;;  data            1    2[COMMON] unsigned char 
   983 ;; Return value:  Size  Location     Type
   984 ;;                  2   17[None  ] int 
   985 ;; Registers used:
   986 ;;		wreg
   987 ;; Tracked objects:
   988 ;;		On entry : 0/0
   989 ;;		On exit  : 0/0
   990 ;;		Unchanged: 0/0
   991 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   992 ;;      Params:         0       0       0       0       0
   993 ;;      Locals:         1       0       0       0       0
   994 ;;      Temps:          2       0       0       0       0
   995 ;;      Totals:         3       0       0       0       0
   996 ;;Total ram usage:        3 bytes
   997 ;; Hardware stack levels used: 1
   998 ;; This function calls:
   999 ;;		Nothing
  1000 ;; This function is called by:
  1001 ;;		_main
  1002 ;; This function uses a non-reentrant model
  1003 ;;
  1004                           
  1005                           
  1006                           ;psect for function _LCD_data
  1007  0635                     _LCD_data:
  1008                           
  1009                           ;incstack = 0
  1010                           ; Regs used in _LCD_data: [wreg]
  1011                           ;LCD_data@data stored from wreg
  1012  0635  00F2               	movwf	LCD_data@data
  1013  0636                     l735:
  1014                           
  1015                           ;main.c: 30: LCD_data(unsigned char data);main.c: 31: {;main.c: 32: PORTB = data;
  1016  0636  0872               	movf	LCD_data@data,w
  1017  0637  1283               	bcf	3,5	;RP0=0, select bank0
  1018  0638  1303               	bcf	3,6	;RP1=0, select bank0
  1019  0639  0086               	movwf	6	;volatile
  1020  063A                     l737:
  1021                           
  1022                           ;main.c: 33:     RC0 = 1;
  1023  063A  1407               	bsf	7,0	;volatile
  1024  063B                     l739:
  1025                           
  1026                           ;main.c: 34:     RC1 = 1;
  1027  063B  1487               	bsf	7,1	;volatile
  1028                           
  1029                           ;main.c: 35:     _delay((unsigned long)((10)*(16000000/4000.0)));
  1030  063C  3034               	movlw	52
  1031  063D  00F1               	movwf	??_LCD_data+1
  1032  063E  30F1               	movlw	241
  1033  063F  00F0               	movwf	??_LCD_data
  1034  0640                     u217:
  1035  0640  0BF0               	decfsz	??_LCD_data,f
  1036  0641  2E40               	goto	u217
  1037  0642  0BF1               	decfsz	??_LCD_data+1,f
  1038  0643  2E40               	goto	u217
  1039  0644  2E45               	nop2
  1040  0645                     l741:
  1041                           
  1042                           ;main.c: 36:     RC1 = 0;
  1043  0645  1283               	bcf	3,5	;RP0=0, select bank0
  1044  0646  1303               	bcf	3,6	;RP1=0, select bank0
  1045  0647  1087               	bcf	7,1	;volatile
  1046  0648                     l18:
  1047  0648  0008               	return
  1048  0649                     __end_of_LCD_data:
  1049  007E                     btemp	set	126	;btemp
  1050  007E                     wtemp0	set	126
  1051                           
  1052                           	psect	idloc
  1053                           
  1054                           ;Config register IDLOC0 @ 0x2000
  1055                           ;	unspecified, using default values
  1056  2000                     	org	8192
  1057  2000  3FFF               	dw	16383
  1058                           
  1059                           ;Config register IDLOC1 @ 0x2001
  1060                           ;	unspecified, using default values
  1061  2001                     	org	8193
  1062  2001  3FFF               	dw	16383
  1063                           
  1064                           ;Config register IDLOC2 @ 0x2002
  1065                           ;	unspecified, using default values
  1066  2002                     	org	8194
  1067  2002  3FFF               	dw	16383
  1068                           
  1069                           ;Config register IDLOC3 @ 0x2003
  1070                           ;	unspecified, using default values
  1071  2003                     	org	8195
  1072  2003  3FFF               	dw	16383
  1073                           
  1074                           	psect	config
  1075                           
  1076                           ;Config register CONFIG @ 0x2007
  1077                           ;	Oscillator Selection bits
  1078                           ;	FOSC = HS, HS oscillator
  1079                           ;	Watchdog Timer Enable bit
  1080                           ;	WDTE = OFF, WDT disabled
  1081                           ;	Power-up Timer Enable bit
  1082                           ;	PWRTE = OFF, PWRT disabled
  1083                           ;	Brown-out Reset Enable bit
  1084                           ;	BOREN = ON, BOR enabled
  1085                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1086                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  1087                           ;	Data EEPROM Memory Code Protection bit
  1088                           ;	CPD = OFF, Data EEPROM code protection off
  1089                           ;	Flash Program Memory Write Enable bits
  1090                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1091                           ;	In-Circuit Debugger Mode bit
  1092                           ;	DEBUG = 0x1, unprogrammed default
  1093                           ;	Flash Program Memory Code Protection bit
  1094                           ;	CP = OFF, Code protection off
  1095  2007                     	org	8199
  1096  2007  3FFA               	dw	16378

Data Sizes:
    Strings     0
    Constant    0
    Data        59
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9       9
    BANK0            80     69      75
    BANK1            80      0      53
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_LCD_init
    _LCD_init->_LCD_command

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                73    73      0     531
                                              5 COMMON     4     4      0
                                              0 BANK0     69    69      0
                        _LCD_command
                           _LCD_data
                           _LCD_init
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0      22
                                              3 COMMON     2     2      0
                        _LCD_command
 ---------------------------------------------------------------------------------
 (2) _LCD_command                                          3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_data                                             3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_command
   _LCD_data
   _LCD_init
     _LCD_command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0      35       7       66.2%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     45      4B       5       93.8%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      89      12        0.0%
ABS                  0      0      89       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Apr 19 11:22:49 2022

                      pc 0002                       l21 067E                       l15 065C  
                     l18 0648                       l51 07DE                       fsr 0004  
                    l801 07AB                      l731 064F                      l803 07C1  
                    l741 0645                      l733 0659                      l805 07C4  
                    l735 0636                      l727 064A                      l743 065D  
                    l807 07CD                      l751 06BD                      l737 063A  
                    l729 064E                      l745 0675                      l809 07D5  
                    l761 06EE                      l753 06C3                      l739 063B  
                    l771 0720                      l763 06F7                      l755 06D8  
                    l747 06B4                      l781 0751                      l773 0728  
                    l765 06FD                      l757 06DD                      l749 06B8  
                    l791 0786                      l783 075A                      l775 0731  
                    l767 0712                      l759 06E6                      l793 078B  
                    l785 0762                      l777 0737                      l769 0717  
                    l795 0794                      l787 076B                      l779 074C  
                    l797 079C                      l789 0771                      l799 07A5  
                    _RC0 0038                      _RC1 0039                      u100 06CB  
                    u110 06F7                      u111 06F6                      u120 0705  
                    u130 0731                      u131 0730                      u140 073F  
                    u150 076B                      u207 0654                      u151 076A  
                    u160 0779                      u217 0640                      u170 07A5  
                    u171 07A4                      u180 07DE                      u181 07DD  
                    u197 0679                      fsr0 0004                      indf 0000  
           ?_LCD_command 0070                     _main 06B4                     btemp 007E  
                   start 0000         __end_of_LCD_data 0649         __end_of_LCD_init 067F  
                  ?_main 0070                    _PORTB 0006                    _TRISB 0086  
                  _TRISC 0087                    main@a 0020                    main@b 002E  
                  main@c 003B                    main@d 0048                    main@e 0055  
                  main@i 005B                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07E1             __end_of_main 07E1  
                 ??_main 0075             LCD_data@data 0072  __end_of__initialization 07FC  
   __size_of_LCD_command 0014                ?_LCD_data 0070                ?_LCD_init 0070  
         __pcstackCOMMON 0070             __pidataBANK0 061C             __pidataBANK1 067F  
             ??_LCD_data 0070               ??_LCD_init 0073               __pmaintext 06B4  
                __ptext1 065D                  __ptext2 0649                  __ptext3 0635  
   end_of_initialization 07FC        __size_of_LCD_data 0014        __size_of_LCD_init 0022  
    start_initialization 07E1            ??_LCD_command 0070               init_fetch0 0622  
            __pdataBANK0 0065              __pdataBANK1 00A0                ___latbits 0002  
          __pcstackBANK0 0020      __end_of_LCD_command 065D                 _LCD_data 0635  
               _LCD_init 065D              _LCD_command 0649            __size_of_main 012D  
               main@F890 00BB                 main@F884 00A0                 main@F893 00AE  
               main@F887 00C8                 main@F896 0065                 main@i_51 005D  
               main@i_60 0063                 main@i_54 005F                 main@i_57 0061  
               init_ram0 0626           LCD_command@cmd 0072  
