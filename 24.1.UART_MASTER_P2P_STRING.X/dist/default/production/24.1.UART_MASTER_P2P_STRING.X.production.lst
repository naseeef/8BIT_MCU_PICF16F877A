

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon May 09 13:57:49 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    17                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    18                           	dabs	1,0x7E,2
    19  0000                     
    20                           ; Version 2.40
    21                           ; Generated 17/11/2021 GMT
    22                           ; 
    23                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    24                           ; All rights reserved.
    25                           ; 
    26                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    27                           ; 
    28                           ; Redistribution and use in source and binary forms, with or without modification, are
    29                           ; permitted provided that the following conditions are met:
    30                           ; 
    31                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    32                           ;        conditions and the following disclaimer.
    33                           ; 
    34                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    35                           ;        of conditions and the following disclaimer in the documentation and/or other
    36                           ;        materials provided with the distribution. Publication is not required when
    37                           ;        this file is used in an embedded application.
    38                           ; 
    39                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    40                           ;        software without specific prior written permission.
    41                           ; 
    42                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    43                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    44                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    45                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    46                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    47                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    48                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    49                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    50                           ; 
    51                           ; 
    52                           ; Code-generator required, PIC16F877A Definitions
    53                           ; 
    54                           ; SFR Addresses
    55  0000                     	;# 
    56  0001                     	;# 
    57  0002                     	;# 
    58  0003                     	;# 
    59  0004                     	;# 
    60  0005                     	;# 
    61  0006                     	;# 
    62  0007                     	;# 
    63  0008                     	;# 
    64  0009                     	;# 
    65  000A                     	;# 
    66  000B                     	;# 
    67  000C                     	;# 
    68  000D                     	;# 
    69  000E                     	;# 
    70  000E                     	;# 
    71  000F                     	;# 
    72  0010                     	;# 
    73  0011                     	;# 
    74  0012                     	;# 
    75  0013                     	;# 
    76  0014                     	;# 
    77  0015                     	;# 
    78  0015                     	;# 
    79  0016                     	;# 
    80  0017                     	;# 
    81  0018                     	;# 
    82  0019                     	;# 
    83  001A                     	;# 
    84  001B                     	;# 
    85  001B                     	;# 
    86  001C                     	;# 
    87  001D                     	;# 
    88  001E                     	;# 
    89  001F                     	;# 
    90  0081                     	;# 
    91  0085                     	;# 
    92  0086                     	;# 
    93  0087                     	;# 
    94  0088                     	;# 
    95  0089                     	;# 
    96  008C                     	;# 
    97  008D                     	;# 
    98  008E                     	;# 
    99  0091                     	;# 
   100  0092                     	;# 
   101  0093                     	;# 
   102  0094                     	;# 
   103  0098                     	;# 
   104  0099                     	;# 
   105  009C                     	;# 
   106  009D                     	;# 
   107  009E                     	;# 
   108  009F                     	;# 
   109  010C                     	;# 
   110  010D                     	;# 
   111  010E                     	;# 
   112  010F                     	;# 
   113  018C                     	;# 
   114  018D                     	;# 
   115  0000                     	;# 
   116  0001                     	;# 
   117  0002                     	;# 
   118  0003                     	;# 
   119  0004                     	;# 
   120  0005                     	;# 
   121  0006                     	;# 
   122  0007                     	;# 
   123  0008                     	;# 
   124  0009                     	;# 
   125  000A                     	;# 
   126  000B                     	;# 
   127  000C                     	;# 
   128  000D                     	;# 
   129  000E                     	;# 
   130  000E                     	;# 
   131  000F                     	;# 
   132  0010                     	;# 
   133  0011                     	;# 
   134  0012                     	;# 
   135  0013                     	;# 
   136  0014                     	;# 
   137  0015                     	;# 
   138  0015                     	;# 
   139  0016                     	;# 
   140  0017                     	;# 
   141  0018                     	;# 
   142  0019                     	;# 
   143  001A                     	;# 
   144  001B                     	;# 
   145  001B                     	;# 
   146  001C                     	;# 
   147  001D                     	;# 
   148  001E                     	;# 
   149  001F                     	;# 
   150  0081                     	;# 
   151  0085                     	;# 
   152  0086                     	;# 
   153  0087                     	;# 
   154  0088                     	;# 
   155  0089                     	;# 
   156  008C                     	;# 
   157  008D                     	;# 
   158  008E                     	;# 
   159  0091                     	;# 
   160  0092                     	;# 
   161  0093                     	;# 
   162  0094                     	;# 
   163  0098                     	;# 
   164  0099                     	;# 
   165  009C                     	;# 
   166  009D                     	;# 
   167  009E                     	;# 
   168  009F                     	;# 
   169  010C                     	;# 
   170  010D                     	;# 
   171  010E                     	;# 
   172  010F                     	;# 
   173  018C                     	;# 
   174  018D                     	;# 
   175                           
   176                           	psect	idataBANK0
   177  069E                     __pidataBANK0:
   178                           
   179                           ;initializer for main@F893
   180  069E  3447               	retlw	71
   181  069F  346F               	retlw	111
   182  06A0  346F               	retlw	111
   183  06A1  3464               	retlw	100
   184  06A2  3420               	retlw	32
   185  06A3  344D               	retlw	77
   186  06A4  346F               	retlw	111
   187  06A5  3472               	retlw	114
   188  06A6  346E               	retlw	110
   189  06A7  3469               	retlw	105
   190  06A8  346E               	retlw	110
   191  06A9  3467               	retlw	103
   192  06AA  3421               	retlw	33
   193  06AB  3400               	retlw	0
   194  0008                     _PORTD	set	8
   195  001A                     _RCREG	set	26
   196  0019                     _TXREG	set	25
   197  0018                     _RCSTA	set	24
   198  0043                     _RD3	set	67
   199  0042                     _RD2	set	66
   200  0041                     _RD1	set	65
   201  0065                     _RCIF	set	101
   202  0064                     _TXIF	set	100
   203  0086                     _TRISB	set	134
   204  0088                     _TRISD	set	136
   205  0099                     _SPBRG	set	153
   206  0098                     _TXSTA	set	152
   207  0087                     _TRISC	set	135
   208                           
   209                           	psect	cinit
   210  07EE                     start_initialization:	
   211                           ; #config settings
   212                           
   213  07EE                     __initialization:
   214                           
   215                           ; Initialize objects allocated to BANK0
   216  07EE  1383               	bcf	3,7	;select IRP bank0
   217  07EF  303E               	movlw	low (__pdataBANK0+14)
   218  07F0  00FD               	movwf	btemp+-1
   219  07F1  3006               	movlw	high __pidataBANK0
   220  07F2  00FE               	movwf	btemp
   221  07F3  309E               	movlw	low __pidataBANK0
   222  07F4  00FF               	movwf	btemp+1
   223  07F5  3030               	movlw	low __pdataBANK0
   224  07F6  0084               	movwf	4
   225  07F7  120A  118A  26BF  120A  118A  	fcall	init_ram0
   226  07FC                     end_of_initialization:	
   227                           ;End of C runtime variable initialization code
   228                           
   229  07FC                     __end_of__initialization:
   230  07FC  0183               	clrf	3
   231  07FD  120A  118A  2F90   	ljmp	_main	;jump to C main() function
   232                           
   233                           	psect	dataBANK0
   234  0030                     __pdataBANK0:
   235  0030                     main@F893:
   236  0030                     	ds	14
   237                           
   238                           	psect	inittext
   239  06BB                     init_fetch0:	
   240                           ;	Called with low address in FSR and high address in W
   241                           
   242  06BB  087E               	movf	btemp,w
   243  06BC  008A               	movwf	10
   244  06BD  087F               	movf	btemp+1,w
   245  06BE  0082               	movwf	2
   246  06BF                     init_ram0:	
   247                           ;Called with:
   248                           ;	high address of idata address in btemp 
   249                           ;	low address of idata address in btemp+1 
   250                           ;	low address of data in FSR
   251                           ;	high address + 1 of data in btemp-1
   252                           
   253  06BF  120A  118A  26BB  120A  118A  	fcall	init_fetch0
   254  06C4  0080               	movwf	0
   255  06C5  0A84               	incf	4,f
   256  06C6  0804               	movf	4,w
   257  06C7  067D               	xorwf	btemp+-1,w
   258  06C8  1903               	btfsc	3,2
   259  06C9  3400               	retlw	0
   260  06CA  0AFF               	incf	btemp+1,f
   261  06CB  1903               	btfsc	3,2
   262  06CC  0AFE               	incf	btemp,f
   263  06CD  2EBF               	goto	init_ram0
   264                           
   265                           	psect	cstackCOMMON
   266  0070                     __pcstackCOMMON:
   267  0070                     ?_ser_int:
   268  0070                     ??_ser_int:	
   269                           ; 1 bytes @ 0x0
   270                           
   271  0070                     ?_tx:	
   272                           ; 1 bytes @ 0x0
   273                           
   274  0070                     ??_tx:	
   275                           ; 1 bytes @ 0x0
   276                           
   277  0070                     ?_LCD_Command:	
   278                           ; 1 bytes @ 0x0
   279                           
   280  0070                     ??_LCD_Command:	
   281                           ; 1 bytes @ 0x0
   282                           
   283  0070                     ?_LCD_data:	
   284                           ; 1 bytes @ 0x0
   285                           
   286  0070                     ??_LCD_data:	
   287                           ; 1 bytes @ 0x0
   288                           
   289  0070                     ?_main:	
   290                           ; 1 bytes @ 0x0
   291                           
   292  0070                     ?_LCD_init:	
   293                           ; 1 bytes @ 0x0
   294                           
   295  0070                     tx@a:	
   296                           ; 2 bytes @ 0x0
   297                           
   298                           
   299                           ; 1 bytes @ 0x0
   300  0070                     	ds	2
   301  0072                     LCD_Command@cmd:
   302  0072                     LCD_data@data:	
   303                           ; 1 bytes @ 0x2
   304                           
   305                           
   306                           ; 1 bytes @ 0x2
   307  0072                     	ds	1
   308  0073                     ??_LCD_init:
   309                           
   310                           ; 1 bytes @ 0x3
   311  0073                     	ds	2
   312  0075                     ??_main:
   313                           
   314                           ; 1 bytes @ 0x5
   315  0075                     	ds	4
   316                           
   317                           	psect	cstackBANK0
   318  0020                     __pcstackBANK0:
   319  0020                     main@str:
   320                           
   321                           ; 14 bytes @ 0x0
   322  0020                     	ds	14
   323  002E                     main@i:
   324                           
   325                           ; 2 bytes @ 0xE
   326  002E                     	ds	2
   327                           
   328                           	psect	maintext
   329  0790                     __pmaintext:	
   330 ;;
   331 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   332 ;;
   333 ;; *************** function _main *****************
   334 ;; Defined at:
   335 ;;		line 92 in file "main.c"
   336 ;; Parameters:    Size  Location     Type
   337 ;;		None
   338 ;; Auto vars:     Size  Location     Type
   339 ;;  i               2   14[BANK0 ] int 
   340 ;;  str            14    0[BANK0 ] unsigned char [14]
   341 ;; Return value:  Size  Location     Type
   342 ;;                  1    wreg      void 
   343 ;; Registers used:
   344 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   345 ;; Tracked objects:
   346 ;;		On entry : B00/0
   347 ;;		On exit  : 0/0
   348 ;;		Unchanged: 0/0
   349 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   350 ;;      Params:         0       0       0       0       0
   351 ;;      Locals:         0      16       0       0       0
   352 ;;      Temps:          4       0       0       0       0
   353 ;;      Totals:         4      16       0       0       0
   354 ;;Total ram usage:       20 bytes
   355 ;; Hardware stack levels required when called: 2
   356 ;; This function calls:
   357 ;;		_LCD_data
   358 ;;		_LCD_init
   359 ;;		_ser_int
   360 ;;		_tx
   361 ;; This function is called by:
   362 ;;		Startup code after reset
   363 ;; This function uses a non-reentrant model
   364 ;;
   365                           
   366                           
   367                           ;psect for function _main
   368  0790                     _main:
   369  0790                     l776:	
   370                           ;incstack = 0
   371                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   372                           
   373                           
   374                           ;main.c: 94: TRISD=0x00;
   375  0790  1683               	bsf	3,5	;RP0=1, select bank1
   376  0791  1303               	bcf	3,6	;RP1=0, select bank1
   377  0792  0188               	clrf	8	;volatile
   378                           
   379                           ;main.c: 95: TRISB=0X00;
   380  0793  0186               	clrf	6	;volatile
   381  0794                     l778:
   382                           
   383                           ;main.c: 96: LCD_init();
   384  0794  120A  118A  26CE  120A  118A  	fcall	_LCD_init
   385  0799                     l780:
   386                           
   387                           ;main.c: 97: ser_int();
   388  0799  120A  118A  26AC  120A  118A  	fcall	_ser_int
   389  079E                     l782:
   390                           
   391                           ;main.c: 99: char str[]="Good Morning!";
   392  079E  3020               	movlw	main@str& (0+255)
   393  079F  0084               	movwf	4
   394  07A0  3030               	movlw	low main@F893
   395  07A1  00F5               	movwf	??_main
   396  07A2  0804               	movf	4,w
   397  07A3  00F6               	movwf	??_main+1
   398  07A4  300E               	movlw	14
   399  07A5  00F7               	movwf	??_main+2
   400  07A6                     u100:
   401  07A6  0875               	movf	??_main,w
   402  07A7  0084               	movwf	4
   403  07A8  1383               	bcf	3,7	;select IRP bank0
   404  07A9  0800               	movf	0,w
   405  07AA  00F8               	movwf	??_main+3
   406  07AB  0AF5               	incf	??_main,f
   407  07AC  0876               	movf	??_main+1,w
   408  07AD  0084               	movwf	4
   409  07AE  0878               	movf	??_main+3,w
   410  07AF  0080               	movwf	0
   411  07B0  0AF6               	incf	??_main+1,f
   412  07B1  0BF7               	decfsz	??_main+2,f
   413  07B2  2FA6               	goto	u100
   414  07B3                     l784:
   415                           
   416                           ;main.c: 100: for (int i=0;str[i]!='\0';i++)
   417  07B3  1283               	bcf	3,5	;RP0=0, select bank0
   418  07B4  1303               	bcf	3,6	;RP1=0, select bank0
   419  07B5  01AE               	clrf	main@i
   420  07B6  01AF               	clrf	main@i+1
   421  07B7  2FD5               	goto	l790
   422  07B8                     l786:
   423                           
   424                           ;main.c: 101: {;main.c: 102:     LCD_data(str[i]);
   425  07B8  082E               	movf	main@i,w
   426  07B9  3E20               	addlw	(low (main@str| 0))& (0+255)
   427  07BA  0084               	movwf	4
   428  07BB  0800               	movf	0,w
   429  07BC  120A  118A  26F6  120A  118A  	fcall	_LCD_data
   430                           
   431                           ;main.c: 103:     tx(str[i]);
   432  07C1  1283               	bcf	3,5	;RP0=0, select bank0
   433  07C2  1303               	bcf	3,6	;RP1=0, select bank0
   434  07C3  082E               	movf	main@i,w
   435  07C4  3E20               	addlw	(low (main@str| 0))& (0+255)
   436  07C5  0084               	movwf	4
   437  07C6  1383               	bcf	3,7	;select IRP bank0
   438  07C7  0800               	movf	0,w
   439  07C8  120A  118A  2693  120A  118A  	fcall	_tx
   440  07CD                     l788:
   441                           
   442                           ;main.c: 104: }
   443  07CD  3001               	movlw	1
   444  07CE  1283               	bcf	3,5	;RP0=0, select bank0
   445  07CF  1303               	bcf	3,6	;RP1=0, select bank0
   446  07D0  07AE               	addwf	main@i,f
   447  07D1  1803               	skipnc
   448  07D2  0AAF               	incf	main@i+1,f
   449  07D3  3000               	movlw	0
   450  07D4  07AF               	addwf	main@i+1,f
   451  07D5                     l790:
   452  07D5  082E               	movf	main@i,w
   453  07D6  3E20               	addlw	(low (main@str| 0))& (0+255)
   454  07D7  0084               	movwf	4
   455  07D8  1383               	bcf	3,7	;select IRP bank0
   456  07D9  0800               	movf	0,w
   457  07DA  1D03               	btfss	3,2
   458  07DB  2FDD               	goto	u111
   459  07DC  2FDE               	goto	u110
   460  07DD                     u111:
   461  07DD  2FB8               	goto	l786
   462  07DE                     u110:
   463  07DE                     l792:
   464                           
   465                           ;main.c: 105: _delay((unsigned long)((100)*(20000000/4000.0)));
   466  07DE  3003               	movlw	3
   467  07DF  00F7               	movwf	??_main+2
   468  07E0  308A               	movlw	138
   469  07E1  00F6               	movwf	??_main+1
   470  07E2  3055               	movlw	85
   471  07E3  00F5               	movwf	??_main
   472  07E4                     u127:
   473  07E4  0BF5               	decfsz	??_main,f
   474  07E5  2FE4               	goto	u127
   475  07E6  0BF6               	decfsz	??_main+1,f
   476  07E7  2FE4               	goto	u127
   477  07E8  0BF7               	decfsz	??_main+2,f
   478  07E9  2FE4               	goto	u127
   479  07EA  2FEB               	nop2
   480  07EB                     l64:
   481  07EB  120A  118A  2800   	ljmp	start
   482  07EE                     __end_of_main:
   483                           
   484                           	psect	text1
   485  0693                     __ptext1:	
   486 ;; *************** function _tx *****************
   487 ;; Defined at:
   488 ;;		line 34 in file "main.c"
   489 ;; Parameters:    Size  Location     Type
   490 ;;  a               1    wreg     unsigned char 
   491 ;; Auto vars:     Size  Location     Type
   492 ;;  a               1    0[COMMON] unsigned char 
   493 ;; Return value:  Size  Location     Type
   494 ;;                  1    wreg      unsigned char 
   495 ;; Registers used:
   496 ;;		wreg
   497 ;; Tracked objects:
   498 ;;		On entry : 0/0
   499 ;;		On exit  : 0/0
   500 ;;		Unchanged: 0/0
   501 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   502 ;;      Params:         0       0       0       0       0
   503 ;;      Locals:         1       0       0       0       0
   504 ;;      Temps:          0       0       0       0       0
   505 ;;      Totals:         1       0       0       0       0
   506 ;;Total ram usage:        1 bytes
   507 ;; Hardware stack levels used: 1
   508 ;; This function calls:
   509 ;;		Nothing
   510 ;; This function is called by:
   511 ;;		_main
   512 ;; This function uses a non-reentrant model
   513 ;;
   514                           
   515                           
   516                           ;psect for function _tx
   517  0693                     _tx:
   518                           
   519                           ;incstack = 0
   520                           ; Regs used in _tx: [wreg]
   521                           ;tx@a stored from wreg
   522  0693  00F0               	movwf	tx@a
   523  0694                     l750:
   524                           
   525                           ;main.c: 34: unsigned char tx(unsigned char a);main.c: 35: {;main.c: 36:  TXREG=a;
   526  0694  0870               	movf	tx@a,w
   527  0695  1283               	bcf	3,5	;RP0=0, select bank0
   528  0696  1303               	bcf	3,6	;RP1=0, select bank0
   529  0697  0099               	movwf	25	;volatile
   530  0698                     l36:	
   531                           ;main.c: 37:  while(!TXIF);
   532                           
   533  0698  1E0C               	btfss	12,4	;volatile
   534  0699  2E9B               	goto	u81
   535  069A  2E9C               	goto	u80
   536  069B                     u81:
   537  069B  2E98               	goto	l36
   538  069C                     u80:
   539  069C                     l38:
   540                           
   541                           ;main.c: 38:  TXIF = 0;
   542  069C  120C               	bcf	12,4	;volatile
   543  069D                     l39:
   544  069D  0008               	return
   545  069E                     __end_of_tx:
   546                           
   547                           	psect	text2
   548  06AC                     __ptext2:	
   549 ;; *************** function _ser_int *****************
   550 ;; Defined at:
   551 ;;		line 26 in file "main.c"
   552 ;; Parameters:    Size  Location     Type
   553 ;;		None
   554 ;; Auto vars:     Size  Location     Type
   555 ;;		None
   556 ;; Return value:  Size  Location     Type
   557 ;;                  1    wreg      void 
   558 ;; Registers used:
   559 ;;		wreg
   560 ;; Tracked objects:
   561 ;;		On entry : 0/0
   562 ;;		On exit  : 0/0
   563 ;;		Unchanged: 0/0
   564 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   565 ;;      Params:         0       0       0       0       0
   566 ;;      Locals:         0       0       0       0       0
   567 ;;      Temps:          0       0       0       0       0
   568 ;;      Totals:         0       0       0       0       0
   569 ;;Total ram usage:        0 bytes
   570 ;; Hardware stack levels used: 1
   571 ;; This function calls:
   572 ;;		Nothing
   573 ;; This function is called by:
   574 ;;		_main
   575 ;; This function uses a non-reentrant model
   576 ;;
   577                           
   578                           
   579                           ;psect for function _ser_int
   580  06AC                     _ser_int:
   581  06AC                     l748:	
   582                           ;incstack = 0
   583                           ; Regs used in _ser_int: [wreg]
   584                           
   585                           
   586                           ;main.c: 28:  TRISC=0x80;
   587  06AC  3080               	movlw	128
   588  06AD  1683               	bsf	3,5	;RP0=1, select bank1
   589  06AE  1303               	bcf	3,6	;RP1=0, select bank1
   590  06AF  0087               	movwf	7	;volatile
   591                           
   592                           ;main.c: 29:  TXSTA= 0x20;
   593  06B0  3020               	movlw	32
   594  06B1  0098               	movwf	24	;volatile
   595                           
   596                           ;main.c: 30:  RCSTA= 0b10010000;
   597  06B2  3090               	movlw	144
   598  06B3  1283               	bcf	3,5	;RP0=0, select bank0
   599  06B4  1303               	bcf	3,6	;RP1=0, select bank0
   600  06B5  0098               	movwf	24	;volatile
   601                           
   602                           ;main.c: 31:  SPBRG=31;
   603  06B6  301F               	movlw	31
   604  06B7  1683               	bsf	3,5	;RP0=1, select bank1
   605  06B8  1303               	bcf	3,6	;RP1=0, select bank1
   606  06B9  0099               	movwf	25	;volatile
   607  06BA                     l33:
   608  06BA  0008               	return
   609  06BB                     __end_of_ser_int:
   610                           
   611                           	psect	text3
   612  06CE                     __ptext3:	
   613 ;; *************** function _LCD_init *****************
   614 ;; Defined at:
   615 ;;		line 82 in file "main.c"
   616 ;; Parameters:    Size  Location     Type
   617 ;;		None
   618 ;; Auto vars:     Size  Location     Type
   619 ;;		None
   620 ;; Return value:  Size  Location     Type
   621 ;;                  2   53[None  ] int 
   622 ;; Registers used:
   623 ;;		wreg, status,2, status,0, pclath, cstack
   624 ;; Tracked objects:
   625 ;;		On entry : 0/0
   626 ;;		On exit  : 0/0
   627 ;;		Unchanged: 0/0
   628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   629 ;;      Params:         0       0       0       0       0
   630 ;;      Locals:         0       0       0       0       0
   631 ;;      Temps:          2       0       0       0       0
   632 ;;      Totals:         2       0       0       0       0
   633 ;;Total ram usage:        2 bytes
   634 ;; Hardware stack levels used: 1
   635 ;; Hardware stack levels required when called: 1
   636 ;; This function calls:
   637 ;;		_LCD_Command
   638 ;; This function is called by:
   639 ;;		_main
   640 ;; This function uses a non-reentrant model
   641 ;;
   642                           
   643                           
   644                           ;psect for function _LCD_init
   645  06CE                     _LCD_init:
   646  06CE                     l772:	
   647                           ;incstack = 0
   648                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
   649                           
   650                           
   651                           ;main.c: 84: LCD_Command (0x02);
   652  06CE  3002               	movlw	2
   653  06CF  120A  118A  2743  120A  118A  	fcall	_LCD_Command
   654                           
   655                           ;main.c: 85: LCD_Command (0x28);
   656  06D4  3028               	movlw	40
   657  06D5  120A  118A  2743  120A  118A  	fcall	_LCD_Command
   658                           
   659                           ;main.c: 86: LCD_Command (0x80);
   660  06DA  3080               	movlw	128
   661  06DB  120A  118A  2743  120A  118A  	fcall	_LCD_Command
   662                           
   663                           ;main.c: 87: LCD_Command (0x0C);
   664  06E0  300C               	movlw	12
   665  06E1  120A  118A  2743  120A  118A  	fcall	_LCD_Command
   666                           
   667                           ;main.c: 88: LCD_Command (0x06);
   668  06E6  3006               	movlw	6
   669  06E7  120A  118A  2743  120A  118A  	fcall	_LCD_Command
   670  06EC                     l774:
   671                           
   672                           ;main.c: 89: _delay((unsigned long)((10)*(20000000/4000.0)));
   673  06EC  3041               	movlw	65
   674  06ED  00F4               	movwf	??_LCD_init+1
   675  06EE  30EE               	movlw	238
   676  06EF  00F3               	movwf	??_LCD_init
   677  06F0                     u137:
   678  06F0  0BF3               	decfsz	??_LCD_init,f
   679  06F1  2EF0               	goto	u137
   680  06F2  0BF4               	decfsz	??_LCD_init+1,f
   681  06F3  2EF0               	goto	u137
   682  06F4  0000               	nop
   683  06F5                     l54:
   684  06F5  0008               	return
   685  06F6                     __end_of_LCD_init:
   686                           
   687                           	psect	text4
   688  0743                     __ptext4:	
   689 ;; *************** function _LCD_Command *****************
   690 ;; Defined at:
   691 ;;		line 46 in file "main.c"
   692 ;; Parameters:    Size  Location     Type
   693 ;;  cmd             1    wreg     unsigned char 
   694 ;; Auto vars:     Size  Location     Type
   695 ;;  cmd             1    2[COMMON] unsigned char 
   696 ;; Return value:  Size  Location     Type
   697 ;;                  1    wreg      void 
   698 ;; Registers used:
   699 ;;		wreg, status,2, status,0
   700 ;; Tracked objects:
   701 ;;		On entry : 0/0
   702 ;;		On exit  : 0/0
   703 ;;		Unchanged: 0/0
   704 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   705 ;;      Params:         0       0       0       0       0
   706 ;;      Locals:         1       0       0       0       0
   707 ;;      Temps:          2       0       0       0       0
   708 ;;      Totals:         3       0       0       0       0
   709 ;;Total ram usage:        3 bytes
   710 ;; Hardware stack levels used: 1
   711 ;; This function calls:
   712 ;;		Nothing
   713 ;; This function is called by:
   714 ;;		_LCD_init
   715 ;; This function uses a non-reentrant model
   716 ;;
   717                           
   718                           
   719                           ;psect for function _LCD_Command
   720  0743                     _LCD_Command:
   721                           
   722                           ;incstack = 0
   723                           ; Regs used in _LCD_Command: [wreg+status,2+status,0]
   724                           ;LCD_Command@cmd stored from wreg
   725  0743  00F2               	movwf	LCD_Command@cmd
   726  0744                     l728:
   727                           
   728                           ;main.c: 46: void LCD_Command(unsigned char cmd);main.c: 47: {;main.c: 48: RD1=0;
   729  0744  1283               	bcf	3,5	;RP0=0, select bank0
   730  0745  1303               	bcf	3,6	;RP1=0, select bank0
   731  0746  1088               	bcf	8,1	;volatile
   732                           
   733                           ;main.c: 49: RD2=0;
   734  0747  1108               	bcf	8,2	;volatile
   735  0748                     l730:
   736                           
   737                           ;main.c: 50: _delay((unsigned long)((10)*(20000000/4000.0)));
   738  0748  3041               	movlw	65
   739  0749  00F1               	movwf	??_LCD_Command+1
   740  074A  30EE               	movlw	238
   741  074B  00F0               	movwf	??_LCD_Command
   742  074C                     u147:
   743  074C  0BF0               	decfsz	??_LCD_Command,f
   744  074D  2F4C               	goto	u147
   745  074E  0BF1               	decfsz	??_LCD_Command+1,f
   746  074F  2F4C               	goto	u147
   747  0750  0000               	nop
   748                           
   749                           ;main.c: 51: PORTD=(cmd);
   750  0751  0872               	movf	LCD_Command@cmd,w
   751  0752  1283               	bcf	3,5	;RP0=0, select bank0
   752  0753  1303               	bcf	3,6	;RP1=0, select bank0
   753  0754  0088               	movwf	8	;volatile
   754  0755                     l732:
   755                           
   756                           ;main.c: 52: RD3=1;
   757  0755  1588               	bsf	8,3	;volatile
   758                           
   759                           ;main.c: 53: _delay((unsigned long)((10)*(20000000/4000.0)));
   760  0756  3041               	movlw	65
   761  0757  00F1               	movwf	??_LCD_Command+1
   762  0758  30EE               	movlw	238
   763  0759  00F0               	movwf	??_LCD_Command
   764  075A                     u157:
   765  075A  0BF0               	decfsz	??_LCD_Command,f
   766  075B  2F5A               	goto	u157
   767  075C  0BF1               	decfsz	??_LCD_Command+1,f
   768  075D  2F5A               	goto	u157
   769  075E  0000               	nop
   770  075F                     l734:
   771                           
   772                           ;main.c: 54: RD3=0;
   773  075F  1283               	bcf	3,5	;RP0=0, select bank0
   774  0760  1303               	bcf	3,6	;RP1=0, select bank0
   775  0761  1188               	bcf	8,3	;volatile
   776                           
   777                           ;main.c: 55: _delay((unsigned long)((10)*(20000000/4000.0)));
   778  0762  3041               	movlw	65
   779  0763  00F1               	movwf	??_LCD_Command+1
   780  0764  30EE               	movlw	238
   781  0765  00F0               	movwf	??_LCD_Command
   782  0766                     u167:
   783  0766  0BF0               	decfsz	??_LCD_Command,f
   784  0767  2F66               	goto	u167
   785  0768  0BF1               	decfsz	??_LCD_Command+1,f
   786  0769  2F66               	goto	u167
   787  076A  0000               	nop
   788  076B                     l736:
   789                           
   790                           ;main.c: 56: PORTD=(cmd<<4);
   791  076B  0872               	movf	LCD_Command@cmd,w
   792  076C  00F0               	movwf	??_LCD_Command
   793  076D  3003               	movlw	3
   794  076E                     u75:
   795  076E  1003               	clrc
   796  076F  0DF0               	rlf	??_LCD_Command,f
   797  0770  3EFF               	addlw	-1
   798  0771  1D03               	skipz
   799  0772  2F6E               	goto	u75
   800  0773  1003               	clrc
   801  0774  0D70               	rlf	??_LCD_Command,w
   802  0775  1283               	bcf	3,5	;RP0=0, select bank0
   803  0776  1303               	bcf	3,6	;RP1=0, select bank0
   804  0777  0088               	movwf	8	;volatile
   805  0778                     l738:
   806                           
   807                           ;main.c: 57: RD2=0;
   808  0778  1108               	bcf	8,2	;volatile
   809  0779                     l740:
   810                           
   811                           ;main.c: 58: RD3=1;
   812  0779  1588               	bsf	8,3	;volatile
   813  077A                     l742:
   814                           
   815                           ;main.c: 59: _delay((unsigned long)((10)*(20000000/4000.0)));
   816  077A  3041               	movlw	65
   817  077B  00F1               	movwf	??_LCD_Command+1
   818  077C  30EE               	movlw	238
   819  077D  00F0               	movwf	??_LCD_Command
   820  077E                     u177:
   821  077E  0BF0               	decfsz	??_LCD_Command,f
   822  077F  2F7E               	goto	u177
   823  0780  0BF1               	decfsz	??_LCD_Command+1,f
   824  0781  2F7E               	goto	u177
   825  0782  0000               	nop
   826  0783                     l744:
   827                           
   828                           ;main.c: 60: RD3=0;
   829  0783  1283               	bcf	3,5	;RP0=0, select bank0
   830  0784  1303               	bcf	3,6	;RP1=0, select bank0
   831  0785  1188               	bcf	8,3	;volatile
   832  0786                     l746:
   833                           
   834                           ;main.c: 61: _delay((unsigned long)((10)*(20000000/4000.0)));
   835  0786  3041               	movlw	65
   836  0787  00F1               	movwf	??_LCD_Command+1
   837  0788  30EE               	movlw	238
   838  0789  00F0               	movwf	??_LCD_Command
   839  078A                     u187:
   840  078A  0BF0               	decfsz	??_LCD_Command,f
   841  078B  2F8A               	goto	u187
   842  078C  0BF1               	decfsz	??_LCD_Command+1,f
   843  078D  2F8A               	goto	u187
   844  078E  0000               	nop
   845  078F                     l48:
   846  078F  0008               	return
   847  0790                     __end_of_LCD_Command:
   848                           
   849                           	psect	text5
   850  06F6                     __ptext5:	
   851 ;; *************** function _LCD_data *****************
   852 ;; Defined at:
   853 ;;		line 64 in file "main.c"
   854 ;; Parameters:    Size  Location     Type
   855 ;;  data            1    wreg     unsigned char 
   856 ;; Auto vars:     Size  Location     Type
   857 ;;  data            1    2[COMMON] unsigned char 
   858 ;; Return value:  Size  Location     Type
   859 ;;                  1    wreg      void 
   860 ;; Registers used:
   861 ;;		wreg, status,2, status,0
   862 ;; Tracked objects:
   863 ;;		On entry : 0/0
   864 ;;		On exit  : 0/0
   865 ;;		Unchanged: 0/0
   866 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   867 ;;      Params:         0       0       0       0       0
   868 ;;      Locals:         1       0       0       0       0
   869 ;;      Temps:          2       0       0       0       0
   870 ;;      Totals:         3       0       0       0       0
   871 ;;Total ram usage:        3 bytes
   872 ;; Hardware stack levels used: 1
   873 ;; This function calls:
   874 ;;		Nothing
   875 ;; This function is called by:
   876 ;;		_main
   877 ;; This function uses a non-reentrant model
   878 ;;
   879                           
   880                           
   881                           ;psect for function _LCD_data
   882  06F6                     _LCD_data:
   883                           
   884                           ;incstack = 0
   885                           ; Regs used in _LCD_data: [wreg+status,2+status,0]
   886                           ;LCD_data@data stored from wreg
   887  06F6  00F2               	movwf	LCD_data@data
   888  06F7                     l752:
   889                           
   890                           ;main.c: 64: void LCD_data(unsigned char data);main.c: 65: {;main.c: 66: RD1=0;
   891  06F7  1283               	bcf	3,5	;RP0=0, select bank0
   892  06F8  1303               	bcf	3,6	;RP1=0, select bank0
   893  06F9  1088               	bcf	8,1	;volatile
   894                           
   895                           ;main.c: 67: RD2=1;
   896  06FA  1508               	bsf	8,2	;volatile
   897  06FB                     l754:
   898                           
   899                           ;main.c: 68: _delay((unsigned long)((10)*(20000000/4000.0)));
   900  06FB  3041               	movlw	65
   901  06FC  00F1               	movwf	??_LCD_data+1
   902  06FD  30EE               	movlw	238
   903  06FE  00F0               	movwf	??_LCD_data
   904  06FF                     u197:
   905  06FF  0BF0               	decfsz	??_LCD_data,f
   906  0700  2EFF               	goto	u197
   907  0701  0BF1               	decfsz	??_LCD_data+1,f
   908  0702  2EFF               	goto	u197
   909  0703  0000               	nop
   910                           
   911                           ;main.c: 69: PORTD=(data);
   912  0704  0872               	movf	LCD_data@data,w
   913  0705  1283               	bcf	3,5	;RP0=0, select bank0
   914  0706  1303               	bcf	3,6	;RP1=0, select bank0
   915  0707  0088               	movwf	8	;volatile
   916  0708                     l756:
   917                           
   918                           ;main.c: 70: RD3=1;
   919  0708  1588               	bsf	8,3	;volatile
   920                           
   921                           ;main.c: 71: _delay((unsigned long)((10)*(20000000/4000.0)));
   922  0709  3041               	movlw	65
   923  070A  00F1               	movwf	??_LCD_data+1
   924  070B  30EE               	movlw	238
   925  070C  00F0               	movwf	??_LCD_data
   926  070D                     u207:
   927  070D  0BF0               	decfsz	??_LCD_data,f
   928  070E  2F0D               	goto	u207
   929  070F  0BF1               	decfsz	??_LCD_data+1,f
   930  0710  2F0D               	goto	u207
   931  0711  0000               	nop
   932  0712                     l758:
   933                           
   934                           ;main.c: 72: RD3=0;
   935  0712  1283               	bcf	3,5	;RP0=0, select bank0
   936  0713  1303               	bcf	3,6	;RP1=0, select bank0
   937  0714  1188               	bcf	8,3	;volatile
   938                           
   939                           ;main.c: 73: _delay((unsigned long)((10)*(20000000/4000.0)));
   940  0715  3041               	movlw	65
   941  0716  00F1               	movwf	??_LCD_data+1
   942  0717  30EE               	movlw	238
   943  0718  00F0               	movwf	??_LCD_data
   944  0719                     u217:
   945  0719  0BF0               	decfsz	??_LCD_data,f
   946  071A  2F19               	goto	u217
   947  071B  0BF1               	decfsz	??_LCD_data+1,f
   948  071C  2F19               	goto	u217
   949  071D  0000               	nop
   950  071E                     l760:
   951                           
   952                           ;main.c: 74: PORTD=(data<<4);
   953  071E  0872               	movf	LCD_data@data,w
   954  071F  00F0               	movwf	??_LCD_data
   955  0720  3003               	movlw	3
   956  0721                     u95:
   957  0721  1003               	clrc
   958  0722  0DF0               	rlf	??_LCD_data,f
   959  0723  3EFF               	addlw	-1
   960  0724  1D03               	skipz
   961  0725  2F21               	goto	u95
   962  0726  1003               	clrc
   963  0727  0D70               	rlf	??_LCD_data,w
   964  0728  1283               	bcf	3,5	;RP0=0, select bank0
   965  0729  1303               	bcf	3,6	;RP1=0, select bank0
   966  072A  0088               	movwf	8	;volatile
   967  072B                     l762:
   968                           
   969                           ;main.c: 75: RD2=1;
   970  072B  1508               	bsf	8,2	;volatile
   971  072C                     l764:
   972                           
   973                           ;main.c: 76: RD3=1;
   974  072C  1588               	bsf	8,3	;volatile
   975  072D                     l766:
   976                           
   977                           ;main.c: 77: _delay((unsigned long)((10)*(20000000/4000.0)));
   978  072D  3041               	movlw	65
   979  072E  00F1               	movwf	??_LCD_data+1
   980  072F  30EE               	movlw	238
   981  0730  00F0               	movwf	??_LCD_data
   982  0731                     u227:
   983  0731  0BF0               	decfsz	??_LCD_data,f
   984  0732  2F31               	goto	u227
   985  0733  0BF1               	decfsz	??_LCD_data+1,f
   986  0734  2F31               	goto	u227
   987  0735  0000               	nop
   988  0736                     l768:
   989                           
   990                           ;main.c: 78: RD3=0;
   991  0736  1283               	bcf	3,5	;RP0=0, select bank0
   992  0737  1303               	bcf	3,6	;RP1=0, select bank0
   993  0738  1188               	bcf	8,3	;volatile
   994  0739                     l770:
   995                           
   996                           ;main.c: 79: _delay((unsigned long)((10)*(20000000/4000.0)));
   997  0739  3041               	movlw	65
   998  073A  00F1               	movwf	??_LCD_data+1
   999  073B  30EE               	movlw	238
  1000  073C  00F0               	movwf	??_LCD_data
  1001  073D                     u237:
  1002  073D  0BF0               	decfsz	??_LCD_data,f
  1003  073E  2F3D               	goto	u237
  1004  073F  0BF1               	decfsz	??_LCD_data+1,f
  1005  0740  2F3D               	goto	u237
  1006  0741  0000               	nop
  1007  0742                     l51:
  1008  0742  0008               	return
  1009  0743                     __end_of_LCD_data:
  1010  007E                     btemp	set	126	;btemp
  1011  007E                     wtemp0	set	126
  1012                           
  1013                           	psect	idloc
  1014                           
  1015                           ;Config register IDLOC0 @ 0x2000
  1016                           ;	unspecified, using default values
  1017  2000                     	org	8192
  1018  2000  3FFF               	dw	16383
  1019                           
  1020                           ;Config register IDLOC1 @ 0x2001
  1021                           ;	unspecified, using default values
  1022  2001                     	org	8193
  1023  2001  3FFF               	dw	16383
  1024                           
  1025                           ;Config register IDLOC2 @ 0x2002
  1026                           ;	unspecified, using default values
  1027  2002                     	org	8194
  1028  2002  3FFF               	dw	16383
  1029                           
  1030                           ;Config register IDLOC3 @ 0x2003
  1031                           ;	unspecified, using default values
  1032  2003                     	org	8195
  1033  2003  3FFF               	dw	16383
  1034                           
  1035                           	psect	config
  1036                           
  1037                           ;Config register CONFIG @ 0x2007
  1038                           ;	Oscillator Selection bits
  1039                           ;	FOSC = HS, HS oscillator
  1040                           ;	Watchdog Timer Enable bit
  1041                           ;	WDTE = OFF, WDT disabled
  1042                           ;	Power-up Timer Enable bit
  1043                           ;	PWRTE = OFF, PWRT disabled
  1044                           ;	Brown-out Reset Enable bit
  1045                           ;	BOREN = ON, BOR enabled
  1046                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
  1047                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
  1048                           ;	Data EEPROM Memory Code Protection bit
  1049                           ;	CPD = OFF, Data EEPROM code protection off
  1050                           ;	Flash Program Memory Write Enable bits
  1051                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
  1052                           ;	In-Circuit Debugger Mode bit
  1053                           ;	DEBUG = 0x1, unprogrammed default
  1054                           ;	Flash Program Memory Code Protection bit
  1055                           ;	CP = OFF, Code protection off
  1056  2007                     	org	8199
  1057  2007  3FFA               	dw	16378

Data Sizes:
    Strings     0
    Constant    0
    Data        14
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9       9
    BANK0            80     16      30
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_LCD_init
    _LCD_init->_LCD_Command

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                20    20      0     248
                                              5 COMMON     4     4      0
                                              0 BANK0     16    16      0
                           _LCD_data
                           _LCD_init
                            _ser_int
                                 _tx
 ---------------------------------------------------------------------------------
 (1) _tx                                                   1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ser_int                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0      44
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_data                                             3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_data
   _LCD_init
     _LCD_Command
   _ser_int
   _tx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     10      1E       5       37.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      27      12        0.0%
ABS                  0      0      27       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon May 09 13:57:49 2022

                      pc 0002             ?_LCD_Command 0070                       l33 06BA  
                     l51 0742                       l36 0698                       l54 06F5  
                     l38 069C                       l39 069D                       l48 078F  
                     l64 07EB                       u80 069C                       u81 069B  
                     u75 076E                       u95 0721                       _tx 0693  
                     fsr 0004                      l730 0748                      l740 0779  
                    l732 0755                      ?_tx 0070                      l742 077A  
                    l734 075F                      l750 0694                      l760 071E  
                    l752 06F7                      l744 0783                      l736 076B  
                    l728 0744                      l770 0739                      l762 072B  
                    l754 06FB                      l746 0786                      l738 0778  
                    l764 072C                      l756 0708                      l772 06CE  
                    l748 06AC                      l780 0799                      l766 072D  
                    l758 0712                      l774 06EC                      l790 07D5  
                    l782 079E                      l768 0736                      l792 07DE  
                    l784 07B3                      l776 0790                      l786 07B8  
                    l778 0794                      l788 07CD                      _RD1 0041  
                    _RD2 0042                      _RD3 0043                      u100 07A6  
                    u110 07DE                      u111 07DD                      u207 070D  
                    u127 07E4                      u217 0719                      u137 06F0  
                    u227 0731                      u147 074C                      u237 073D  
                    u157 075A                      u167 0766                      u177 077E  
                    u187 078A                      u197 06FF                      fsr0 0004  
                    indf 0000                      tx@a 0070                     ??_tx 0070  
                   _RCIF 0065                     _TXIF 0064                     _main 0790  
                   btemp 007E                     start 0000         __end_of_LCD_data 0743  
       __end_of_LCD_init 06F6                    ?_main 0070                    _RCREG 001A  
                  _RCSTA 0018                    _SPBRG 0099                    _PORTD 0008  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TXREG 0019                    _TXSTA 0098                    main@i 002E  
        __end_of_ser_int 06BB                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07EE             __end_of_main 07EE  
                 ??_main 0075             LCD_data@data 0072     __size_of_LCD_Command 004D  
              ??_ser_int 0070  __end_of__initialization 07FC                ?_LCD_data 0070  
              ?_LCD_init 0070           __pcstackCOMMON 0070             __pidataBANK0 069E  
             __end_of_tx 069E               ??_LCD_data 0070               ??_LCD_init 0073  
             __pmaintext 0790                  __ptext1 0693                  __ptext2 06AC  
                __ptext3 06CE                  __ptext4 0743                  __ptext5 06F6  
                _ser_int 06AC                  main@str 0020     end_of_initialization 07FC  
         LCD_Command@cmd 0072        __size_of_LCD_data 004D        __size_of_LCD_init 0028  
          ??_LCD_Command 0070      start_initialization 07EE               init_fetch0 06BB  
            __pdataBANK0 0030      __end_of_LCD_Command 0790                ___latbits 0002  
          __pcstackBANK0 0020                 ?_ser_int 0070              __size_of_tx 000B  
               _LCD_data 06F6                 _LCD_init 06CE              _LCD_Command 0743  
       __size_of_ser_int 000F            __size_of_main 005E                 main@F893 0030  
               init_ram0 06BF  
