

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed May 11 11:31:53 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	intentry,global,class=CODE,delta=2
    11                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.40
    16                           ; Generated 17/11/2021 GMT
    17                           ; 
    18                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution. Publication is not required when
    32                           ;        this file is used in an embedded application.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F877A Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  0091                     	;# 
    95  0092                     	;# 
    96  0093                     	;# 
    97  0094                     	;# 
    98  0098                     	;# 
    99  0099                     	;# 
   100  009C                     	;# 
   101  009D                     	;# 
   102  009E                     	;# 
   103  009F                     	;# 
   104  010C                     	;# 
   105  010D                     	;# 
   106  010E                     	;# 
   107  010F                     	;# 
   108  018C                     	;# 
   109  018D                     	;# 
   110  0000                     	;# 
   111  0001                     	;# 
   112  0002                     	;# 
   113  0003                     	;# 
   114  0004                     	;# 
   115  0005                     	;# 
   116  0006                     	;# 
   117  0007                     	;# 
   118  0008                     	;# 
   119  0009                     	;# 
   120  000A                     	;# 
   121  000B                     	;# 
   122  000C                     	;# 
   123  000D                     	;# 
   124  000E                     	;# 
   125  000E                     	;# 
   126  000F                     	;# 
   127  0010                     	;# 
   128  0011                     	;# 
   129  0012                     	;# 
   130  0013                     	;# 
   131  0014                     	;# 
   132  0015                     	;# 
   133  0015                     	;# 
   134  0016                     	;# 
   135  0017                     	;# 
   136  0018                     	;# 
   137  0019                     	;# 
   138  001A                     	;# 
   139  001B                     	;# 
   140  001B                     	;# 
   141  001C                     	;# 
   142  001D                     	;# 
   143  001E                     	;# 
   144  001F                     	;# 
   145  0081                     	;# 
   146  0085                     	;# 
   147  0086                     	;# 
   148  0087                     	;# 
   149  0088                     	;# 
   150  0089                     	;# 
   151  008C                     	;# 
   152  008D                     	;# 
   153  008E                     	;# 
   154  0091                     	;# 
   155  0092                     	;# 
   156  0093                     	;# 
   157  0094                     	;# 
   158  0098                     	;# 
   159  0099                     	;# 
   160  009C                     	;# 
   161  009D                     	;# 
   162  009E                     	;# 
   163  009F                     	;# 
   164  010C                     	;# 
   165  010D                     	;# 
   166  010E                     	;# 
   167  010F                     	;# 
   168  018C                     	;# 
   169  018D                     	;# 
   170  0013                     _SSPBUF	set	19
   171  0006                     _PORTB	set	6
   172  00A6                     _SSPOV	set	166
   173  0063                     _SSPIF	set	99
   174  005F                     _GIE	set	95
   175  005E                     _PEIE	set	94
   176  00A4                     _CKP	set	164
   177  00A5                     _SSPEN	set	165
   178  00A3                     _SSPM3	set	163
   179  00A2                     _SSPM2	set	162
   180  00A1                     _SSPM1	set	161
   181  00A0                     _SSPM0	set	160
   182  0086                     _TRISB	set	134
   183  04A0                     _BF	set	1184
   184  0463                     _SSPIE	set	1123
   185  042D                     _TRISA5	set	1069
   186  04F8                     _PCFG0	set	1272
   187  04F9                     _PCFG1	set	1273
   188  04FA                     _PCFG2	set	1274
   189  04FB                     _PCFG3	set	1275
   190  043B                     _TRISC3	set	1083
   191  043C                     _TRISC4	set	1084
   192  043D                     _TRISC5	set	1085
   193  04A7                     _SMP	set	1191
   194  04A6                     _CKE	set	1190
   195                           
   196                           	psect	cinit
   197  000F                     start_initialization:	
   198                           ; #config settings
   199                           
   200  000F                     __initialization:
   201                           
   202                           ; Clear objects allocated to COMMON
   203  000F  01F3               	clrf	__pbssCOMMON& (0+127)
   204  0010                     end_of_initialization:	
   205                           ;End of C runtime variable initialization code
   206                           
   207  0010                     __end_of__initialization:
   208  0010  0183               	clrf	3
   209  0011  120A  118A  283E   	ljmp	_main	;jump to C main() function
   210                           
   211                           	psect	bssCOMMON
   212  0073                     __pbssCOMMON:
   213  0073                     _Data:
   214  0073                     	ds	1
   215                           
   216                           	psect	cstackCOMMON
   217  0070                     __pcstackCOMMON:
   218  0070                     ?_SPI_Slave_Init:
   219  0070                     ?_main:	
   220                           ; 1 bytes @ 0x0
   221                           
   222  0070                     ?_ISR:	
   223                           ; 1 bytes @ 0x0
   224                           
   225  0070                     ??_ISR:	
   226                           ; 1 bytes @ 0x0
   227                           
   228                           
   229                           ; 1 bytes @ 0x0
   230  0070                     	ds	3
   231  0073                     ??_SPI_Slave_Init:
   232  0073                     ??_main:	
   233                           ; 1 bytes @ 0x3
   234                           
   235                           
   236                           	psect	maintext
   237  003E                     __pmaintext:	
   238                           ; 1 bytes @ 0x3
   239 ;;
   240 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   241 ;;
   242 ;; *************** function _main *****************
   243 ;; Defined at:
   244 ;;		line 25 in file "main.c"
   245 ;; Parameters:    Size  Location     Type
   246 ;;		None
   247 ;; Auto vars:     Size  Location     Type
   248 ;;		None
   249 ;; Return value:  Size  Location     Type
   250 ;;                  1    wreg      void 
   251 ;; Registers used:
   252 ;;		wreg, status,2, status,0, pclath, cstack
   253 ;; Tracked objects:
   254 ;;		On entry : B00/0
   255 ;;		On exit  : 0/0
   256 ;;		Unchanged: 0/0
   257 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   258 ;;      Params:         0       0       0       0       0
   259 ;;      Locals:         0       0       0       0       0
   260 ;;      Temps:          0       0       0       0       0
   261 ;;      Totals:         0       0       0       0       0
   262 ;;Total ram usage:        0 bytes
   263 ;; Hardware stack levels required when called: 2
   264 ;; This function calls:
   265 ;;		_SPI_Slave_Init
   266 ;; This function is called by:
   267 ;;		Startup code after reset
   268 ;; This function uses a non-reentrant model
   269 ;;
   270                           
   271                           
   272                           ;psect for function _main
   273  003E                     _main:
   274  003E                     l669:	
   275                           ;incstack = 0
   276                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   277                           
   278                           
   279                           ;main.c: 27: SPI_Slave_Init();
   280  003E  120A  118A  2014  120A  118A  	fcall	_SPI_Slave_Init
   281  0043                     l671:
   282                           
   283                           ;main.c: 28: TRISB = 0x00;
   284  0043  1683               	bsf	3,5	;RP0=1, select bank1
   285  0044  1303               	bcf	3,6	;RP1=0, select bank1
   286  0045  0186               	clrf	6	;volatile
   287  0046                     l673:
   288                           
   289                           ;main.c: 30: {;main.c: 32: PORTB = Data;
   290  0046  0873               	movf	_Data,w
   291  0047  1283               	bcf	3,5	;RP0=0, select bank0
   292  0048  0086               	movwf	6	;volatile
   293  0049  2846               	goto	l673
   294  004A  120A  118A  280C   	ljmp	start
   295  004D                     __end_of_main:
   296                           
   297                           	psect	text1
   298  0014                     __ptext1:	
   299 ;; *************** function _SPI_Slave_Init *****************
   300 ;; Defined at:
   301 ;;		line 36 in file "main.c"
   302 ;; Parameters:    Size  Location     Type
   303 ;;		None
   304 ;; Auto vars:     Size  Location     Type
   305 ;;		None
   306 ;; Return value:  Size  Location     Type
   307 ;;                  1    wreg      void 
   308 ;; Registers used:
   309 ;;		None
   310 ;; Tracked objects:
   311 ;;		On entry : 0/0
   312 ;;		On exit  : 0/0
   313 ;;		Unchanged: 0/0
   314 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   315 ;;      Params:         0       0       0       0       0
   316 ;;      Locals:         0       0       0       0       0
   317 ;;      Temps:          0       0       0       0       0
   318 ;;      Totals:         0       0       0       0       0
   319 ;;Total ram usage:        0 bytes
   320 ;; Hardware stack levels used: 1
   321 ;; Hardware stack levels required when called: 1
   322 ;; This function calls:
   323 ;;		Nothing
   324 ;; This function is called by:
   325 ;;		_main
   326 ;; This function uses a non-reentrant model
   327 ;;
   328                           
   329                           
   330                           ;psect for function _SPI_Slave_Init
   331  0014                     _SPI_Slave_Init:
   332  0014                     l667:	
   333                           ;incstack = 0
   334                           ; Regs used in _SPI_Slave_Init: []
   335                           
   336                           
   337                           ;main.c: 38: SSPM0 = 0;
   338  0014  1283               	bcf	3,5	;RP0=0, select bank0
   339  0015  1303               	bcf	3,6	;RP1=0, select bank0
   340  0016  1014               	bcf	20,0	;volatile
   341                           
   342                           ;main.c: 39: SSPM1 = 0;
   343  0017  1094               	bcf	20,1	;volatile
   344                           
   345                           ;main.c: 40: SSPM2 = 1;
   346  0018  1514               	bsf	20,2	;volatile
   347                           
   348                           ;main.c: 41: SSPM3 = 0;
   349  0019  1194               	bcf	20,3	;volatile
   350                           
   351                           ;main.c: 42: SSPEN = 1;
   352  001A  1694               	bsf	20,5	;volatile
   353                           
   354                           ;main.c: 43: CKP = 0;
   355  001B  1214               	bcf	20,4	;volatile
   356                           
   357                           ;main.c: 44: CKE = 0;
   358  001C  1683               	bsf	3,5	;RP0=1, select bank1
   359  001D  1303               	bcf	3,6	;RP1=0, select bank1
   360  001E  1314               	bcf	20,6	;volatile
   361                           
   362                           ;main.c: 45: SMP = 0;
   363  001F  1394               	bcf	20,7	;volatile
   364                           
   365                           ;main.c: 46: TRISC5 = 0;
   366  0020  1287               	bcf	7,5	;volatile
   367                           
   368                           ;main.c: 47: TRISC4 = 1;
   369  0021  1607               	bsf	7,4	;volatile
   370                           
   371                           ;main.c: 48: TRISC3 = 1;
   372  0022  1587               	bsf	7,3	;volatile
   373                           
   374                           ;main.c: 49: PCFG3 =0;
   375  0023  119F               	bcf	31,3	;volatile
   376                           
   377                           ;main.c: 50: PCFG2 =1;
   378  0024  151F               	bsf	31,2	;volatile
   379                           
   380                           ;main.c: 51: PCFG1 =0;
   381  0025  109F               	bcf	31,1	;volatile
   382                           
   383                           ;main.c: 52: PCFG0 =0;
   384  0026  101F               	bcf	31,0	;volatile
   385                           
   386                           ;main.c: 53: TRISA5=1;
   387  0027  1685               	bsf	5,5	;volatile
   388                           
   389                           ;main.c: 54: SSPIE=1;
   390  0028  158C               	bsf	12,3	;volatile
   391                           
   392                           ;main.c: 55: PEIE=1;
   393  0029  170B               	bsf	11,6	;volatile
   394                           
   395                           ;main.c: 56: GIE=1;
   396  002A  178B               	bsf	11,7	;volatile
   397  002B                     l65:
   398  002B  0008               	return
   399  002C                     __end_of_SPI_Slave_Init:
   400                           
   401                           	psect	text2
   402  002C                     __ptext2:	
   403 ;; *************** function _ISR *****************
   404 ;; Defined at:
   405 ;;		line 71 in file "main.c"
   406 ;; Parameters:    Size  Location     Type
   407 ;;		None
   408 ;; Auto vars:     Size  Location     Type
   409 ;;		None
   410 ;; Return value:  Size  Location     Type
   411 ;;                  1    wreg      void 
   412 ;; Registers used:
   413 ;;		wreg
   414 ;; Tracked objects:
   415 ;;		On entry : 0/0
   416 ;;		On exit  : 0/0
   417 ;;		Unchanged: 0/0
   418 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   419 ;;      Params:         0       0       0       0       0
   420 ;;      Locals:         0       0       0       0       0
   421 ;;      Temps:          3       0       0       0       0
   422 ;;      Totals:         3       0       0       0       0
   423 ;;Total ram usage:        3 bytes
   424 ;; Hardware stack levels used: 1
   425 ;; This function calls:
   426 ;;		Nothing
   427 ;; This function is called by:
   428 ;;		Interrupt level 1
   429 ;; This function uses a non-reentrant model
   430 ;;
   431                           
   432                           
   433                           ;psect for function _ISR
   434  002C                     _ISR:
   435  002C                     i1l687:
   436                           
   437                           ;main.c: 73: if(SSPIF)
   438  002C  1283               	bcf	3,5	;RP0=0, select bank0
   439  002D  1303               	bcf	3,6	;RP1=0, select bank0
   440  002E  1D8C               	btfss	12,3	;volatile
   441  002F  2831               	goto	u2_21
   442  0030  2832               	goto	u2_20
   443  0031                     u2_21:
   444  0031  2837               	goto	i1l75
   445  0032                     u2_20:
   446  0032                     i1l689:
   447                           
   448                           ;main.c: 74: {;main.c: 75: Data= SSPBUF;
   449  0032  0813               	movf	19,w	;volatile
   450  0033  00F0               	movwf	??_ISR
   451  0034  0870               	movf	??_ISR,w
   452  0035  00F3               	movwf	_Data
   453  0036                     i1l691:
   454                           
   455                           ;main.c: 76: SSPIF = 0;
   456  0036  118C               	bcf	12,3	;volatile
   457  0037                     i1l75:
   458  0037  0872               	movf	??_ISR+2,w
   459  0038  008A               	movwf	10
   460  0039  0E71               	swapf	??_ISR+1,w
   461  003A  0083               	movwf	3
   462  003B  0EFE               	swapf	btemp,f
   463  003C  0E7E               	swapf	btemp,w
   464  003D  0009               	retfie
   465  003E                     __end_of_ISR:
   466  007E                     btemp	set	126	;btemp
   467  007E                     wtemp0	set	126
   468                           
   469                           	psect	intentry
   470  0004                     __pintentry:	
   471                           ;incstack = 0
   472                           ; Regs used in _ISR: [wreg]
   473                           
   474  0004                     interrupt_function:
   475  007E                     saved_w	set	btemp
   476  0004  00FE               	movwf	btemp
   477  0005  0E03               	swapf	3,w
   478  0006  00F1               	movwf	??_ISR+1
   479  0007  080A               	movf	10,w
   480  0008  00F2               	movwf	??_ISR+2
   481  0009  120A  118A  282C   	ljmp	_ISR
   482                           
   483                           	psect	idloc
   484                           
   485                           ;Config register IDLOC0 @ 0x2000
   486                           ;	unspecified, using default values
   487  2000                     	org	8192
   488  2000  3FFF               	dw	16383
   489                           
   490                           ;Config register IDLOC1 @ 0x2001
   491                           ;	unspecified, using default values
   492  2001                     	org	8193
   493  2001  3FFF               	dw	16383
   494                           
   495                           ;Config register IDLOC2 @ 0x2002
   496                           ;	unspecified, using default values
   497  2002                     	org	8194
   498  2002  3FFF               	dw	16383
   499                           
   500                           ;Config register IDLOC3 @ 0x2003
   501                           ;	unspecified, using default values
   502  2003                     	org	8195
   503  2003  3FFF               	dw	16383
   504                           
   505                           	psect	config
   506                           
   507                           ;Config register CONFIG @ 0x2007
   508                           ;	Oscillator Selection bits
   509                           ;	FOSC = HS, HS oscillator
   510                           ;	Watchdog Timer Enable bit
   511                           ;	WDTE = OFF, WDT disabled
   512                           ;	Power-up Timer Enable bit
   513                           ;	PWRTE = OFF, PWRT disabled
   514                           ;	Brown-out Reset Enable bit
   515                           ;	BOREN = ON, BOR enabled
   516                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   517                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   518                           ;	Data EEPROM Memory Code Protection bit
   519                           ;	CPD = OFF, Data EEPROM code protection off
   520                           ;	Flash Program Memory Write Enable bits
   521                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   522                           ;	In-Circuit Debugger Mode bit
   523                           ;	DEBUG = 0x1, unprogrammed default
   524                           ;	Flash Program Memory Code Protection bit
   525                           ;	CP = OFF, Code protection off
   526  2007                     	org	8199
   527  2007  3FFA               	dw	16378

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3       4
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _ISR in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _ISR in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _ISR in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _ISR in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _ISR in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0       0
                     _SPI_Slave_Init
 ---------------------------------------------------------------------------------
 (1) _SPI_Slave_Init                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _ISR                                                  3     3      0       0
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_Slave_Init

 _ISR (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      3       4       1       28.6%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       4       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       4      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed May 11 11:31:53 2022

                     _BF 04A0                       l65 002B                      l671 0043  
                    l673 0046                      l667 0014                      l669 003E  
                    _CKE 04A6                      _CKP 00A4                      _GIE 005F  
                    _ISR 002C                      _SMP 04A7                     ?_ISR 0070  
                   _PEIE 005E                     i1l75 0037                     _Data 0073  
                   u2_20 0032                     u2_21 0031                     _main 003E  
                   btemp 007E           _SPI_Slave_Init 0014                     start 000C  
                  ??_ISR 0070                    ?_main 0070                    _PCFG0 04F8  
                  _PCFG1 04F9                    _PCFG2 04FA                    _PCFG3 04FB  
                  i1l691 0036                    i1l687 002C                    i1l689 0032  
                  _PORTB 0006                    _SSPM0 00A0                    _SSPM1 00A1  
                  _SSPM2 00A2                    _SSPM3 00A3                    _TRISB 0086  
                  _SSPIE 0463                    _SSPEN 00A5                    _SSPIF 0063  
                  _SSPOV 00A6                    pclath 000A   __end_of_SPI_Slave_Init 002C  
                  status 0003                    wtemp0 007E          __initialization 000F  
           __end_of_main 004D                   ??_main 0073          ?_SPI_Slave_Init 0070  
                 _TRISA5 042D                   _TRISC3 043B                   _TRISC4 043C  
                 _TRISC5 043D                   _SSPBUF 0013                   saved_w 007E  
__end_of__initialization 0010           __pcstackCOMMON 0070               __pmaintext 003E  
             __pintentry 0004                  __ptext1 0014                  __ptext2 002C  
           __size_of_ISR 0012         ??_SPI_Slave_Init 0073     end_of_initialization 0010  
    start_initialization 000F              __end_of_ISR 003E              __pbssCOMMON 0073  
              ___latbits 0002        interrupt_function 0004            __size_of_main 000F  
__size_of_SPI_Slave_Init 0018                 intlevel1 0000  
