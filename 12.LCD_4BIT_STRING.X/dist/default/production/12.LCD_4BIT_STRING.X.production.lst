

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Apr 19 11:01:00 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	inittext,global,class=CODE,delta=2
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    15                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    16                           	dabs	1,0x7E,2
    17  0000                     
    18                           ; Version 2.40
    19                           ; Generated 17/11/2021 GMT
    20                           ; 
    21                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution. Publication is not required when
    35                           ;        this file is used in an embedded application.
    36                           ; 
    37                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    38                           ;        software without specific prior written permission.
    39                           ; 
    40                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    41                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    42                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    43                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    44                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    45                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    46                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    47                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    48                           ; 
    49                           ; 
    50                           ; Code-generator required, PIC16F877A Definitions
    51                           ; 
    52                           ; SFR Addresses
    53  0000                     	;# 
    54  0001                     	;# 
    55  0002                     	;# 
    56  0003                     	;# 
    57  0004                     	;# 
    58  0005                     	;# 
    59  0006                     	;# 
    60  0007                     	;# 
    61  0008                     	;# 
    62  0009                     	;# 
    63  000A                     	;# 
    64  000B                     	;# 
    65  000C                     	;# 
    66  000D                     	;# 
    67  000E                     	;# 
    68  000E                     	;# 
    69  000F                     	;# 
    70  0010                     	;# 
    71  0011                     	;# 
    72  0012                     	;# 
    73  0013                     	;# 
    74  0014                     	;# 
    75  0015                     	;# 
    76  0015                     	;# 
    77  0016                     	;# 
    78  0017                     	;# 
    79  0018                     	;# 
    80  0019                     	;# 
    81  001A                     	;# 
    82  001B                     	;# 
    83  001B                     	;# 
    84  001C                     	;# 
    85  001D                     	;# 
    86  001E                     	;# 
    87  001F                     	;# 
    88  0081                     	;# 
    89  0085                     	;# 
    90  0086                     	;# 
    91  0087                     	;# 
    92  0088                     	;# 
    93  0089                     	;# 
    94  008C                     	;# 
    95  008D                     	;# 
    96  008E                     	;# 
    97  0091                     	;# 
    98  0092                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0098                     	;# 
   102  0099                     	;# 
   103  009C                     	;# 
   104  009D                     	;# 
   105  009E                     	;# 
   106  009F                     	;# 
   107  010C                     	;# 
   108  010D                     	;# 
   109  010E                     	;# 
   110  010F                     	;# 
   111  018C                     	;# 
   112  018D                     	;# 
   113  0000                     	;# 
   114  0001                     	;# 
   115  0002                     	;# 
   116  0003                     	;# 
   117  0004                     	;# 
   118  0005                     	;# 
   119  0006                     	;# 
   120  0007                     	;# 
   121  0008                     	;# 
   122  0009                     	;# 
   123  000A                     	;# 
   124  000B                     	;# 
   125  000C                     	;# 
   126  000D                     	;# 
   127  000E                     	;# 
   128  000E                     	;# 
   129  000F                     	;# 
   130  0010                     	;# 
   131  0011                     	;# 
   132  0012                     	;# 
   133  0013                     	;# 
   134  0014                     	;# 
   135  0015                     	;# 
   136  0015                     	;# 
   137  0016                     	;# 
   138  0017                     	;# 
   139  0018                     	;# 
   140  0019                     	;# 
   141  001A                     	;# 
   142  001B                     	;# 
   143  001B                     	;# 
   144  001C                     	;# 
   145  001D                     	;# 
   146  001E                     	;# 
   147  001F                     	;# 
   148  0081                     	;# 
   149  0085                     	;# 
   150  0086                     	;# 
   151  0087                     	;# 
   152  0088                     	;# 
   153  0089                     	;# 
   154  008C                     	;# 
   155  008D                     	;# 
   156  008E                     	;# 
   157  0091                     	;# 
   158  0092                     	;# 
   159  0093                     	;# 
   160  0094                     	;# 
   161  0098                     	;# 
   162  0099                     	;# 
   163  009C                     	;# 
   164  009D                     	;# 
   165  009E                     	;# 
   166  009F                     	;# 
   167  010C                     	;# 
   168  010D                     	;# 
   169  010E                     	;# 
   170  010F                     	;# 
   171  018C                     	;# 
   172  018D                     	;# 
   173                           
   174                           	psect	idataBANK0
   175  06C9                     __pidataBANK0:
   176                           
   177                           ;initializer for main@F884
   178  06C9  3447               	retlw	71
   179  06CA  346F               	retlw	111
   180  06CB  346F               	retlw	111
   181  06CC  3464               	retlw	100
   182  06CD  3420               	retlw	32
   183  06CE  344D               	retlw	77
   184  06CF  346F               	retlw	111
   185  06D0  3472               	retlw	114
   186  06D1  346E               	retlw	110
   187  06D2  3469               	retlw	105
   188  06D3  346E               	retlw	110
   189  06D4  3467               	retlw	103
   190  06D5  3400               	retlw	0
   191  0008                     _PORTD	set	8
   192  0042                     _RD2	set	66
   193  0041                     _RD1	set	65
   194  0088                     _TRISD	set	136
   195                           
   196                           	psect	cinit
   197  07EE                     start_initialization:	
   198                           ; #config settings
   199                           
   200  07EE                     __initialization:
   201                           
   202                           ; Initialize objects allocated to BANK0
   203  07EE  1383               	bcf	3,7	;select IRP bank0
   204  07EF  303C               	movlw	low (__pdataBANK0+13)
   205  07F0  00FD               	movwf	btemp+-1
   206  07F1  3006               	movlw	high __pidataBANK0
   207  07F2  00FE               	movwf	btemp
   208  07F3  30C9               	movlw	low __pidataBANK0
   209  07F4  00FF               	movwf	btemp+1
   210  07F5  302F               	movlw	low __pdataBANK0
   211  07F6  0084               	movwf	4
   212  07F7  120A  118A  26DA  120A  118A  	fcall	init_ram0
   213  07FC                     end_of_initialization:	
   214                           ;End of C runtime variable initialization code
   215                           
   216  07FC                     __end_of__initialization:
   217  07FC  0183               	clrf	3
   218  07FD  120A  118A  2F11   	ljmp	_main	;jump to C main() function
   219                           
   220                           	psect	dataBANK0
   221  002F                     __pdataBANK0:
   222  002F                     main@F884:
   223  002F                     	ds	13
   224                           
   225                           	psect	inittext
   226  06D6                     init_fetch0:	
   227                           ;	Called with low address in FSR and high address in W
   228                           
   229  06D6  087E               	movf	btemp,w
   230  06D7  008A               	movwf	10
   231  06D8  087F               	movf	btemp+1,w
   232  06D9  0082               	movwf	2
   233  06DA                     init_ram0:	
   234                           ;Called with:
   235                           ;	high address of idata address in btemp 
   236                           ;	low address of idata address in btemp+1 
   237                           ;	low address of data in FSR
   238                           ;	high address + 1 of data in btemp-1
   239                           
   240  06DA  120A  118A  26D6  120A  118A  	fcall	init_fetch0
   241  06DF  0080               	movwf	0
   242  06E0  0A84               	incf	4,f
   243  06E1  0804               	movf	4,w
   244  06E2  067D               	xorwf	btemp+-1,w
   245  06E3  1903               	btfsc	3,2
   246  06E4  3400               	retlw	0
   247  06E5  0AFF               	incf	btemp+1,f
   248  06E6  1903               	btfsc	3,2
   249  06E7  0AFE               	incf	btemp,f
   250  06E8  2EDA               	goto	init_ram0
   251                           
   252                           	psect	cstackCOMMON
   253  0070                     __pcstackCOMMON:
   254  0070                     ?_LCD_Command:
   255  0070                     ??_LCD_Command:	
   256                           ; 1 bytes @ 0x0
   257                           
   258  0070                     ?_LCD_data:	
   259                           ; 1 bytes @ 0x0
   260                           
   261  0070                     ??_LCD_data:	
   262                           ; 1 bytes @ 0x0
   263                           
   264  0070                     ?_LCD_init:	
   265                           ; 1 bytes @ 0x0
   266                           
   267  0070                     ?_main:	
   268                           ; 1 bytes @ 0x0
   269                           
   270                           
   271                           ; 1 bytes @ 0x0
   272  0070                     	ds	2
   273  0072                     LCD_Command@cmd:
   274  0072                     LCD_data@data:	
   275                           ; 1 bytes @ 0x2
   276                           
   277                           
   278                           ; 1 bytes @ 0x2
   279  0072                     	ds	1
   280  0073                     ??_LCD_init:
   281                           
   282                           ; 1 bytes @ 0x3
   283  0073                     	ds	2
   284  0075                     ??_main:
   285                           
   286                           ; 1 bytes @ 0x5
   287  0075                     	ds	4
   288                           
   289                           	psect	cstackBANK0
   290  0020                     __pcstackBANK0:
   291  0020                     main@a:
   292                           
   293                           ; 13 bytes @ 0x0
   294  0020                     	ds	13
   295  002D                     main@i:
   296                           
   297                           ; 2 bytes @ 0xD
   298  002D                     	ds	2
   299                           
   300                           	psect	maintext
   301  0711                     __pmaintext:	
   302 ;;
   303 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
   304 ;;
   305 ;; *************** function _main *****************
   306 ;; Defined at:
   307 ;;		line 67 in file "main.c"
   308 ;; Parameters:    Size  Location     Type
   309 ;;		None
   310 ;; Auto vars:     Size  Location     Type
   311 ;;  i               2   13[BANK0 ] int 
   312 ;;  a              13    0[BANK0 ] unsigned char [13]
   313 ;; Return value:  Size  Location     Type
   314 ;;                  1    wreg      void 
   315 ;; Registers used:
   316 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   317 ;; Tracked objects:
   318 ;;		On entry : B00/0
   319 ;;		On exit  : 0/0
   320 ;;		Unchanged: 0/0
   321 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   322 ;;      Params:         0       0       0       0       0
   323 ;;      Locals:         0      15       0       0       0
   324 ;;      Temps:          4       0       0       0       0
   325 ;;      Totals:         4      15       0       0       0
   326 ;;Total ram usage:       19 bytes
   327 ;; Hardware stack levels required when called: 2
   328 ;; This function calls:
   329 ;;		_LCD_Command
   330 ;;		_LCD_data
   331 ;;		_LCD_init
   332 ;; This function is called by:
   333 ;;		Startup code after reset
   334 ;; This function uses a non-reentrant model
   335 ;;
   336                           
   337                           
   338                           ;psect for function _main
   339  0711                     _main:
   340  0711                     l725:	
   341                           ;incstack = 0
   342                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   343                           
   344                           
   345                           ;main.c: 69:     TRISD=0x00;
   346  0711  1683               	bsf	3,5	;RP0=1, select bank1
   347  0712  1303               	bcf	3,6	;RP1=0, select bank1
   348  0713  0188               	clrf	8	;volatile
   349  0714                     l727:
   350                           
   351                           ;main.c: 70:     LCD_init();
   352  0714  120A  118A  26E9  120A  118A  	fcall	_LCD_init
   353  0719                     l729:
   354                           
   355                           ;main.c: 71:     LCD_Command (0x80);
   356  0719  3080               	movlw	128
   357  071A  120A  118A  27A2  120A  118A  	fcall	_LCD_Command
   358  071F                     l731:
   359                           
   360                           ;main.c: 72:     char a[]={"Good Morning"};
   361  071F  3020               	movlw	main@a& (0+255)
   362  0720  0084               	movwf	4
   363  0721  302F               	movlw	low main@F884
   364  0722  00F5               	movwf	??_main
   365  0723  0804               	movf	4,w
   366  0724  00F6               	movwf	??_main+1
   367  0725  300D               	movlw	13
   368  0726  00F7               	movwf	??_main+2
   369  0727                     u70:
   370  0727  0875               	movf	??_main,w
   371  0728  0084               	movwf	4
   372  0729  1383               	bcf	3,7	;select IRP bank0
   373  072A  0800               	movf	0,w
   374  072B  00F8               	movwf	??_main+3
   375  072C  0AF5               	incf	??_main,f
   376  072D  0876               	movf	??_main+1,w
   377  072E  0084               	movwf	4
   378  072F  0878               	movf	??_main+3,w
   379  0730  0080               	movwf	0
   380  0731  0AF6               	incf	??_main+1,f
   381  0732  0BF7               	decfsz	??_main+2,f
   382  0733  2F27               	goto	u70
   383  0734                     l733:
   384                           
   385                           ;main.c: 73:     for (int i=0;a[i]!='\0';i++)
   386  0734  1283               	bcf	3,5	;RP0=0, select bank0
   387  0735  1303               	bcf	3,6	;RP1=0, select bank0
   388  0736  01AD               	clrf	main@i
   389  0737  01AE               	clrf	main@i+1
   390  0738  2F4A               	goto	l739
   391  0739                     l735:
   392                           
   393                           ;main.c: 74:     {;main.c: 75:         LCD_data(a[i]);
   394  0739  082D               	movf	main@i,w
   395  073A  3E20               	addlw	(low (main@a| 0))& (0+255)
   396  073B  0084               	movwf	4
   397  073C  0800               	movf	0,w
   398  073D  120A  118A  2756  120A  118A  	fcall	_LCD_data
   399  0742                     l737:
   400                           
   401                           ;main.c: 76:     }
   402  0742  3001               	movlw	1
   403  0743  1283               	bcf	3,5	;RP0=0, select bank0
   404  0744  1303               	bcf	3,6	;RP1=0, select bank0
   405  0745  07AD               	addwf	main@i,f
   406  0746  1803               	skipnc
   407  0747  0AAE               	incf	main@i+1,f
   408  0748  3000               	movlw	0
   409  0749  07AE               	addwf	main@i+1,f
   410  074A                     l739:
   411  074A  082D               	movf	main@i,w
   412  074B  3E20               	addlw	(low (main@a| 0))& (0+255)
   413  074C  0084               	movwf	4
   414  074D  1383               	bcf	3,7	;select IRP bank0
   415  074E  0800               	movf	0,w
   416  074F  1D03               	btfss	3,2
   417  0750  2F52               	goto	u81
   418  0751  2F53               	goto	u80
   419  0752                     u81:
   420  0752  2F39               	goto	l735
   421  0753                     u80:
   422  0753                     l29:
   423  0753  120A  118A  2800   	ljmp	start
   424  0756                     __end_of_main:
   425                           
   426                           	psect	text1
   427  06E9                     __ptext1:	
   428 ;; *************** function _LCD_init *****************
   429 ;; Defined at:
   430 ;;		line 57 in file "main.c"
   431 ;; Parameters:    Size  Location     Type
   432 ;;		None
   433 ;; Auto vars:     Size  Location     Type
   434 ;;		None
   435 ;; Return value:  Size  Location     Type
   436 ;;                  1    wreg      void 
   437 ;; Registers used:
   438 ;;		wreg, status,2, status,0, pclath, cstack
   439 ;; Tracked objects:
   440 ;;		On entry : 0/0
   441 ;;		On exit  : 0/0
   442 ;;		Unchanged: 0/0
   443 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   444 ;;      Params:         0       0       0       0       0
   445 ;;      Locals:         0       0       0       0       0
   446 ;;      Temps:          2       0       0       0       0
   447 ;;      Totals:         2       0       0       0       0
   448 ;;Total ram usage:        2 bytes
   449 ;; Hardware stack levels used: 1
   450 ;; Hardware stack levels required when called: 1
   451 ;; This function calls:
   452 ;;		_LCD_Command
   453 ;; This function is called by:
   454 ;;		_main
   455 ;; This function uses a non-reentrant model
   456 ;;
   457                           
   458                           
   459                           ;psect for function _LCD_init
   460  06E9                     _LCD_init:
   461  06E9                     l721:	
   462                           ;incstack = 0
   463                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
   464                           
   465                           
   466                           ;main.c: 59: LCD_Command (0x02);
   467  06E9  3002               	movlw	2
   468  06EA  120A  118A  27A2  120A  118A  	fcall	_LCD_Command
   469                           
   470                           ;main.c: 60: LCD_Command (0x28);
   471  06EF  3028               	movlw	40
   472  06F0  120A  118A  27A2  120A  118A  	fcall	_LCD_Command
   473                           
   474                           ;main.c: 61: LCD_Command (0x80);
   475  06F5  3080               	movlw	128
   476  06F6  120A  118A  27A2  120A  118A  	fcall	_LCD_Command
   477                           
   478                           ;main.c: 62: LCD_Command (0x0C);
   479  06FB  300C               	movlw	12
   480  06FC  120A  118A  27A2  120A  118A  	fcall	_LCD_Command
   481                           
   482                           ;main.c: 63: LCD_Command (0x06);
   483  0701  3006               	movlw	6
   484  0702  120A  118A  27A2  120A  118A  	fcall	_LCD_Command
   485  0707                     l723:
   486                           
   487                           ;main.c: 64: _delay((unsigned long)((10)*(16000000/4000.0)));
   488  0707  3034               	movlw	52
   489  0708  00F4               	movwf	??_LCD_init+1
   490  0709  30F1               	movlw	241
   491  070A  00F3               	movwf	??_LCD_init
   492  070B                     u97:
   493  070B  0BF3               	decfsz	??_LCD_init,f
   494  070C  2F0B               	goto	u97
   495  070D  0BF4               	decfsz	??_LCD_init+1,f
   496  070E  2F0B               	goto	u97
   497  070F  2F10               	nop2
   498  0710                     l19:
   499  0710  0008               	return
   500  0711                     __end_of_LCD_init:
   501                           
   502                           	psect	text2
   503  07A2                     __ptext2:	
   504 ;; *************** function _LCD_Command *****************
   505 ;; Defined at:
   506 ;;		line 21 in file "main.c"
   507 ;; Parameters:    Size  Location     Type
   508 ;;  cmd             1    wreg     unsigned char 
   509 ;; Auto vars:     Size  Location     Type
   510 ;;  cmd             1    2[COMMON] unsigned char 
   511 ;; Return value:  Size  Location     Type
   512 ;;                  1    wreg      void 
   513 ;; Registers used:
   514 ;;		wreg, status,2, status,0
   515 ;; Tracked objects:
   516 ;;		On entry : 0/0
   517 ;;		On exit  : 0/0
   518 ;;		Unchanged: 0/0
   519 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   520 ;;      Params:         0       0       0       0       0
   521 ;;      Locals:         1       0       0       0       0
   522 ;;      Temps:          2       0       0       0       0
   523 ;;      Totals:         3       0       0       0       0
   524 ;;Total ram usage:        3 bytes
   525 ;; Hardware stack levels used: 1
   526 ;; This function calls:
   527 ;;		Nothing
   528 ;; This function is called by:
   529 ;;		_LCD_init
   530 ;;		_main
   531 ;; This function uses a non-reentrant model
   532 ;;
   533                           
   534                           
   535                           ;psect for function _LCD_Command
   536  07A2                     _LCD_Command:
   537                           
   538                           ;incstack = 0
   539                           ; Regs used in _LCD_Command: [wreg+status,2+status,0]
   540                           ;LCD_Command@cmd stored from wreg
   541  07A2  00F2               	movwf	LCD_Command@cmd
   542  07A3                     l681:
   543                           
   544                           ;main.c: 21: void LCD_Command(unsigned char cmd);main.c: 22: {;main.c: 23: RD1=0;
   545  07A3  1283               	bcf	3,5	;RP0=0, select bank0
   546  07A4  1303               	bcf	3,6	;RP1=0, select bank0
   547  07A5  1088               	bcf	8,1	;volatile
   548  07A6                     l683:
   549                           
   550                           ;main.c: 24: _delay((unsigned long)((10)*(16000000/4000.0)));
   551  07A6  3034               	movlw	52
   552  07A7  00F1               	movwf	??_LCD_Command+1
   553  07A8  30F1               	movlw	241
   554  07A9  00F0               	movwf	??_LCD_Command
   555  07AA                     u107:
   556  07AA  0BF0               	decfsz	??_LCD_Command,f
   557  07AB  2FAA               	goto	u107
   558  07AC  0BF1               	decfsz	??_LCD_Command+1,f
   559  07AD  2FAA               	goto	u107
   560  07AE  2FAF               	nop2
   561                           
   562                           ;main.c: 25: PORTD=(cmd);
   563  07AF  0872               	movf	LCD_Command@cmd,w
   564  07B0  1283               	bcf	3,5	;RP0=0, select bank0
   565  07B1  1303               	bcf	3,6	;RP1=0, select bank0
   566  07B2  0088               	movwf	8	;volatile
   567  07B3                     l685:
   568                           
   569                           ;main.c: 26: RD2=1;
   570  07B3  1508               	bsf	8,2	;volatile
   571                           
   572                           ;main.c: 27: _delay((unsigned long)((10)*(16000000/4000.0)));
   573  07B4  3034               	movlw	52
   574  07B5  00F1               	movwf	??_LCD_Command+1
   575  07B6  30F1               	movlw	241
   576  07B7  00F0               	movwf	??_LCD_Command
   577  07B8                     u117:
   578  07B8  0BF0               	decfsz	??_LCD_Command,f
   579  07B9  2FB8               	goto	u117
   580  07BA  0BF1               	decfsz	??_LCD_Command+1,f
   581  07BB  2FB8               	goto	u117
   582  07BC  2FBD               	nop2
   583  07BD                     l687:
   584                           
   585                           ;main.c: 28: RD2=0;
   586  07BD  1283               	bcf	3,5	;RP0=0, select bank0
   587  07BE  1303               	bcf	3,6	;RP1=0, select bank0
   588  07BF  1108               	bcf	8,2	;volatile
   589                           
   590                           ;main.c: 29: _delay((unsigned long)((10)*(16000000/4000.0)));
   591  07C0  3034               	movlw	52
   592  07C1  00F1               	movwf	??_LCD_Command+1
   593  07C2  30F1               	movlw	241
   594  07C3  00F0               	movwf	??_LCD_Command
   595  07C4                     u127:
   596  07C4  0BF0               	decfsz	??_LCD_Command,f
   597  07C5  2FC4               	goto	u127
   598  07C6  0BF1               	decfsz	??_LCD_Command+1,f
   599  07C7  2FC4               	goto	u127
   600  07C8  2FC9               	nop2
   601  07C9                     l689:
   602                           
   603                           ;main.c: 31: PORTD=(cmd<<4);
   604  07C9  0872               	movf	LCD_Command@cmd,w
   605  07CA  00F0               	movwf	??_LCD_Command
   606  07CB  3003               	movlw	3
   607  07CC                     u55:
   608  07CC  1003               	clrc
   609  07CD  0DF0               	rlf	??_LCD_Command,f
   610  07CE  3EFF               	addlw	-1
   611  07CF  1D03               	skipz
   612  07D0  2FCC               	goto	u55
   613  07D1  1003               	clrc
   614  07D2  0D70               	rlf	??_LCD_Command,w
   615  07D3  1283               	bcf	3,5	;RP0=0, select bank0
   616  07D4  1303               	bcf	3,6	;RP1=0, select bank0
   617  07D5  0088               	movwf	8	;volatile
   618  07D6                     l691:
   619                           
   620                           ;main.c: 32: RD1=0;
   621  07D6  1088               	bcf	8,1	;volatile
   622  07D7                     l693:
   623                           
   624                           ;main.c: 33: RD2=1;
   625  07D7  1508               	bsf	8,2	;volatile
   626  07D8                     l695:
   627                           
   628                           ;main.c: 34: _delay((unsigned long)((10)*(16000000/4000.0)));
   629  07D8  3034               	movlw	52
   630  07D9  00F1               	movwf	??_LCD_Command+1
   631  07DA  30F1               	movlw	241
   632  07DB  00F0               	movwf	??_LCD_Command
   633  07DC                     u137:
   634  07DC  0BF0               	decfsz	??_LCD_Command,f
   635  07DD  2FDC               	goto	u137
   636  07DE  0BF1               	decfsz	??_LCD_Command+1,f
   637  07DF  2FDC               	goto	u137
   638  07E0  2FE1               	nop2
   639  07E1                     l697:
   640                           
   641                           ;main.c: 35: RD2=0;
   642  07E1  1283               	bcf	3,5	;RP0=0, select bank0
   643  07E2  1303               	bcf	3,6	;RP1=0, select bank0
   644  07E3  1108               	bcf	8,2	;volatile
   645  07E4                     l699:
   646                           
   647                           ;main.c: 36: _delay((unsigned long)((10)*(16000000/4000.0)));
   648  07E4  3034               	movlw	52
   649  07E5  00F1               	movwf	??_LCD_Command+1
   650  07E6  30F1               	movlw	241
   651  07E7  00F0               	movwf	??_LCD_Command
   652  07E8                     u147:
   653  07E8  0BF0               	decfsz	??_LCD_Command,f
   654  07E9  2FE8               	goto	u147
   655  07EA  0BF1               	decfsz	??_LCD_Command+1,f
   656  07EB  2FE8               	goto	u147
   657  07EC  2FED               	nop2
   658  07ED                     l13:
   659  07ED  0008               	return
   660  07EE                     __end_of_LCD_Command:
   661                           
   662                           	psect	text3
   663  0756                     __ptext3:	
   664 ;; *************** function _LCD_data *****************
   665 ;; Defined at:
   666 ;;		line 39 in file "main.c"
   667 ;; Parameters:    Size  Location     Type
   668 ;;  data            1    wreg     unsigned char 
   669 ;; Auto vars:     Size  Location     Type
   670 ;;  data            1    2[COMMON] unsigned char 
   671 ;; Return value:  Size  Location     Type
   672 ;;                  1    wreg      void 
   673 ;; Registers used:
   674 ;;		wreg, status,2, status,0
   675 ;; Tracked objects:
   676 ;;		On entry : 0/0
   677 ;;		On exit  : 0/0
   678 ;;		Unchanged: 0/0
   679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   680 ;;      Params:         0       0       0       0       0
   681 ;;      Locals:         1       0       0       0       0
   682 ;;      Temps:          2       0       0       0       0
   683 ;;      Totals:         3       0       0       0       0
   684 ;;Total ram usage:        3 bytes
   685 ;; Hardware stack levels used: 1
   686 ;; This function calls:
   687 ;;		Nothing
   688 ;; This function is called by:
   689 ;;		_main
   690 ;; This function uses a non-reentrant model
   691 ;;
   692                           
   693                           
   694                           ;psect for function _LCD_data
   695  0756                     _LCD_data:
   696                           
   697                           ;incstack = 0
   698                           ; Regs used in _LCD_data: [wreg+status,2+status,0]
   699                           ;LCD_data@data stored from wreg
   700  0756  00F2               	movwf	LCD_data@data
   701  0757                     l701:
   702                           
   703                           ;main.c: 39: void LCD_data(unsigned char data);main.c: 40: {;main.c: 41: RD1=1;
   704  0757  1283               	bcf	3,5	;RP0=0, select bank0
   705  0758  1303               	bcf	3,6	;RP1=0, select bank0
   706  0759  1488               	bsf	8,1	;volatile
   707  075A                     l703:
   708                           
   709                           ;main.c: 42: _delay((unsigned long)((10)*(16000000/4000.0)));
   710  075A  3034               	movlw	52
   711  075B  00F1               	movwf	??_LCD_data+1
   712  075C  30F1               	movlw	241
   713  075D  00F0               	movwf	??_LCD_data
   714  075E                     u157:
   715  075E  0BF0               	decfsz	??_LCD_data,f
   716  075F  2F5E               	goto	u157
   717  0760  0BF1               	decfsz	??_LCD_data+1,f
   718  0761  2F5E               	goto	u157
   719  0762  2F63               	nop2
   720                           
   721                           ;main.c: 43: PORTD =(data);
   722  0763  0872               	movf	LCD_data@data,w
   723  0764  1283               	bcf	3,5	;RP0=0, select bank0
   724  0765  1303               	bcf	3,6	;RP1=0, select bank0
   725  0766  0088               	movwf	8	;volatile
   726  0767                     l705:
   727                           
   728                           ;main.c: 44: RD2=1;
   729  0767  1508               	bsf	8,2	;volatile
   730                           
   731                           ;main.c: 45: _delay((unsigned long)((10)*(16000000/4000.0)));
   732  0768  3034               	movlw	52
   733  0769  00F1               	movwf	??_LCD_data+1
   734  076A  30F1               	movlw	241
   735  076B  00F0               	movwf	??_LCD_data
   736  076C                     u167:
   737  076C  0BF0               	decfsz	??_LCD_data,f
   738  076D  2F6C               	goto	u167
   739  076E  0BF1               	decfsz	??_LCD_data+1,f
   740  076F  2F6C               	goto	u167
   741  0770  2F71               	nop2
   742  0771                     l707:
   743                           
   744                           ;main.c: 46: RD2=0;
   745  0771  1283               	bcf	3,5	;RP0=0, select bank0
   746  0772  1303               	bcf	3,6	;RP1=0, select bank0
   747  0773  1108               	bcf	8,2	;volatile
   748                           
   749                           ;main.c: 47: _delay((unsigned long)((10)*(16000000/4000.0)));
   750  0774  3034               	movlw	52
   751  0775  00F1               	movwf	??_LCD_data+1
   752  0776  30F1               	movlw	241
   753  0777  00F0               	movwf	??_LCD_data
   754  0778                     u177:
   755  0778  0BF0               	decfsz	??_LCD_data,f
   756  0779  2F78               	goto	u177
   757  077A  0BF1               	decfsz	??_LCD_data+1,f
   758  077B  2F78               	goto	u177
   759  077C  2F7D               	nop2
   760  077D                     l709:
   761                           
   762                           ;main.c: 49: PORTD =(data<<4);
   763  077D  0872               	movf	LCD_data@data,w
   764  077E  00F0               	movwf	??_LCD_data
   765  077F  3003               	movlw	3
   766  0780                     u65:
   767  0780  1003               	clrc
   768  0781  0DF0               	rlf	??_LCD_data,f
   769  0782  3EFF               	addlw	-1
   770  0783  1D03               	skipz
   771  0784  2F80               	goto	u65
   772  0785  1003               	clrc
   773  0786  0D70               	rlf	??_LCD_data,w
   774  0787  1283               	bcf	3,5	;RP0=0, select bank0
   775  0788  1303               	bcf	3,6	;RP1=0, select bank0
   776  0789  0088               	movwf	8	;volatile
   777  078A                     l711:
   778                           
   779                           ;main.c: 50: RD1=1;
   780  078A  1488               	bsf	8,1	;volatile
   781  078B                     l713:
   782                           
   783                           ;main.c: 51: RD2=1;
   784  078B  1508               	bsf	8,2	;volatile
   785  078C                     l715:
   786                           
   787                           ;main.c: 52: _delay((unsigned long)((10)*(16000000/4000.0)));
   788  078C  3034               	movlw	52
   789  078D  00F1               	movwf	??_LCD_data+1
   790  078E  30F1               	movlw	241
   791  078F  00F0               	movwf	??_LCD_data
   792  0790                     u187:
   793  0790  0BF0               	decfsz	??_LCD_data,f
   794  0791  2F90               	goto	u187
   795  0792  0BF1               	decfsz	??_LCD_data+1,f
   796  0793  2F90               	goto	u187
   797  0794  2F95               	nop2
   798  0795                     l717:
   799                           
   800                           ;main.c: 53: RD2=0;
   801  0795  1283               	bcf	3,5	;RP0=0, select bank0
   802  0796  1303               	bcf	3,6	;RP1=0, select bank0
   803  0797  1108               	bcf	8,2	;volatile
   804  0798                     l719:
   805                           
   806                           ;main.c: 54: _delay((unsigned long)((10)*(16000000/4000.0)));
   807  0798  3034               	movlw	52
   808  0799  00F1               	movwf	??_LCD_data+1
   809  079A  30F1               	movlw	241
   810  079B  00F0               	movwf	??_LCD_data
   811  079C                     u197:
   812  079C  0BF0               	decfsz	??_LCD_data,f
   813  079D  2F9C               	goto	u197
   814  079E  0BF1               	decfsz	??_LCD_data+1,f
   815  079F  2F9C               	goto	u197
   816  07A0  2FA1               	nop2
   817  07A1                     l16:
   818  07A1  0008               	return
   819  07A2                     __end_of_LCD_data:
   820  007E                     btemp	set	126	;btemp
   821  007E                     wtemp0	set	126
   822                           
   823                           	psect	idloc
   824                           
   825                           ;Config register IDLOC0 @ 0x2000
   826                           ;	unspecified, using default values
   827  2000                     	org	8192
   828  2000  3FFF               	dw	16383
   829                           
   830                           ;Config register IDLOC1 @ 0x2001
   831                           ;	unspecified, using default values
   832  2001                     	org	8193
   833  2001  3FFF               	dw	16383
   834                           
   835                           ;Config register IDLOC2 @ 0x2002
   836                           ;	unspecified, using default values
   837  2002                     	org	8194
   838  2002  3FFF               	dw	16383
   839                           
   840                           ;Config register IDLOC3 @ 0x2003
   841                           ;	unspecified, using default values
   842  2003                     	org	8195
   843  2003  3FFF               	dw	16383
   844                           
   845                           	psect	config
   846                           
   847                           ;Config register CONFIG @ 0x2007
   848                           ;	Oscillator Selection bits
   849                           ;	FOSC = HS, HS oscillator
   850                           ;	Watchdog Timer Enable bit
   851                           ;	WDTE = OFF, WDT disabled
   852                           ;	Power-up Timer Enable bit
   853                           ;	PWRTE = OFF, PWRT disabled
   854                           ;	Brown-out Reset Enable bit
   855                           ;	BOREN = ON, BOR enabled
   856                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   857                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   858                           ;	Data EEPROM Memory Code Protection bit
   859                           ;	CPD = OFF, Data EEPROM code protection off
   860                           ;	Flash Program Memory Write Enable bits
   861                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   862                           ;	In-Circuit Debugger Mode bit
   863                           ;	DEBUG = 0x1, unprogrammed default
   864                           ;	Flash Program Memory Code Protection bit
   865                           ;	CP = OFF, Code protection off
   866  2007                     	org	8199
   867  2007  3FFA               	dw	16378

Data Sizes:
    Strings     0
    Constant    0
    Data        13
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9       9
    BANK0            80     15      28
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_LCD_init
    _LCD_init->_LCD_Command

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                19    19      0     225
                                              5 COMMON     4     4      0
                                              0 BANK0     15    15      0
                        _LCD_Command
                           _LCD_data
                           _LCD_init
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0      44
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_data                                             3     3      0      44
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_Command
   _LCD_data
   _LCD_init
     _LCD_Command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      F      1C       5       35.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      9       9       1       64.3%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      25      12        0.0%
ABS                  0      0      25       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Apr 19 11:01:00 2022

                      pc 0002             ?_LCD_Command 0070                       l13 07ED  
                     l16 07A1                       l19 0710                       l29 0753  
                     u70 0727                       u55 07CC                       u80 0753  
                     u65 0780                       u81 0752                       u97 070B  
                     fsr 0004                      l701 0757                      l711 078A  
                    l703 075A                      l713 078B                      l705 0767  
                    l721 06E9                      l715 078C                      l707 0771  
                    l723 0707                      l731 071F                      l717 0795  
                    l709 077D                      l733 0734                      l725 0711  
                    l719 0798                      l735 0739                      l727 0714  
                    l681 07A3                      l737 0742                      l729 0719  
                    l691 07D6                      l683 07A6                      l739 074A  
                    l693 07D7                      l685 07B3                      l695 07D8  
                    l687 07BD                      l697 07E1                      l689 07C9  
                    l699 07E4                      _RD1 0041                      _RD2 0042  
                    u107 07AA                      u117 07B8                      u127 07C4  
                    u137 07DC                      u147 07E8                      u157 075E  
                    u167 076C                      u177 0778                      u187 0790  
                    u197 079C                      fsr0 0004                      indf 0000  
                   _main 0711                     btemp 007E                     start 0000  
       __end_of_LCD_data 07A2         __end_of_LCD_init 0711                    ?_main 0070  
                  _PORTD 0008                    _TRISD 0088                    main@a 0020  
                  main@i 002D                    pclath 000A                    status 0003  
                  wtemp0 007E          __initialization 07EE             __end_of_main 0756  
                 ??_main 0075             LCD_data@data 0072     __size_of_LCD_Command 004C  
__end_of__initialization 07FC                ?_LCD_data 0070                ?_LCD_init 0070  
         __pcstackCOMMON 0070             __pidataBANK0 06C9               ??_LCD_data 0070  
             ??_LCD_init 0073               __pmaintext 0711                  __ptext1 06E9  
                __ptext2 07A2                  __ptext3 0756     end_of_initialization 07FC  
         LCD_Command@cmd 0072        __size_of_LCD_data 004C        __size_of_LCD_init 0028  
          ??_LCD_Command 0070      start_initialization 07EE               init_fetch0 06D6  
            __pdataBANK0 002F      __end_of_LCD_Command 07EE                ___latbits 0002  
          __pcstackBANK0 0020                 _LCD_data 0756                 _LCD_init 06E9  
            _LCD_Command 07A2            __size_of_main 0045                 main@F884 002F  
               init_ram0 06DA  
