

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon May 09 11:57:57 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.40
    17                           ; Generated 17/11/2021 GMT
    18                           ; 
    19                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F877A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0098                     	;# 
   100  0099                     	;# 
   101  009C                     	;# 
   102  009D                     	;# 
   103  009E                     	;# 
   104  009F                     	;# 
   105  010C                     	;# 
   106  010D                     	;# 
   107  010E                     	;# 
   108  010F                     	;# 
   109  018C                     	;# 
   110  018D                     	;# 
   111  0000                     	;# 
   112  0001                     	;# 
   113  0002                     	;# 
   114  0003                     	;# 
   115  0004                     	;# 
   116  0005                     	;# 
   117  0006                     	;# 
   118  0007                     	;# 
   119  0008                     	;# 
   120  0009                     	;# 
   121  000A                     	;# 
   122  000B                     	;# 
   123  000C                     	;# 
   124  000D                     	;# 
   125  000E                     	;# 
   126  000E                     	;# 
   127  000F                     	;# 
   128  0010                     	;# 
   129  0011                     	;# 
   130  0012                     	;# 
   131  0013                     	;# 
   132  0014                     	;# 
   133  0015                     	;# 
   134  0015                     	;# 
   135  0016                     	;# 
   136  0017                     	;# 
   137  0018                     	;# 
   138  0019                     	;# 
   139  001A                     	;# 
   140  001B                     	;# 
   141  001B                     	;# 
   142  001C                     	;# 
   143  001D                     	;# 
   144  001E                     	;# 
   145  001F                     	;# 
   146  0081                     	;# 
   147  0085                     	;# 
   148  0086                     	;# 
   149  0087                     	;# 
   150  0088                     	;# 
   151  0089                     	;# 
   152  008C                     	;# 
   153  008D                     	;# 
   154  008E                     	;# 
   155  0091                     	;# 
   156  0092                     	;# 
   157  0093                     	;# 
   158  0094                     	;# 
   159  0098                     	;# 
   160  0099                     	;# 
   161  009C                     	;# 
   162  009D                     	;# 
   163  009E                     	;# 
   164  009F                     	;# 
   165  010C                     	;# 
   166  010D                     	;# 
   167  010E                     	;# 
   168  010F                     	;# 
   169  018C                     	;# 
   170  018D                     	;# 
   171  001A                     _RCREG	set	26
   172  0019                     _TXREG	set	25
   173  0018                     _RCSTA	set	24
   174  0065                     _RCIF	set	101
   175  0064                     _TXIF	set	100
   176  0099                     _SPBRG	set	153
   177  0098                     _TXSTA	set	152
   178  043F                     _TRISC7	set	1087
   179  043E                     _TRISC6	set	1086
   180                           
   181                           	psect	strings
   182  0003                     __pstrings:
   183  0003                     stringtab:
   184  0003                     __stringtab:
   185  0003                     stringcode:	
   186                           ;	String table - string pointers are 1 byte each
   187                           
   188  0003                     stringdir:
   189  0003  3000               	movlw	high stringdir
   190  0004  008A               	movwf	10
   191  0005  0804               	movf	4,w
   192  0006  0A84               	incf	4,f
   193  0007  0782               	addwf	2,f
   194  0008                     __stringbase:
   195  0008  3400               	retlw	0
   196  0009                     __end_of__stringtab:
   197  0009                     STR_1:
   198  0009  3420               	retlw	32	;' '
   199  000A  3445               	retlw	69	;'E'
   200  000B  346E               	retlw	110	;'n'
   201  000C  3474               	retlw	116	;'t'
   202  000D  3465               	retlw	101	;'e'
   203  000E  3472               	retlw	114	;'r'
   204  000F  3420               	retlw	32	;' '
   205  0010  3474               	retlw	116	;'t'
   206  0011  3468               	retlw	104	;'h'
   207  0012  3465               	retlw	101	;'e'
   208  0013  3420               	retlw	32	;' '
   209  0014  346C               	retlw	108	;'l'
   210  0015  3465               	retlw	101	;'e'
   211  0016  3474               	retlw	116	;'t'
   212  0017  3474               	retlw	116	;'t'
   213  0018  3465               	retlw	101	;'e'
   214  0019  3472               	retlw	114	;'r'
   215  001A  3473               	retlw	115	;'s'
   216  001B  3420               	retlw	32	;' '
   217  001C  3469               	retlw	105	;'i'
   218  001D  346E               	retlw	110	;'n'
   219  001E  3420               	retlw	32	;' '
   220  001F  346B               	retlw	107	;'k'
   221  0020  3465               	retlw	101	;'e'
   222  0021  3479               	retlw	121	;'y'
   223  0022  3462               	retlw	98	;'b'
   224  0023  346F               	retlw	111	;'o'
   225  0024  3461               	retlw	97	;'a'
   226  0025  3472               	retlw	114	;'r'
   227  0026  3464               	retlw	100	;'d'
   228  0027  340A               	retlw	10
   229  0028  340D               	retlw	13
   230  0029  340D               	retlw	13
   231  002A  3400               	retlw	0
   232                           
   233                           	psect	cinit
   234  07FC                     start_initialization:	
   235                           ; #config settings
   236                           
   237  07FC                     __initialization:
   238  07FC                     end_of_initialization:	
   239                           ;End of C runtime variable initialization code
   240                           
   241  07FC                     __end_of__initialization:
   242  07FC  0183               	clrf	3
   243  07FD  120A  118A  2FDB   	ljmp	_main	;jump to C main() function
   244                           
   245                           	psect	cstackCOMMON
   246  0070                     __pcstackCOMMON:
   247  0070                     ?_ser_int:
   248  0070                     ??_ser_int:	
   249                           ; 1 bytes @ 0x0
   250                           
   251  0070                     ?_txstr:	
   252                           ; 1 bytes @ 0x0
   253                           
   254  0070                     ?_rx:	
   255                           ; 1 bytes @ 0x0
   256                           
   257  0070                     ??_rx:	
   258                           ; 1 bytes @ 0x0
   259                           
   260  0070                     ?_tx:	
   261                           ; 1 bytes @ 0x0
   262                           
   263  0070                     ??_tx:	
   264                           ; 1 bytes @ 0x0
   265                           
   266  0070                     ?_main:	
   267                           ; 1 bytes @ 0x0
   268                           
   269  0070                     tx@a:	
   270                           ; 1 bytes @ 0x0
   271                           
   272                           
   273                           ; 1 bytes @ 0x0
   274  0070                     	ds	1
   275  0071                     ??_txstr:
   276                           
   277                           ; 1 bytes @ 0x1
   278  0071                     	ds	1
   279  0072                     txstr@s:
   280                           
   281                           ; 1 bytes @ 0x2
   282  0072                     	ds	1
   283  0073                     ??_main:
   284                           
   285                           ; 1 bytes @ 0x3
   286  0073                     	ds	1
   287  0074                     main@a:
   288                           
   289                           ; 1 bytes @ 0x4
   290  0074                     	ds	1
   291                           
   292                           	psect	maintext
   293  07DB                     __pmaintext:	
   294 ;;
   295 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   296 ;;
   297 ;; *************** function _main *****************
   298 ;; Defined at:
   299 ;;		line 24 in file "main.c"
   300 ;; Parameters:    Size  Location     Type
   301 ;;		None
   302 ;; Auto vars:     Size  Location     Type
   303 ;;  a               1    4[COMMON] unsigned char 
   304 ;; Return value:  Size  Location     Type
   305 ;;                  1    wreg      void 
   306 ;; Registers used:
   307 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   308 ;; Tracked objects:
   309 ;;		On entry : B00/0
   310 ;;		On exit  : 0/0
   311 ;;		Unchanged: 0/0
   312 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   313 ;;      Params:         0       0       0       0       0
   314 ;;      Locals:         1       0       0       0       0
   315 ;;      Temps:          1       0       0       0       0
   316 ;;      Totals:         2       0       0       0       0
   317 ;;Total ram usage:        2 bytes
   318 ;; Hardware stack levels required when called: 2
   319 ;; This function calls:
   320 ;;		_rx
   321 ;;		_ser_int
   322 ;;		_tx
   323 ;;		_txstr
   324 ;; This function is called by:
   325 ;;		Startup code after reset
   326 ;; This function uses a non-reentrant model
   327 ;;
   328                           
   329                           
   330                           ;psect for function _main
   331  07DB                     _main:
   332  07DB                     l685:	
   333                           ;incstack = 0
   334                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   335                           
   336                           
   337                           ;main.c: 27: char a;;main.c: 28: TRISC6=0;
   338  07DB  1683               	bsf	3,5	;RP0=1, select bank1
   339  07DC  1303               	bcf	3,6	;RP1=0, select bank1
   340  07DD  1307               	bcf	7,6	;volatile
   341                           
   342                           ;main.c: 29: TRISC7=1;
   343  07DE  1787               	bsf	7,7	;volatile
   344  07DF                     l687:
   345                           
   346                           ;main.c: 30: ser_int();
   347  07DF  120A  118A  27AB  120A  118A  	fcall	_ser_int
   348  07E4                     l689:
   349                           
   350                           ;main.c: 31: txstr(" Enter the letters in keyboard\n\r\r");
   351  07E4  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   352  07E5  120A  118A  27BC  120A  118A  	fcall	_txstr
   353  07EA                     l691:
   354                           
   355                           ;main.c: 33: a= rx();
   356  07EA  120A  118A  2797  120A  118A  	fcall	_rx
   357  07EF  00F3               	movwf	??_main
   358  07F0  0873               	movf	??_main,w
   359  07F1  00F4               	movwf	main@a
   360  07F2                     l693:
   361                           
   362                           ;main.c: 34: tx(a);
   363  07F2  0874               	movf	main@a,w
   364  07F3  120A  118A  27A0  120A  118A  	fcall	_tx
   365  07F8  2FEA               	goto	l691
   366  07F9  120A  118A  2800   	ljmp	start
   367  07FC                     __end_of_main:
   368                           
   369                           	psect	text1
   370  07BC                     __ptext1:	
   371 ;; *************** function _txstr *****************
   372 ;; Defined at:
   373 ;;		line 58 in file "main.c"
   374 ;; Parameters:    Size  Location     Type
   375 ;;  s               1    wreg     PTR unsigned char 
   376 ;;		 -> STR_1(34), 
   377 ;; Auto vars:     Size  Location     Type
   378 ;;  s               1    2[COMMON] PTR unsigned char 
   379 ;;		 -> STR_1(34), 
   380 ;; Return value:  Size  Location     Type
   381 ;;                  1    wreg      void 
   382 ;; Registers used:
   383 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   384 ;; Tracked objects:
   385 ;;		On entry : 0/0
   386 ;;		On exit  : 0/0
   387 ;;		Unchanged: 0/0
   388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   389 ;;      Params:         0       0       0       0       0
   390 ;;      Locals:         1       0       0       0       0
   391 ;;      Temps:          1       0       0       0       0
   392 ;;      Totals:         2       0       0       0       0
   393 ;;Total ram usage:        2 bytes
   394 ;; Hardware stack levels used: 1
   395 ;; Hardware stack levels required when called: 1
   396 ;; This function calls:
   397 ;;		_tx
   398 ;; This function is called by:
   399 ;;		_main
   400 ;; This function uses a non-reentrant model
   401 ;;
   402                           
   403                           
   404                           ;psect for function _txstr
   405  07BC                     _txstr:
   406                           
   407                           ;incstack = 0
   408                           ; Regs used in _txstr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   409                           ;txstr@s stored from wreg
   410  07BC  00F2               	movwf	txstr@s
   411  07BD                     l677:
   412                           
   413                           ;main.c: 60: while(*s) {
   414  07BD  2FCE               	goto	l683
   415  07BE                     l679:
   416                           
   417                           ;main.c: 61: tx(*s++);
   418  07BE  0872               	movf	txstr@s,w
   419  07BF  0084               	movwf	4
   420  07C0  120A  118A  2003  120A  118A  	fcall	stringdir
   421  07C5  120A  118A  27A0  120A  118A  	fcall	_tx
   422  07CA                     l681:
   423  07CA  3001               	movlw	1
   424  07CB  00F1               	movwf	??_txstr
   425  07CC  0871               	movf	??_txstr,w
   426  07CD  07F2               	addwf	txstr@s,f
   427  07CE                     l683:
   428  07CE  0872               	movf	txstr@s,w
   429  07CF  0084               	movwf	4
   430  07D0  120A  118A  2003  120A  118A  	fcall	stringdir
   431  07D5  3A00               	xorlw	0
   432  07D6  1D03               	skipz
   433  07D7  2FD9               	goto	u41
   434  07D8  2FDA               	goto	u40
   435  07D9                     u41:
   436  07D9  2FBE               	goto	l679
   437  07DA                     u40:
   438  07DA                     l55:
   439  07DA  0008               	return
   440  07DB                     __end_of_txstr:
   441                           
   442                           	psect	text2
   443  07A0                     __ptext2:	
   444 ;; *************** function _tx *****************
   445 ;; Defined at:
   446 ;;		line 46 in file "main.c"
   447 ;; Parameters:    Size  Location     Type
   448 ;;  a               1    wreg     unsigned char 
   449 ;; Auto vars:     Size  Location     Type
   450 ;;  a               1    0[COMMON] unsigned char 
   451 ;; Return value:  Size  Location     Type
   452 ;;                  1    wreg      void 
   453 ;; Registers used:
   454 ;;		wreg
   455 ;; Tracked objects:
   456 ;;		On entry : 0/0
   457 ;;		On exit  : 0/0
   458 ;;		Unchanged: 0/0
   459 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   460 ;;      Params:         0       0       0       0       0
   461 ;;      Locals:         1       0       0       0       0
   462 ;;      Temps:          0       0       0       0       0
   463 ;;      Totals:         1       0       0       0       0
   464 ;;Total ram usage:        1 bytes
   465 ;; Hardware stack levels used: 1
   466 ;; This function calls:
   467 ;;		Nothing
   468 ;; This function is called by:
   469 ;;		_main
   470 ;;		_txstr
   471 ;; This function uses a non-reentrant model
   472 ;;
   473                           
   474                           
   475                           ;psect for function _tx
   476  07A0                     _tx:
   477                           
   478                           ;incstack = 0
   479                           ; Regs used in _tx: [wreg]
   480                           ;tx@a stored from wreg
   481  07A0  00F0               	movwf	tx@a
   482  07A1                     l647:
   483                           
   484                           ;main.c: 48: TXREG=a;
   485  07A1  0870               	movf	tx@a,w
   486  07A2  1283               	bcf	3,5	;RP0=0, select bank0
   487  07A3  1303               	bcf	3,6	;RP1=0, select bank0
   488  07A4  0099               	movwf	25	;volatile
   489  07A5                     l40:	
   490                           ;main.c: 49: while(!TXIF);
   491                           
   492  07A5  1E0C               	btfss	12,4	;volatile
   493  07A6  2FA8               	goto	u11
   494  07A7  2FA9               	goto	u10
   495  07A8                     u11:
   496  07A8  2FA5               	goto	l40
   497  07A9                     u10:
   498  07A9                     l42:
   499                           
   500                           ;main.c: 50: TXIF = 0;
   501  07A9  120C               	bcf	12,4	;volatile
   502  07AA                     l43:
   503  07AA  0008               	return
   504  07AB                     __end_of_tx:
   505                           
   506                           	psect	text3
   507  07AB                     __ptext3:	
   508 ;; *************** function _ser_int *****************
   509 ;; Defined at:
   510 ;;		line 38 in file "main.c"
   511 ;; Parameters:    Size  Location     Type
   512 ;;		None
   513 ;; Auto vars:     Size  Location     Type
   514 ;;		None
   515 ;; Return value:  Size  Location     Type
   516 ;;                  1    wreg      void 
   517 ;; Registers used:
   518 ;;		wreg
   519 ;; Tracked objects:
   520 ;;		On entry : 0/0
   521 ;;		On exit  : 0/0
   522 ;;		Unchanged: 0/0
   523 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   524 ;;      Params:         0       0       0       0       0
   525 ;;      Locals:         0       0       0       0       0
   526 ;;      Temps:          0       0       0       0       0
   527 ;;      Totals:         0       0       0       0       0
   528 ;;Total ram usage:        0 bytes
   529 ;; Hardware stack levels used: 1
   530 ;; This function calls:
   531 ;;		Nothing
   532 ;; This function is called by:
   533 ;;		_main
   534 ;; This function uses a non-reentrant model
   535 ;;
   536                           
   537                           
   538                           ;psect for function _ser_int
   539  07AB                     _ser_int:
   540  07AB                     l649:	
   541                           ;incstack = 0
   542                           ; Regs used in _ser_int: [wreg]
   543                           
   544                           
   545                           ;main.c: 40: TXSTA=0x20;
   546  07AB  3020               	movlw	32
   547  07AC  1683               	bsf	3,5	;RP0=1, select bank1
   548  07AD  1303               	bcf	3,6	;RP1=0, select bank1
   549  07AE  0098               	movwf	24	;volatile
   550                           
   551                           ;main.c: 41: RCSTA=0b10010000;
   552  07AF  3090               	movlw	144
   553  07B0  1283               	bcf	3,5	;RP0=0, select bank0
   554  07B1  1303               	bcf	3,6	;RP1=0, select bank0
   555  07B2  0098               	movwf	24	;volatile
   556                           
   557                           ;main.c: 42: SPBRG= 31;
   558  07B3  301F               	movlw	31
   559  07B4  1683               	bsf	3,5	;RP0=1, select bank1
   560  07B5  1303               	bcf	3,6	;RP1=0, select bank1
   561  07B6  0099               	movwf	25	;volatile
   562  07B7                     l651:
   563                           
   564                           ;main.c: 43: TXIF=RCIF=0;
   565  07B7  1283               	bcf	3,5	;RP0=0, select bank0
   566  07B8  1303               	bcf	3,6	;RP1=0, select bank0
   567  07B9  128C               	bcf	12,5	;volatile
   568  07BA  120C               	bcf	12,4	;volatile
   569  07BB                     l37:
   570  07BB  0008               	return
   571  07BC                     __end_of_ser_int:
   572                           
   573                           	psect	text4
   574  0797                     __ptext4:	
   575 ;; *************** function _rx *****************
   576 ;; Defined at:
   577 ;;		line 52 in file "main.c"
   578 ;; Parameters:    Size  Location     Type
   579 ;;		None
   580 ;; Auto vars:     Size  Location     Type
   581 ;;		None
   582 ;; Return value:  Size  Location     Type
   583 ;;                  1    wreg      unsigned char 
   584 ;; Registers used:
   585 ;;		wreg
   586 ;; Tracked objects:
   587 ;;		On entry : 0/0
   588 ;;		On exit  : 0/0
   589 ;;		Unchanged: 0/0
   590 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   591 ;;      Params:         0       0       0       0       0
   592 ;;      Locals:         0       0       0       0       0
   593 ;;      Temps:          0       0       0       0       0
   594 ;;      Totals:         0       0       0       0       0
   595 ;;Total ram usage:        0 bytes
   596 ;; Hardware stack levels used: 1
   597 ;; This function calls:
   598 ;;		Nothing
   599 ;; This function is called by:
   600 ;;		_main
   601 ;; This function uses a non-reentrant model
   602 ;;
   603                           
   604                           
   605                           ;psect for function _rx
   606  0797                     _rx:
   607  0797                     l661:	
   608                           ;incstack = 0
   609                           ; Regs used in _rx: [wreg]
   610                           
   611  0797                     l46:	
   612                           ;main.c: 54: while(!RCIF);
   613                           
   614  0797  1283               	bcf	3,5	;RP0=0, select bank0
   615  0798  1303               	bcf	3,6	;RP1=0, select bank0
   616  0799  1E8C               	btfss	12,5	;volatile
   617  079A  2F9C               	goto	u31
   618  079B  2F9D               	goto	u30
   619  079C                     u31:
   620  079C  2F97               	goto	l46
   621  079D                     u30:
   622  079D                     l48:
   623                           
   624                           ;main.c: 55: RCIF=0;
   625  079D  128C               	bcf	12,5	;volatile
   626  079E                     l663:
   627                           
   628                           ;main.c: 56: return RCREG;
   629  079E  081A               	movf	26,w	;volatile
   630  079F                     l49:
   631  079F  0008               	return
   632  07A0                     __end_of_rx:
   633  007E                     btemp	set	126	;btemp
   634  007E                     wtemp0	set	126
   635                           
   636                           	psect	idloc
   637                           
   638                           ;Config register IDLOC0 @ 0x2000
   639                           ;	unspecified, using default values
   640  2000                     	org	8192
   641  2000  3FFF               	dw	16383
   642                           
   643                           ;Config register IDLOC1 @ 0x2001
   644                           ;	unspecified, using default values
   645  2001                     	org	8193
   646  2001  3FFF               	dw	16383
   647                           
   648                           ;Config register IDLOC2 @ 0x2002
   649                           ;	unspecified, using default values
   650  2002                     	org	8194
   651  2002  3FFF               	dw	16383
   652                           
   653                           ;Config register IDLOC3 @ 0x2003
   654                           ;	unspecified, using default values
   655  2003                     	org	8195
   656  2003  3FFF               	dw	16383
   657                           
   658                           	psect	config
   659                           
   660                           ;Config register CONFIG @ 0x2007
   661                           ;	Oscillator Selection bits
   662                           ;	FOSC = HS, HS oscillator
   663                           ;	Watchdog Timer Enable bit
   664                           ;	WDTE = OFF, WDT disabled
   665                           ;	Power-up Timer Enable bit
   666                           ;	PWRTE = OFF, PWRT disabled
   667                           ;	Brown-out Reset Enable bit
   668                           ;	BOREN = ON, BOR enabled
   669                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   670                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   671                           ;	Data EEPROM Memory Code Protection bit
   672                           ;	CPD = OFF, Data EEPROM code protection off
   673                           ;	Flash Program Memory Write Enable bits
   674                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   675                           ;	In-Circuit Debugger Mode bit
   676                           ;	DEBUG = 0x1, unprogrammed default
   677                           ;	Flash Program Memory Code Protection bit
   678                           ;	CP = OFF, Code protection off
   679  2007                     	org	8199
   680  2007  3FFA               	dw	16378

Data Sizes:
    Strings     34
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    txstr@s	PTR unsigned char  size(1) Largest target is 34
		 -> STR_1(CODE[34]), 


Critical Paths under _main in COMMON

    _main->_txstr
    _txstr->_tx

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     131
                                              3 COMMON     2     2      0
                                 _rx
                            _ser_int
                                 _tx
                              _txstr
 ---------------------------------------------------------------------------------
 (1) _txstr                                                2     2      0      93
                                              1 COMMON     2     2      0
                                 _tx
 ---------------------------------------------------------------------------------
 (2) _tx                                                   1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ser_int                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _rx                                                   0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _rx
   _ser_int
   _tx
   _txstr
     _tx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon May 09 11:57:57 2022

                      pc 0002                       l40 07A5                       l42 07A9  
                     l43 07AA                       l37 07BB                       l46 0797  
                     l55 07DA                       l48 079D                       l49 079F  
                     u10 07A9                       u11 07A8                       u30 079D  
                     u31 079C                       u40 07DA                       u41 07D9  
                     _rx 0797                       _tx 07A0                       fsr 0004  
                    ?_rx 0070                      l651 07B7                      ?_tx 0070  
                    l661 0797                      l663 079E                      l647 07A1  
                    l649 07AB                      l681 07CA                      l683 07CE  
                    l691 07EA                      l677 07BD                      l693 07F2  
                    l685 07DB                      l679 07BE                      l687 07DF  
                    l689 07E4                      fsr0 0004                      tx@a 0070  
                   ??_rx 0070                     ??_tx 0070                     STR_1 0009  
                   _RCIF 0065                     _TXIF 0064                     _main 07DB  
                   btemp 007E                     start 0000                    ?_main 0070  
                  _RCREG 001A                    _RCSTA 0018                    _SPBRG 0099  
                  _TXREG 0019                    _TXSTA 0098                    main@a 0074  
                  _txstr 07BC          __end_of_ser_int 07BC                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07FC  
           __end_of_main 07FC                   ??_main 0073                   ?_txstr 0070  
                 _TRISC6 043E                   _TRISC7 043F                ??_ser_int 0070  
                 txstr@s 0072  __end_of__initialization 07FC           __pcstackCOMMON 0070  
          __end_of_txstr 07DB               __end_of_rx 07A0               __end_of_tx 07AB  
                ??_txstr 0071               __pmaintext 07DB               __stringtab 0003  
                __ptext1 07BC                  __ptext2 07A0                  __ptext3 07AB  
                __ptext4 0797                  _ser_int 07AB     end_of_initialization 07FC  
    start_initialization 07FC                ___latbits 0002                __pstrings 0003  
               ?_ser_int 0070           __size_of_txstr 001F              __size_of_rx 0009  
            __size_of_tx 000B              __stringbase 0008       __end_of__stringtab 0009  
       __size_of_ser_int 0011            __size_of_main 0021                stringcode 0003  
               stringdir 0003                 stringtab 0003  
