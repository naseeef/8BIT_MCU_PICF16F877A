

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed May 11 10:58:47 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.40
    14                           ; Generated 17/11/2021 GMT
    15                           ; 
    16                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC16F877A Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000E                     	;# 
    64  000F                     	;# 
    65  0010                     	;# 
    66  0011                     	;# 
    67  0012                     	;# 
    68  0013                     	;# 
    69  0014                     	;# 
    70  0015                     	;# 
    71  0015                     	;# 
    72  0016                     	;# 
    73  0017                     	;# 
    74  0018                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001B                     	;# 
    79  001C                     	;# 
    80  001D                     	;# 
    81  001E                     	;# 
    82  001F                     	;# 
    83  0081                     	;# 
    84  0085                     	;# 
    85  0086                     	;# 
    86  0087                     	;# 
    87  0088                     	;# 
    88  0089                     	;# 
    89  008C                     	;# 
    90  008D                     	;# 
    91  008E                     	;# 
    92  0091                     	;# 
    93  0092                     	;# 
    94  0093                     	;# 
    95  0094                     	;# 
    96  0098                     	;# 
    97  0099                     	;# 
    98  009C                     	;# 
    99  009D                     	;# 
   100  009E                     	;# 
   101  009F                     	;# 
   102  010C                     	;# 
   103  010D                     	;# 
   104  010E                     	;# 
   105  010F                     	;# 
   106  018C                     	;# 
   107  018D                     	;# 
   108  0000                     	;# 
   109  0001                     	;# 
   110  0002                     	;# 
   111  0003                     	;# 
   112  0004                     	;# 
   113  0005                     	;# 
   114  0006                     	;# 
   115  0007                     	;# 
   116  0008                     	;# 
   117  0009                     	;# 
   118  000A                     	;# 
   119  000B                     	;# 
   120  000C                     	;# 
   121  000D                     	;# 
   122  000E                     	;# 
   123  000E                     	;# 
   124  000F                     	;# 
   125  0010                     	;# 
   126  0011                     	;# 
   127  0012                     	;# 
   128  0013                     	;# 
   129  0014                     	;# 
   130  0015                     	;# 
   131  0015                     	;# 
   132  0016                     	;# 
   133  0017                     	;# 
   134  0018                     	;# 
   135  0019                     	;# 
   136  001A                     	;# 
   137  001B                     	;# 
   138  001B                     	;# 
   139  001C                     	;# 
   140  001D                     	;# 
   141  001E                     	;# 
   142  001F                     	;# 
   143  0081                     	;# 
   144  0085                     	;# 
   145  0086                     	;# 
   146  0087                     	;# 
   147  0088                     	;# 
   148  0089                     	;# 
   149  008C                     	;# 
   150  008D                     	;# 
   151  008E                     	;# 
   152  0091                     	;# 
   153  0092                     	;# 
   154  0093                     	;# 
   155  0094                     	;# 
   156  0098                     	;# 
   157  0099                     	;# 
   158  009C                     	;# 
   159  009D                     	;# 
   160  009E                     	;# 
   161  009F                     	;# 
   162  010C                     	;# 
   163  010D                     	;# 
   164  010E                     	;# 
   165  010F                     	;# 
   166  018C                     	;# 
   167  018D                     	;# 
   168  0013                     _SSPBUF	set	19
   169  0008                     _PORTD	set	8
   170  00A4                     _CKP	set	164
   171  00A5                     _SSPEN	set	165
   172  00A3                     _SSPM3	set	163
   173  00A2                     _SSPM2	set	162
   174  00A1                     _SSPM1	set	161
   175  00A0                     _SSPM0	set	160
   176  0032                     _RB2	set	50
   177  0031                     _RB1	set	49
   178  0030                     _RB0	set	48
   179  0088                     _TRISD	set	136
   180  0086                     _TRISB	set	134
   181  043B                     _TRISC3	set	1083
   182  043C                     _TRISC4	set	1084
   183  043D                     _TRISC5	set	1085
   184  04A7                     _SMP	set	1191
   185  04A6                     _CKE	set	1190
   186                           
   187                           	psect	cinit
   188  07FC                     start_initialization:	
   189                           ; #config settings
   190                           
   191  07FC                     __initialization:
   192  07FC                     end_of_initialization:	
   193                           ;End of C runtime variable initialization code
   194                           
   195  07FC                     __end_of__initialization:
   196  07FC  0183               	clrf	3
   197  07FD  120A  118A  2FA3   	ljmp	_main	;jump to C main() function
   198                           
   199                           	psect	cstackCOMMON
   200  0070                     __pcstackCOMMON:
   201  0070                     ?_SPI_Master_Init:
   202  0070                     ??_SPI_Master_Init:	
   203                           ; 1 bytes @ 0x0
   204                           
   205  0070                     ?_SPI_Write:	
   206                           ; 1 bytes @ 0x0
   207                           
   208  0070                     ??_SPI_Write:	
   209                           ; 1 bytes @ 0x0
   210                           
   211  0070                     ?_main:	
   212                           ; 1 bytes @ 0x0
   213                           
   214  0070                     SPI_Write@Data:	
   215                           ; 1 bytes @ 0x0
   216                           
   217                           
   218                           ; 1 bytes @ 0x0
   219  0070                     	ds	1
   220  0071                     ??_main:
   221                           
   222                           ; 1 bytes @ 0x1
   223  0071                     	ds	3
   224  0074                     main@Data:
   225                           
   226                           ; 1 bytes @ 0x4
   227  0074                     	ds	1
   228                           
   229                           	psect	maintext
   230  07A3                     __pmaintext:	
   231 ;;
   232 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   233 ;;
   234 ;; *************** function _main *****************
   235 ;; Defined at:
   236 ;;		line 26 in file "main.c"
   237 ;; Parameters:    Size  Location     Type
   238 ;;		None
   239 ;; Auto vars:     Size  Location     Type
   240 ;;  Data            1    4[COMMON] unsigned char 
   241 ;; Return value:  Size  Location     Type
   242 ;;                  1    wreg      void 
   243 ;; Registers used:
   244 ;;		wreg, status,2, status,0, pclath, cstack
   245 ;; Tracked objects:
   246 ;;		On entry : B00/0
   247 ;;		On exit  : 0/0
   248 ;;		Unchanged: 0/0
   249 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   250 ;;      Params:         0       0       0       0       0
   251 ;;      Locals:         1       0       0       0       0
   252 ;;      Temps:          3       0       0       0       0
   253 ;;      Totals:         4       0       0       0       0
   254 ;;Total ram usage:        4 bytes
   255 ;; Hardware stack levels required when called: 1
   256 ;; This function calls:
   257 ;;		_SPI_Master_Init
   258 ;;		_SPI_Write
   259 ;; This function is called by:
   260 ;;		Startup code after reset
   261 ;; This function uses a non-reentrant model
   262 ;;
   263                           
   264                           
   265                           ;psect for function _main
   266  07A3                     _main:
   267  07A3                     l655:	
   268                           ;incstack = 0
   269                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   270                           
   271                           
   272                           ;main.c: 27:  SPI_Master_Init();
   273  07A3  120A  118A  2793  120A  118A  	fcall	_SPI_Master_Init
   274  07A8                     l657:
   275                           
   276                           ;main.c: 28:  uint8_t Data = 0;
   277  07A8  01F4               	clrf	main@Data
   278  07A9                     l659:
   279                           
   280                           ;main.c: 29:  TRISB = 0x07;
   281  07A9  3007               	movlw	7
   282  07AA  1683               	bsf	3,5	;RP0=1, select bank1
   283  07AB  1303               	bcf	3,6	;RP1=0, select bank1
   284  07AC  0086               	movwf	6	;volatile
   285  07AD                     l661:
   286                           
   287                           ;main.c: 30:  TRISD = 0x00;
   288  07AD  0188               	clrf	8	;volatile
   289  07AE                     l663:
   290                           
   291                           ;main.c: 31:  PORTD = 0x00;
   292  07AE  1283               	bcf	3,5	;RP0=0, select bank0
   293  07AF  1303               	bcf	3,6	;RP1=0, select bank0
   294  07B0  0188               	clrf	8	;volatile
   295  07B1                     l665:
   296                           
   297                           ;main.c: 33:  if (RB0) {
   298  07B1  1C06               	btfss	6,0	;volatile
   299  07B2  2FB4               	goto	u11
   300  07B3  2FB5               	goto	u10
   301  07B4                     u11:
   302  07B4  2FC6               	goto	l671
   303  07B5                     u10:
   304  07B5                     l667:
   305                           
   306                           ;main.c: 34:  Data++;
   307  07B5  3001               	movlw	1
   308  07B6  00F1               	movwf	??_main
   309  07B7  0871               	movf	??_main,w
   310  07B8  07F4               	addwf	main@Data,f
   311  07B9                     l669:
   312                           
   313                           ;main.c: 35:  _delay((unsigned long)((1000)*(20000000/4000.0)));
   314  07B9  301A               	movlw	26
   315  07BA  00F3               	movwf	??_main+2
   316  07BB  305E               	movlw	94
   317  07BC  00F2               	movwf	??_main+1
   318  07BD  306E               	movlw	110
   319  07BE  00F1               	movwf	??_main
   320  07BF                     u47:
   321  07BF  0BF1               	decfsz	??_main,f
   322  07C0  2FBF               	goto	u47
   323  07C1  0BF2               	decfsz	??_main+1,f
   324  07C2  2FBF               	goto	u47
   325  07C3  0BF3               	decfsz	??_main+2,f
   326  07C4  2FBF               	goto	u47
   327  07C5  0000               	nop
   328  07C6                     l671:
   329                           
   330                           ;main.c: 37:  if (RB1) {
   331  07C6  1283               	bcf	3,5	;RP0=0, select bank0
   332  07C7  1303               	bcf	3,6	;RP1=0, select bank0
   333  07C8  1C86               	btfss	6,1	;volatile
   334  07C9  2FCB               	goto	u21
   335  07CA  2FCC               	goto	u20
   336  07CB                     u21:
   337  07CB  2FDB               	goto	l677
   338  07CC                     u20:
   339  07CC                     l673:
   340                           
   341                           ;main.c: 38:  Data--;
   342  07CC  3001               	movlw	1
   343  07CD  02F4               	subwf	main@Data,f
   344  07CE                     l675:
   345                           
   346                           ;main.c: 39:  _delay((unsigned long)((1000)*(20000000/4000.0)));
   347  07CE  301A               	movlw	26
   348  07CF  00F3               	movwf	??_main+2
   349  07D0  305E               	movlw	94
   350  07D1  00F2               	movwf	??_main+1
   351  07D2  306E               	movlw	110
   352  07D3  00F1               	movwf	??_main
   353  07D4                     u57:
   354  07D4  0BF1               	decfsz	??_main,f
   355  07D5  2FD4               	goto	u57
   356  07D6  0BF2               	decfsz	??_main+1,f
   357  07D7  2FD4               	goto	u57
   358  07D8  0BF3               	decfsz	??_main+2,f
   359  07D9  2FD4               	goto	u57
   360  07DA  0000               	nop
   361  07DB                     l677:
   362                           
   363                           ;main.c: 41:  if (RB2) {
   364  07DB  1283               	bcf	3,5	;RP0=0, select bank0
   365  07DC  1303               	bcf	3,6	;RP1=0, select bank0
   366  07DD  1D06               	btfss	6,2	;volatile
   367  07DE  2FE0               	goto	u31
   368  07DF  2FE1               	goto	u30
   369  07E0                     u31:
   370  07E0  2FF4               	goto	l683
   371  07E1                     u30:
   372  07E1                     l679:
   373                           
   374                           ;main.c: 42:  SPI_Write(Data);
   375  07E1  0874               	movf	main@Data,w
   376  07E2  120A  118A  278D  120A  118A  	fcall	_SPI_Write
   377  07E7                     l681:
   378                           
   379                           ;main.c: 43:  _delay((unsigned long)((1000)*(20000000/4000.0)));
   380  07E7  301A               	movlw	26
   381  07E8  00F3               	movwf	??_main+2
   382  07E9  305E               	movlw	94
   383  07EA  00F2               	movwf	??_main+1
   384  07EB  306E               	movlw	110
   385  07EC  00F1               	movwf	??_main
   386  07ED                     u67:
   387  07ED  0BF1               	decfsz	??_main,f
   388  07EE  2FED               	goto	u67
   389  07EF  0BF2               	decfsz	??_main+1,f
   390  07F0  2FED               	goto	u67
   391  07F1  0BF3               	decfsz	??_main+2,f
   392  07F2  2FED               	goto	u67
   393  07F3  0000               	nop
   394  07F4                     l683:
   395                           
   396                           ;main.c: 45:  PORTD = Data;
   397  07F4  0874               	movf	main@Data,w
   398  07F5  1283               	bcf	3,5	;RP0=0, select bank0
   399  07F6  1303               	bcf	3,6	;RP1=0, select bank0
   400  07F7  0088               	movwf	8	;volatile
   401  07F8  2FB1               	goto	l665
   402  07F9  120A  118A  2800   	ljmp	start
   403  07FC                     __end_of_main:
   404                           
   405                           	psect	text1
   406  078D                     __ptext1:	
   407 ;; *************** function _SPI_Write *****************
   408 ;; Defined at:
   409 ;;		line 62 in file "main.c"
   410 ;; Parameters:    Size  Location     Type
   411 ;;  Data            1    wreg     unsigned char 
   412 ;; Auto vars:     Size  Location     Type
   413 ;;  Data            1    0[COMMON] unsigned char 
   414 ;; Return value:  Size  Location     Type
   415 ;;                  1    wreg      void 
   416 ;; Registers used:
   417 ;;		wreg
   418 ;; Tracked objects:
   419 ;;		On entry : 0/0
   420 ;;		On exit  : 0/0
   421 ;;		Unchanged: 0/0
   422 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   423 ;;      Params:         0       0       0       0       0
   424 ;;      Locals:         1       0       0       0       0
   425 ;;      Temps:          0       0       0       0       0
   426 ;;      Totals:         1       0       0       0       0
   427 ;;Total ram usage:        1 bytes
   428 ;; Hardware stack levels used: 1
   429 ;; This function calls:
   430 ;;		Nothing
   431 ;; This function is called by:
   432 ;;		_main
   433 ;; This function uses a non-reentrant model
   434 ;;
   435                           
   436                           
   437                           ;psect for function _SPI_Write
   438  078D                     _SPI_Write:
   439                           
   440                           ;incstack = 0
   441                           ; Regs used in _SPI_Write: [wreg]
   442                           ;SPI_Write@Data stored from wreg
   443  078D  00F0               	movwf	SPI_Write@Data
   444  078E                     l653:
   445                           
   446                           ;main.c: 63:  SSPBUF = Data;
   447  078E  0870               	movf	SPI_Write@Data,w
   448  078F  1283               	bcf	3,5	;RP0=0, select bank0
   449  0790  1303               	bcf	3,6	;RP1=0, select bank0
   450  0791  0093               	movwf	19	;volatile
   451  0792                     l59:
   452  0792  0008               	return
   453  0793                     __end_of_SPI_Write:
   454                           
   455                           	psect	text2
   456  0793                     __ptext2:	
   457 ;; *************** function _SPI_Master_Init *****************
   458 ;; Defined at:
   459 ;;		line 49 in file "main.c"
   460 ;; Parameters:    Size  Location     Type
   461 ;;		None
   462 ;; Auto vars:     Size  Location     Type
   463 ;;		None
   464 ;; Return value:  Size  Location     Type
   465 ;;                  1    wreg      void 
   466 ;; Registers used:
   467 ;;		None
   468 ;; Tracked objects:
   469 ;;		On entry : 0/0
   470 ;;		On exit  : 0/0
   471 ;;		Unchanged: 0/0
   472 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   473 ;;      Params:         0       0       0       0       0
   474 ;;      Locals:         0       0       0       0       0
   475 ;;      Temps:          0       0       0       0       0
   476 ;;      Totals:         0       0       0       0       0
   477 ;;Total ram usage:        0 bytes
   478 ;; Hardware stack levels used: 1
   479 ;; This function calls:
   480 ;;		Nothing
   481 ;; This function is called by:
   482 ;;		_main
   483 ;; This function uses a non-reentrant model
   484 ;;
   485                           
   486                           
   487                           ;psect for function _SPI_Master_Init
   488  0793                     _SPI_Master_Init:
   489  0793                     l651:	
   490                           ;incstack = 0
   491                           ; Regs used in _SPI_Master_Init: []
   492                           
   493                           
   494                           ;main.c: 50:  SSPM0 = 0;
   495  0793  1283               	bcf	3,5	;RP0=0, select bank0
   496  0794  1303               	bcf	3,6	;RP1=0, select bank0
   497  0795  1014               	bcf	20,0	;volatile
   498                           
   499                           ;main.c: 51:  SSPM1 = 0;
   500  0796  1094               	bcf	20,1	;volatile
   501                           
   502                           ;main.c: 52:  SSPM2 = 0;
   503  0797  1114               	bcf	20,2	;volatile
   504                           
   505                           ;main.c: 53:  SSPM3 = 0;
   506  0798  1194               	bcf	20,3	;volatile
   507                           
   508                           ;main.c: 54:  SSPEN = 1;
   509  0799  1694               	bsf	20,5	;volatile
   510                           
   511                           ;main.c: 55:  CKP = 0;
   512  079A  1214               	bcf	20,4	;volatile
   513                           
   514                           ;main.c: 56:  CKE = 0;
   515  079B  1683               	bsf	3,5	;RP0=1, select bank1
   516  079C  1303               	bcf	3,6	;RP1=0, select bank1
   517  079D  1314               	bcf	20,6	;volatile
   518                           
   519                           ;main.c: 57:  SMP = 0;
   520  079E  1394               	bcf	20,7	;volatile
   521                           
   522                           ;main.c: 58:  TRISC5 = 0;
   523  079F  1287               	bcf	7,5	;volatile
   524                           
   525                           ;main.c: 59:  TRISC4 = 1;
   526  07A0  1607               	bsf	7,4	;volatile
   527                           
   528                           ;main.c: 60:  TRISC3 = 0;
   529  07A1  1187               	bcf	7,3	;volatile
   530  07A2                     l56:
   531  07A2  0008               	return
   532  07A3                     __end_of_SPI_Master_Init:
   533  007E                     btemp	set	126	;btemp
   534  007E                     wtemp0	set	126
   535                           
   536                           	psect	idloc
   537                           
   538                           ;Config register IDLOC0 @ 0x2000
   539                           ;	unspecified, using default values
   540  2000                     	org	8192
   541  2000  3FFF               	dw	16383
   542                           
   543                           ;Config register IDLOC1 @ 0x2001
   544                           ;	unspecified, using default values
   545  2001                     	org	8193
   546  2001  3FFF               	dw	16383
   547                           
   548                           ;Config register IDLOC2 @ 0x2002
   549                           ;	unspecified, using default values
   550  2002                     	org	8194
   551  2002  3FFF               	dw	16383
   552                           
   553                           ;Config register IDLOC3 @ 0x2003
   554                           ;	unspecified, using default values
   555  2003                     	org	8195
   556  2003  3FFF               	dw	16383
   557                           
   558                           	psect	config
   559                           
   560                           ;Config register CONFIG @ 0x2007
   561                           ;	Oscillator Selection bits
   562                           ;	FOSC = HS, HS oscillator
   563                           ;	Watchdog Timer Enable bit
   564                           ;	WDTE = OFF, WDT disabled
   565                           ;	Power-up Timer Enable bit
   566                           ;	PWRTE = OFF, PWRT disabled
   567                           ;	Brown-out Reset Enable bit
   568                           ;	BOREN = ON, BOR enabled
   569                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   570                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   571                           ;	Data EEPROM Memory Code Protection bit
   572                           ;	CPD = OFF, Data EEPROM code protection off
   573                           ;	Flash Program Memory Write Enable bits
   574                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   575                           ;	In-Circuit Debugger Mode bit
   576                           ;	DEBUG = 0x1, unprogrammed default
   577                           ;	Flash Program Memory Code Protection bit
   578                           ;	CP = OFF, Code protection off
   579  2007                     	org	8199
   580  2007  3FFA               	dw	16378

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      5       5
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_SPI_Write

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      45
                                              1 COMMON     4     4      0
                    _SPI_Master_Init
                          _SPI_Write
 ---------------------------------------------------------------------------------
 (1) _SPI_Write                                            1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _SPI_Master_Init                                      0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _SPI_Master_Init
   _SPI_Write

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      5       5       1       35.7%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed May 11 10:58:47 2022

         _SPI_Master_Init 0793                        l56 07A2                        l59 0792  
                      u10 07B5                        u11 07B4                        u20 07CC  
                      u21 07CB                        u30 07E1                        u31 07E0  
                      u47 07BF                        u57 07D4                        u67 07ED  
                     l651 0793                       l653 078E                       l661 07AD  
                     l671 07C6                       l663 07AE                       l655 07A3  
                     l681 07E7                       l673 07CC                       l665 07B1  
                     l657 07A8                       l683 07F4                       l675 07CE  
                     l667 07B5                       l659 07A9                       l677 07DB  
                     l669 07B9                       l679 07E1                       _CKE 04A6  
                     _CKP 00A4                       _RB0 0030                       _RB1 0031  
                     _RB2 0032                       _SMP 04A7                      _main 07A3  
                    btemp 007E                      start 0000                     ?_main 0070  
                   _PORTD 0008                     _SSPM0 00A0                     _SSPM1 00A1  
                   _SSPM2 00A2                     _SSPM3 00A3                     _TRISB 0086  
                   _TRISD 0088                     _SSPEN 00A5                     status 0003  
                   wtemp0 007E   __end_of_SPI_Master_Init 07A3        __size_of_SPI_Write 0006  
         __initialization 07FC              __end_of_main 07FC                    ??_main 0071  
                  _TRISC3 043B                    _TRISC4 043C                    _TRISC5 043D  
                  _SSPBUF 0013         __end_of_SPI_Write 0793   __end_of__initialization 07FC  
        ?_SPI_Master_Init 0070            __pcstackCOMMON 0070                __pmaintext 07A3  
           SPI_Write@Data 0070                   __ptext1 078D                   __ptext2 0793  
    end_of_initialization 07FC                 _SPI_Write 078D       start_initialization 07FC  
              ?_SPI_Write 0070  __size_of_SPI_Master_Init 0010                 ___latbits 0002  
             ??_SPI_Write 0070         ??_SPI_Master_Init 0070             __size_of_main 0059  
                main@Data 0074  
