

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Mon May 09 12:41:55 2022

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	16F877A
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	text2,local,class=CODE,merge=1,delta=2
     9                           	psect	text3,local,class=CODE,merge=1,delta=2
    10                           	psect	text4,local,class=CODE,merge=1,delta=2
    11                           	psect	text5,local,class=CODE,merge=1,delta=2
    12                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    13                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.40
    17                           ; Generated 17/11/2021 GMT
    18                           ; 
    19                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution. Publication is not required when
    33                           ;        this file is used in an embedded application.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC16F877A Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     	;# 
    52  0001                     	;# 
    53  0002                     	;# 
    54  0003                     	;# 
    55  0004                     	;# 
    56  0005                     	;# 
    57  0006                     	;# 
    58  0007                     	;# 
    59  0008                     	;# 
    60  0009                     	;# 
    61  000A                     	;# 
    62  000B                     	;# 
    63  000C                     	;# 
    64  000D                     	;# 
    65  000E                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0015                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  001A                     	;# 
    80  001B                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0081                     	;# 
    87  0085                     	;# 
    88  0086                     	;# 
    89  0087                     	;# 
    90  0088                     	;# 
    91  0089                     	;# 
    92  008C                     	;# 
    93  008D                     	;# 
    94  008E                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0098                     	;# 
   100  0099                     	;# 
   101  009C                     	;# 
   102  009D                     	;# 
   103  009E                     	;# 
   104  009F                     	;# 
   105  010C                     	;# 
   106  010D                     	;# 
   107  010E                     	;# 
   108  010F                     	;# 
   109  018C                     	;# 
   110  018D                     	;# 
   111  0000                     	;# 
   112  0001                     	;# 
   113  0002                     	;# 
   114  0003                     	;# 
   115  0004                     	;# 
   116  0005                     	;# 
   117  0006                     	;# 
   118  0007                     	;# 
   119  0008                     	;# 
   120  0009                     	;# 
   121  000A                     	;# 
   122  000B                     	;# 
   123  000C                     	;# 
   124  000D                     	;# 
   125  000E                     	;# 
   126  000E                     	;# 
   127  000F                     	;# 
   128  0010                     	;# 
   129  0011                     	;# 
   130  0012                     	;# 
   131  0013                     	;# 
   132  0014                     	;# 
   133  0015                     	;# 
   134  0015                     	;# 
   135  0016                     	;# 
   136  0017                     	;# 
   137  0018                     	;# 
   138  0019                     	;# 
   139  001A                     	;# 
   140  001B                     	;# 
   141  001B                     	;# 
   142  001C                     	;# 
   143  001D                     	;# 
   144  001E                     	;# 
   145  001F                     	;# 
   146  0081                     	;# 
   147  0085                     	;# 
   148  0086                     	;# 
   149  0087                     	;# 
   150  0088                     	;# 
   151  0089                     	;# 
   152  008C                     	;# 
   153  008D                     	;# 
   154  008E                     	;# 
   155  0091                     	;# 
   156  0092                     	;# 
   157  0093                     	;# 
   158  0094                     	;# 
   159  0098                     	;# 
   160  0099                     	;# 
   161  009C                     	;# 
   162  009D                     	;# 
   163  009E                     	;# 
   164  009F                     	;# 
   165  010C                     	;# 
   166  010D                     	;# 
   167  010E                     	;# 
   168  010F                     	;# 
   169  018C                     	;# 
   170  018D                     	;# 
   171  0008                     _PORTD	set	8
   172  001A                     _RCREG	set	26
   173  0019                     _TXREG	set	25
   174  0018                     _RCSTA	set	24
   175  0043                     _RD3	set	67
   176  0042                     _RD2	set	66
   177  0041                     _RD1	set	65
   178  0065                     _RCIF	set	101
   179  0064                     _TXIF	set	100
   180  0086                     _TRISB	set	134
   181  0088                     _TRISD	set	136
   182  0099                     _SPBRG	set	153
   183  0098                     _TXSTA	set	152
   184  0087                     _TRISC	set	135
   185                           
   186                           	psect	cinit
   187  07FC                     start_initialization:	
   188                           ; #config settings
   189                           
   190  07FC                     __initialization:
   191  07FC                     end_of_initialization:	
   192                           ;End of C runtime variable initialization code
   193                           
   194  07FC                     __end_of__initialization:
   195  07FC  0183               	clrf	3
   196  07FD  120A  118A  2F2F   	ljmp	_main	;jump to C main() function
   197                           
   198                           	psect	cstackCOMMON
   199  0070                     __pcstackCOMMON:
   200  0070                     ?_ser_int:
   201  0070                     ??_ser_int:	
   202                           ; 1 bytes @ 0x0
   203                           
   204  0070                     ?_tx:	
   205                           ; 1 bytes @ 0x0
   206                           
   207  0070                     ??_tx:	
   208                           ; 1 bytes @ 0x0
   209                           
   210  0070                     ?_LCD_Command:	
   211                           ; 1 bytes @ 0x0
   212                           
   213  0070                     ??_LCD_Command:	
   214                           ; 1 bytes @ 0x0
   215                           
   216  0070                     ?_LCD_data:	
   217                           ; 1 bytes @ 0x0
   218                           
   219  0070                     ??_LCD_data:	
   220                           ; 1 bytes @ 0x0
   221                           
   222  0070                     ?_main:	
   223                           ; 1 bytes @ 0x0
   224                           
   225  0070                     ?_LCD_init:	
   226                           ; 1 bytes @ 0x0
   227                           
   228  0070                     tx@a:	
   229                           ; 2 bytes @ 0x0
   230                           
   231                           
   232                           ; 1 bytes @ 0x0
   233  0070                     	ds	2
   234  0072                     LCD_Command@cmd:
   235  0072                     LCD_data@data:	
   236                           ; 1 bytes @ 0x2
   237                           
   238                           
   239                           ; 1 bytes @ 0x2
   240  0072                     	ds	1
   241  0073                     ??_LCD_init:
   242                           
   243                           ; 1 bytes @ 0x3
   244  0073                     	ds	2
   245  0075                     ??_main:
   246                           
   247                           ; 1 bytes @ 0x5
   248  0075                     	ds	3
   249  0078                     main@b:
   250                           
   251                           ; 1 bytes @ 0x8
   252  0078                     	ds	1
   253                           
   254                           	psect	maintext
   255  072F                     __pmaintext:	
   256 ;;
   257 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   258 ;;
   259 ;; *************** function _main *****************
   260 ;; Defined at:
   261 ;;		line 88 in file "main.c"
   262 ;; Parameters:    Size  Location     Type
   263 ;;		None
   264 ;; Auto vars:     Size  Location     Type
   265 ;;  b               1    8[COMMON] unsigned char 
   266 ;; Return value:  Size  Location     Type
   267 ;;                  1    wreg      void 
   268 ;; Registers used:
   269 ;;		wreg, status,2, status,0, pclath, cstack
   270 ;; Tracked objects:
   271 ;;		On entry : B00/0
   272 ;;		On exit  : 0/0
   273 ;;		Unchanged: 0/0
   274 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   275 ;;      Params:         0       0       0       0       0
   276 ;;      Locals:         1       0       0       0       0
   277 ;;      Temps:          3       0       0       0       0
   278 ;;      Totals:         4       0       0       0       0
   279 ;;Total ram usage:        4 bytes
   280 ;; Hardware stack levels required when called: 2
   281 ;; This function calls:
   282 ;;		_LCD_data
   283 ;;		_LCD_init
   284 ;;		_ser_int
   285 ;;		_tx
   286 ;; This function is called by:
   287 ;;		Startup code after reset
   288 ;; This function uses a non-reentrant model
   289 ;;
   290                           
   291                           
   292                           ;psect for function _main
   293  072F                     _main:
   294  072F                     l705:	
   295                           ;incstack = 0
   296                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   297                           
   298                           
   299                           ;main.c: 90: char b;;main.c: 91: TRISD=0x00;
   300  072F  1683               	bsf	3,5	;RP0=1, select bank1
   301  0730  1303               	bcf	3,6	;RP1=0, select bank1
   302  0731  0188               	clrf	8	;volatile
   303                           
   304                           ;main.c: 92: TRISB=0X00;
   305  0732  0186               	clrf	6	;volatile
   306  0733                     l707:
   307                           
   308                           ;main.c: 93: LCD_init();
   309  0733  120A  118A  2707  120A  118A  	fcall	_LCD_init
   310  0738                     l709:
   311                           
   312                           ;main.c: 94: ser_int();
   313  0738  120A  118A  26F8  120A  118A  	fcall	_ser_int
   314  073D                     l711:
   315                           
   316                           ;main.c: 95: tx('a');
   317  073D  3061               	movlw	97
   318  073E  120A  118A  26ED  120A  118A  	fcall	_tx
   319  0743                     l713:
   320                           
   321                           ;main.c: 96: b = tx('a');
   322  0743  3061               	movlw	97
   323  0744  120A  118A  26ED  120A  118A  	fcall	_tx
   324  0749  00F5               	movwf	??_main
   325  074A  0875               	movf	??_main,w
   326  074B  00F8               	movwf	main@b
   327  074C                     l715:
   328                           
   329                           ;main.c: 97: LCD_data (b);
   330  074C  0878               	movf	main@b,w
   331  074D  120A  118A  2762  120A  118A  	fcall	_LCD_data
   332  0752                     l717:
   333                           
   334                           ;main.c: 98: _delay((unsigned long)((100)*(20000000/4000.0)));
   335  0752  3003               	movlw	3
   336  0753  00F7               	movwf	??_main+2
   337  0754  308A               	movlw	138
   338  0755  00F6               	movwf	??_main+1
   339  0756  3055               	movlw	85
   340  0757  00F5               	movwf	??_main
   341  0758                     u57:
   342  0758  0BF5               	decfsz	??_main,f
   343  0759  2F58               	goto	u57
   344  075A  0BF6               	decfsz	??_main+1,f
   345  075B  2F58               	goto	u57
   346  075C  0BF7               	decfsz	??_main+2,f
   347  075D  2F58               	goto	u57
   348  075E  2F5F               	nop2
   349  075F                     l59:
   350  075F  120A  118A  2800   	ljmp	start
   351  0762                     __end_of_main:
   352                           
   353                           	psect	text1
   354  06ED                     __ptext1:	
   355 ;; *************** function _tx *****************
   356 ;; Defined at:
   357 ;;		line 33 in file "main.c"
   358 ;; Parameters:    Size  Location     Type
   359 ;;  a               1    wreg     unsigned char 
   360 ;; Auto vars:     Size  Location     Type
   361 ;;  a               1    0[COMMON] unsigned char 
   362 ;; Return value:  Size  Location     Type
   363 ;;                  1    wreg      unsigned char 
   364 ;; Registers used:
   365 ;;		wreg
   366 ;; Tracked objects:
   367 ;;		On entry : 0/0
   368 ;;		On exit  : 0/0
   369 ;;		Unchanged: 0/0
   370 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   371 ;;      Params:         0       0       0       0       0
   372 ;;      Locals:         1       0       0       0       0
   373 ;;      Temps:          0       0       0       0       0
   374 ;;      Totals:         1       0       0       0       0
   375 ;;Total ram usage:        1 bytes
   376 ;; Hardware stack levels used: 1
   377 ;; This function calls:
   378 ;;		Nothing
   379 ;; This function is called by:
   380 ;;		_main
   381 ;; This function uses a non-reentrant model
   382 ;;
   383                           
   384                           
   385                           ;psect for function _tx
   386  06ED                     _tx:
   387                           
   388                           ;incstack = 0
   389                           ; Regs used in _tx: [wreg]
   390                           ;tx@a stored from wreg
   391  06ED  00F0               	movwf	tx@a
   392  06EE                     l673:
   393                           
   394                           ;main.c: 33: unsigned char tx(unsigned char a);main.c: 34: {;main.c: 35:  TXREG=a;
   395  06EE  0870               	movf	tx@a,w
   396  06EF  1283               	bcf	3,5	;RP0=0, select bank0
   397  06F0  1303               	bcf	3,6	;RP1=0, select bank0
   398  06F1  0099               	movwf	25	;volatile
   399  06F2                     l36:	
   400                           ;main.c: 36:  while(!TXIF);
   401                           
   402  06F2  1E0C               	btfss	12,4	;volatile
   403  06F3  2EF5               	goto	u21
   404  06F4  2EF6               	goto	u20
   405  06F5                     u21:
   406  06F5  2EF2               	goto	l36
   407  06F6                     u20:
   408  06F6                     l38:
   409                           
   410                           ;main.c: 37:  TXIF = 0;
   411  06F6  120C               	bcf	12,4	;volatile
   412  06F7                     l39:
   413  06F7  0008               	return
   414  06F8                     __end_of_tx:
   415                           
   416                           	psect	text2
   417  06F8                     __ptext2:	
   418 ;; *************** function _ser_int *****************
   419 ;; Defined at:
   420 ;;		line 25 in file "main.c"
   421 ;; Parameters:    Size  Location     Type
   422 ;;		None
   423 ;; Auto vars:     Size  Location     Type
   424 ;;		None
   425 ;; Return value:  Size  Location     Type
   426 ;;                  1    wreg      void 
   427 ;; Registers used:
   428 ;;		wreg
   429 ;; Tracked objects:
   430 ;;		On entry : 0/0
   431 ;;		On exit  : 0/0
   432 ;;		Unchanged: 0/0
   433 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   434 ;;      Params:         0       0       0       0       0
   435 ;;      Locals:         0       0       0       0       0
   436 ;;      Temps:          0       0       0       0       0
   437 ;;      Totals:         0       0       0       0       0
   438 ;;Total ram usage:        0 bytes
   439 ;; Hardware stack levels used: 1
   440 ;; This function calls:
   441 ;;		Nothing
   442 ;; This function is called by:
   443 ;;		_main
   444 ;; This function uses a non-reentrant model
   445 ;;
   446                           
   447                           
   448                           ;psect for function _ser_int
   449  06F8                     _ser_int:
   450  06F8                     l671:	
   451                           ;incstack = 0
   452                           ; Regs used in _ser_int: [wreg]
   453                           
   454                           
   455                           ;main.c: 27:  TRISC=0x80;
   456  06F8  3080               	movlw	128
   457  06F9  1683               	bsf	3,5	;RP0=1, select bank1
   458  06FA  1303               	bcf	3,6	;RP1=0, select bank1
   459  06FB  0087               	movwf	7	;volatile
   460                           
   461                           ;main.c: 28:  TXSTA= 0x20;
   462  06FC  3020               	movlw	32
   463  06FD  0098               	movwf	24	;volatile
   464                           
   465                           ;main.c: 29:  RCSTA= 0b10010000;
   466  06FE  3090               	movlw	144
   467  06FF  1283               	bcf	3,5	;RP0=0, select bank0
   468  0700  1303               	bcf	3,6	;RP1=0, select bank0
   469  0701  0098               	movwf	24	;volatile
   470                           
   471                           ;main.c: 30:  SPBRG=31;
   472  0702  301F               	movlw	31
   473  0703  1683               	bsf	3,5	;RP0=1, select bank1
   474  0704  1303               	bcf	3,6	;RP1=0, select bank1
   475  0705  0099               	movwf	25	;volatile
   476  0706                     l33:
   477  0706  0008               	return
   478  0707                     __end_of_ser_int:
   479                           
   480                           	psect	text3
   481  0707                     __ptext3:	
   482 ;; *************** function _LCD_init *****************
   483 ;; Defined at:
   484 ;;		line 79 in file "main.c"
   485 ;; Parameters:    Size  Location     Type
   486 ;;		None
   487 ;; Auto vars:     Size  Location     Type
   488 ;;		None
   489 ;; Return value:  Size  Location     Type
   490 ;;                  2   53[None  ] int 
   491 ;; Registers used:
   492 ;;		wreg, status,2, status,0, pclath, cstack
   493 ;; Tracked objects:
   494 ;;		On entry : 0/0
   495 ;;		On exit  : 0/0
   496 ;;		Unchanged: 0/0
   497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   498 ;;      Params:         0       0       0       0       0
   499 ;;      Locals:         0       0       0       0       0
   500 ;;      Temps:          2       0       0       0       0
   501 ;;      Totals:         2       0       0       0       0
   502 ;;Total ram usage:        2 bytes
   503 ;; Hardware stack levels used: 1
   504 ;; Hardware stack levels required when called: 1
   505 ;; This function calls:
   506 ;;		_LCD_Command
   507 ;; This function is called by:
   508 ;;		_main
   509 ;; This function uses a non-reentrant model
   510 ;;
   511                           
   512                           
   513                           ;psect for function _LCD_init
   514  0707                     _LCD_init:
   515  0707                     l695:	
   516                           ;incstack = 0
   517                           ; Regs used in _LCD_init: [wreg+status,2+status,0+pclath+cstack]
   518                           
   519                           
   520                           ;main.c: 81: LCD_Command (0x02);
   521  0707  3002               	movlw	2
   522  0708  120A  118A  27AF  120A  118A  	fcall	_LCD_Command
   523                           
   524                           ;main.c: 82: LCD_Command (0x28);
   525  070D  3028               	movlw	40
   526  070E  120A  118A  27AF  120A  118A  	fcall	_LCD_Command
   527                           
   528                           ;main.c: 83: LCD_Command (0x80);
   529  0713  3080               	movlw	128
   530  0714  120A  118A  27AF  120A  118A  	fcall	_LCD_Command
   531                           
   532                           ;main.c: 84: LCD_Command (0x0C);
   533  0719  300C               	movlw	12
   534  071A  120A  118A  27AF  120A  118A  	fcall	_LCD_Command
   535                           
   536                           ;main.c: 85: LCD_Command (0x06);
   537  071F  3006               	movlw	6
   538  0720  120A  118A  27AF  120A  118A  	fcall	_LCD_Command
   539  0725                     l697:
   540                           
   541                           ;main.c: 86: _delay((unsigned long)((10)*(20000000/4000.0)));
   542  0725  3041               	movlw	65
   543  0726  00F4               	movwf	??_LCD_init+1
   544  0727  30EE               	movlw	238
   545  0728  00F3               	movwf	??_LCD_init
   546  0729                     u67:
   547  0729  0BF3               	decfsz	??_LCD_init,f
   548  072A  2F29               	goto	u67
   549  072B  0BF4               	decfsz	??_LCD_init+1,f
   550  072C  2F29               	goto	u67
   551  072D  0000               	nop
   552  072E                     l54:
   553  072E  0008               	return
   554  072F                     __end_of_LCD_init:
   555                           
   556                           	psect	text4
   557  07AF                     __ptext4:	
   558 ;; *************** function _LCD_Command *****************
   559 ;; Defined at:
   560 ;;		line 45 in file "main.c"
   561 ;; Parameters:    Size  Location     Type
   562 ;;  cmd             1    wreg     unsigned char 
   563 ;; Auto vars:     Size  Location     Type
   564 ;;  cmd             1    2[COMMON] unsigned char 
   565 ;; Return value:  Size  Location     Type
   566 ;;                  1    wreg      void 
   567 ;; Registers used:
   568 ;;		wreg, status,2, status,0
   569 ;; Tracked objects:
   570 ;;		On entry : 0/0
   571 ;;		On exit  : 0/0
   572 ;;		Unchanged: 0/0
   573 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   574 ;;      Params:         0       0       0       0       0
   575 ;;      Locals:         1       0       0       0       0
   576 ;;      Temps:          2       0       0       0       0
   577 ;;      Totals:         3       0       0       0       0
   578 ;;Total ram usage:        3 bytes
   579 ;; Hardware stack levels used: 1
   580 ;; This function calls:
   581 ;;		Nothing
   582 ;; This function is called by:
   583 ;;		_LCD_init
   584 ;; This function uses a non-reentrant model
   585 ;;
   586                           
   587                           
   588                           ;psect for function _LCD_Command
   589  07AF                     _LCD_Command:
   590                           
   591                           ;incstack = 0
   592                           ; Regs used in _LCD_Command: [wreg+status,2+status,0]
   593                           ;LCD_Command@cmd stored from wreg
   594  07AF  00F2               	movwf	LCD_Command@cmd
   595  07B0                     l651:
   596                           
   597                           ;main.c: 45: void LCD_Command(unsigned char cmd);main.c: 46: {;main.c: 47: RD1=0;
   598  07B0  1283               	bcf	3,5	;RP0=0, select bank0
   599  07B1  1303               	bcf	3,6	;RP1=0, select bank0
   600  07B2  1088               	bcf	8,1	;volatile
   601                           
   602                           ;main.c: 48: RD2=0;
   603  07B3  1108               	bcf	8,2	;volatile
   604  07B4                     l653:
   605                           
   606                           ;main.c: 49: _delay((unsigned long)((10)*(20000000/4000.0)));
   607  07B4  3041               	movlw	65
   608  07B5  00F1               	movwf	??_LCD_Command+1
   609  07B6  30EE               	movlw	238
   610  07B7  00F0               	movwf	??_LCD_Command
   611  07B8                     u77:
   612  07B8  0BF0               	decfsz	??_LCD_Command,f
   613  07B9  2FB8               	goto	u77
   614  07BA  0BF1               	decfsz	??_LCD_Command+1,f
   615  07BB  2FB8               	goto	u77
   616  07BC  0000               	nop
   617                           
   618                           ;main.c: 50: PORTD=(cmd);
   619  07BD  0872               	movf	LCD_Command@cmd,w
   620  07BE  1283               	bcf	3,5	;RP0=0, select bank0
   621  07BF  1303               	bcf	3,6	;RP1=0, select bank0
   622  07C0  0088               	movwf	8	;volatile
   623  07C1                     l655:
   624                           
   625                           ;main.c: 51: RD3=1;
   626  07C1  1588               	bsf	8,3	;volatile
   627                           
   628                           ;main.c: 52: _delay((unsigned long)((10)*(20000000/4000.0)));
   629  07C2  3041               	movlw	65
   630  07C3  00F1               	movwf	??_LCD_Command+1
   631  07C4  30EE               	movlw	238
   632  07C5  00F0               	movwf	??_LCD_Command
   633  07C6                     u87:
   634  07C6  0BF0               	decfsz	??_LCD_Command,f
   635  07C7  2FC6               	goto	u87
   636  07C8  0BF1               	decfsz	??_LCD_Command+1,f
   637  07C9  2FC6               	goto	u87
   638  07CA  0000               	nop
   639  07CB                     l657:
   640                           
   641                           ;main.c: 53: RD3=0;
   642  07CB  1283               	bcf	3,5	;RP0=0, select bank0
   643  07CC  1303               	bcf	3,6	;RP1=0, select bank0
   644  07CD  1188               	bcf	8,3	;volatile
   645                           
   646                           ;main.c: 54: _delay((unsigned long)((10)*(20000000/4000.0)));
   647  07CE  3041               	movlw	65
   648  07CF  00F1               	movwf	??_LCD_Command+1
   649  07D0  30EE               	movlw	238
   650  07D1  00F0               	movwf	??_LCD_Command
   651  07D2                     u97:
   652  07D2  0BF0               	decfsz	??_LCD_Command,f
   653  07D3  2FD2               	goto	u97
   654  07D4  0BF1               	decfsz	??_LCD_Command+1,f
   655  07D5  2FD2               	goto	u97
   656  07D6  0000               	nop
   657  07D7                     l659:
   658                           
   659                           ;main.c: 55: PORTD=(cmd<<4);
   660  07D7  0872               	movf	LCD_Command@cmd,w
   661  07D8  00F0               	movwf	??_LCD_Command
   662  07D9  3003               	movlw	3
   663  07DA                     u15:
   664  07DA  1003               	clrc
   665  07DB  0DF0               	rlf	??_LCD_Command,f
   666  07DC  3EFF               	addlw	-1
   667  07DD  1D03               	skipz
   668  07DE  2FDA               	goto	u15
   669  07DF  1003               	clrc
   670  07E0  0D70               	rlf	??_LCD_Command,w
   671  07E1  1283               	bcf	3,5	;RP0=0, select bank0
   672  07E2  1303               	bcf	3,6	;RP1=0, select bank0
   673  07E3  0088               	movwf	8	;volatile
   674  07E4                     l661:
   675                           
   676                           ;main.c: 56: RD2=0;
   677  07E4  1108               	bcf	8,2	;volatile
   678  07E5                     l663:
   679                           
   680                           ;main.c: 57: RD3=1;
   681  07E5  1588               	bsf	8,3	;volatile
   682  07E6                     l665:
   683                           
   684                           ;main.c: 58: _delay((unsigned long)((10)*(20000000/4000.0)));
   685  07E6  3041               	movlw	65
   686  07E7  00F1               	movwf	??_LCD_Command+1
   687  07E8  30EE               	movlw	238
   688  07E9  00F0               	movwf	??_LCD_Command
   689  07EA                     u107:
   690  07EA  0BF0               	decfsz	??_LCD_Command,f
   691  07EB  2FEA               	goto	u107
   692  07EC  0BF1               	decfsz	??_LCD_Command+1,f
   693  07ED  2FEA               	goto	u107
   694  07EE  0000               	nop
   695  07EF                     l667:
   696                           
   697                           ;main.c: 59: RD3=0;
   698  07EF  1283               	bcf	3,5	;RP0=0, select bank0
   699  07F0  1303               	bcf	3,6	;RP1=0, select bank0
   700  07F1  1188               	bcf	8,3	;volatile
   701  07F2                     l669:
   702                           
   703                           ;main.c: 60: _delay((unsigned long)((10)*(20000000/4000.0)));
   704  07F2  3041               	movlw	65
   705  07F3  00F1               	movwf	??_LCD_Command+1
   706  07F4  30EE               	movlw	238
   707  07F5  00F0               	movwf	??_LCD_Command
   708  07F6                     u117:
   709  07F6  0BF0               	decfsz	??_LCD_Command,f
   710  07F7  2FF6               	goto	u117
   711  07F8  0BF1               	decfsz	??_LCD_Command+1,f
   712  07F9  2FF6               	goto	u117
   713  07FA  0000               	nop
   714  07FB                     l48:
   715  07FB  0008               	return
   716  07FC                     __end_of_LCD_Command:
   717                           
   718                           	psect	text5
   719  0762                     __ptext5:	
   720 ;; *************** function _LCD_data *****************
   721 ;; Defined at:
   722 ;;		line 62 in file "main.c"
   723 ;; Parameters:    Size  Location     Type
   724 ;;  data            1    wreg     unsigned char 
   725 ;; Auto vars:     Size  Location     Type
   726 ;;  data            1    2[COMMON] unsigned char 
   727 ;; Return value:  Size  Location     Type
   728 ;;                  1    wreg      void 
   729 ;; Registers used:
   730 ;;		wreg, status,2, status,0
   731 ;; Tracked objects:
   732 ;;		On entry : 0/0
   733 ;;		On exit  : 0/0
   734 ;;		Unchanged: 0/0
   735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   736 ;;      Params:         0       0       0       0       0
   737 ;;      Locals:         1       0       0       0       0
   738 ;;      Temps:          2       0       0       0       0
   739 ;;      Totals:         3       0       0       0       0
   740 ;;Total ram usage:        3 bytes
   741 ;; Hardware stack levels used: 1
   742 ;; This function calls:
   743 ;;		Nothing
   744 ;; This function is called by:
   745 ;;		_main
   746 ;; This function uses a non-reentrant model
   747 ;;
   748                           
   749                           
   750                           ;psect for function _LCD_data
   751  0762                     _LCD_data:
   752                           
   753                           ;incstack = 0
   754                           ; Regs used in _LCD_data: [wreg+status,2+status,0]
   755                           ;LCD_data@data stored from wreg
   756  0762  00F2               	movwf	LCD_data@data
   757  0763                     l675:
   758                           
   759                           ;main.c: 62: void LCD_data(unsigned char data);main.c: 63: {;main.c: 64: RD1=0;
   760  0763  1283               	bcf	3,5	;RP0=0, select bank0
   761  0764  1303               	bcf	3,6	;RP1=0, select bank0
   762  0765  1088               	bcf	8,1	;volatile
   763                           
   764                           ;main.c: 65: RD2=1;
   765  0766  1508               	bsf	8,2	;volatile
   766  0767                     l677:
   767                           
   768                           ;main.c: 66: _delay((unsigned long)((10)*(20000000/4000.0)));
   769  0767  3041               	movlw	65
   770  0768  00F1               	movwf	??_LCD_data+1
   771  0769  30EE               	movlw	238
   772  076A  00F0               	movwf	??_LCD_data
   773  076B                     u127:
   774  076B  0BF0               	decfsz	??_LCD_data,f
   775  076C  2F6B               	goto	u127
   776  076D  0BF1               	decfsz	??_LCD_data+1,f
   777  076E  2F6B               	goto	u127
   778  076F  0000               	nop
   779                           
   780                           ;main.c: 67: PORTD=(data);
   781  0770  0872               	movf	LCD_data@data,w
   782  0771  1283               	bcf	3,5	;RP0=0, select bank0
   783  0772  1303               	bcf	3,6	;RP1=0, select bank0
   784  0773  0088               	movwf	8	;volatile
   785  0774                     l679:
   786                           
   787                           ;main.c: 68: RD3=1;
   788  0774  1588               	bsf	8,3	;volatile
   789                           
   790                           ;main.c: 69: _delay((unsigned long)((10)*(20000000/4000.0)));
   791  0775  3041               	movlw	65
   792  0776  00F1               	movwf	??_LCD_data+1
   793  0777  30EE               	movlw	238
   794  0778  00F0               	movwf	??_LCD_data
   795  0779                     u137:
   796  0779  0BF0               	decfsz	??_LCD_data,f
   797  077A  2F79               	goto	u137
   798  077B  0BF1               	decfsz	??_LCD_data+1,f
   799  077C  2F79               	goto	u137
   800  077D  0000               	nop
   801  077E                     l681:
   802                           
   803                           ;main.c: 70: RD3=0;
   804  077E  1283               	bcf	3,5	;RP0=0, select bank0
   805  077F  1303               	bcf	3,6	;RP1=0, select bank0
   806  0780  1188               	bcf	8,3	;volatile
   807                           
   808                           ;main.c: 71: _delay((unsigned long)((10)*(20000000/4000.0)));
   809  0781  3041               	movlw	65
   810  0782  00F1               	movwf	??_LCD_data+1
   811  0783  30EE               	movlw	238
   812  0784  00F0               	movwf	??_LCD_data
   813  0785                     u147:
   814  0785  0BF0               	decfsz	??_LCD_data,f
   815  0786  2F85               	goto	u147
   816  0787  0BF1               	decfsz	??_LCD_data+1,f
   817  0788  2F85               	goto	u147
   818  0789  0000               	nop
   819  078A                     l683:
   820                           
   821                           ;main.c: 72: PORTD=(data<<4);
   822  078A  0872               	movf	LCD_data@data,w
   823  078B  00F0               	movwf	??_LCD_data
   824  078C  3003               	movlw	3
   825  078D                     u35:
   826  078D  1003               	clrc
   827  078E  0DF0               	rlf	??_LCD_data,f
   828  078F  3EFF               	addlw	-1
   829  0790  1D03               	skipz
   830  0791  2F8D               	goto	u35
   831  0792  1003               	clrc
   832  0793  0D70               	rlf	??_LCD_data,w
   833  0794  1283               	bcf	3,5	;RP0=0, select bank0
   834  0795  1303               	bcf	3,6	;RP1=0, select bank0
   835  0796  0088               	movwf	8	;volatile
   836  0797                     l685:
   837                           
   838                           ;main.c: 73: RD2=1;
   839  0797  1508               	bsf	8,2	;volatile
   840  0798                     l687:
   841                           
   842                           ;main.c: 74: RD3=1;
   843  0798  1588               	bsf	8,3	;volatile
   844  0799                     l689:
   845                           
   846                           ;main.c: 75: _delay((unsigned long)((10)*(20000000/4000.0)));
   847  0799  3041               	movlw	65
   848  079A  00F1               	movwf	??_LCD_data+1
   849  079B  30EE               	movlw	238
   850  079C  00F0               	movwf	??_LCD_data
   851  079D                     u157:
   852  079D  0BF0               	decfsz	??_LCD_data,f
   853  079E  2F9D               	goto	u157
   854  079F  0BF1               	decfsz	??_LCD_data+1,f
   855  07A0  2F9D               	goto	u157
   856  07A1  0000               	nop
   857  07A2                     l691:
   858                           
   859                           ;main.c: 76: RD3=0;
   860  07A2  1283               	bcf	3,5	;RP0=0, select bank0
   861  07A3  1303               	bcf	3,6	;RP1=0, select bank0
   862  07A4  1188               	bcf	8,3	;volatile
   863  07A5                     l693:
   864                           
   865                           ;main.c: 77: _delay((unsigned long)((10)*(20000000/4000.0)));
   866  07A5  3041               	movlw	65
   867  07A6  00F1               	movwf	??_LCD_data+1
   868  07A7  30EE               	movlw	238
   869  07A8  00F0               	movwf	??_LCD_data
   870  07A9                     u167:
   871  07A9  0BF0               	decfsz	??_LCD_data,f
   872  07AA  2FA9               	goto	u167
   873  07AB  0BF1               	decfsz	??_LCD_data+1,f
   874  07AC  2FA9               	goto	u167
   875  07AD  0000               	nop
   876  07AE                     l51:
   877  07AE  0008               	return
   878  07AF                     __end_of_LCD_data:
   879  007E                     btemp	set	126	;btemp
   880  007E                     wtemp0	set	126
   881                           
   882                           	psect	idloc
   883                           
   884                           ;Config register IDLOC0 @ 0x2000
   885                           ;	unspecified, using default values
   886  2000                     	org	8192
   887  2000  3FFF               	dw	16383
   888                           
   889                           ;Config register IDLOC1 @ 0x2001
   890                           ;	unspecified, using default values
   891  2001                     	org	8193
   892  2001  3FFF               	dw	16383
   893                           
   894                           ;Config register IDLOC2 @ 0x2002
   895                           ;	unspecified, using default values
   896  2002                     	org	8194
   897  2002  3FFF               	dw	16383
   898                           
   899                           ;Config register IDLOC3 @ 0x2003
   900                           ;	unspecified, using default values
   901  2003                     	org	8195
   902  2003  3FFF               	dw	16383
   903                           
   904                           	psect	config
   905                           
   906                           ;Config register CONFIG @ 0x2007
   907                           ;	Oscillator Selection bits
   908                           ;	FOSC = HS, HS oscillator
   909                           ;	Watchdog Timer Enable bit
   910                           ;	WDTE = OFF, WDT disabled
   911                           ;	Power-up Timer Enable bit
   912                           ;	PWRTE = OFF, PWRT disabled
   913                           ;	Brown-out Reset Enable bit
   914                           ;	BOREN = ON, BOR enabled
   915                           ;	Low-Voltage (Single-Supply) In-Circuit Serial Programming Enable bit
   916                           ;	LVP = ON, RB3/PGM pin has PGM function; low-voltage programming enabled
   917                           ;	Data EEPROM Memory Code Protection bit
   918                           ;	CPD = OFF, Data EEPROM code protection off
   919                           ;	Flash Program Memory Write Enable bits
   920                           ;	WRT = OFF, Write protection off; all program memory may be written to by EECON control
   921                           ;	In-Circuit Debugger Mode bit
   922                           ;	DEBUG = 0x1, unprogrammed default
   923                           ;	Flash Program Memory Code Protection bit
   924                           ;	CP = OFF, Code protection off
   925  2007                     	org	8199
   926  2007  3FFA               	dw	16378

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      9       9
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_LCD_init
    _LCD_init->_LCD_Command

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 4     4      0      90
                                              5 COMMON     4     4      0
                           _LCD_data
                           _LCD_init
                            _ser_int
                                 _tx
 ---------------------------------------------------------------------------------
 (1) _tx                                                   1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _ser_int                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             2     2      0      30
                                              3 COMMON     2     2      0
                        _LCD_Command
 ---------------------------------------------------------------------------------
 (2) _LCD_Command                                          3     3      0      30
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (1) _LCD_data                                             3     3      0      30
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_data
   _LCD_init
     _LCD_Command
   _ser_int
   _tx

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      9       9       1       64.3%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Mon May 09 12:41:55 2022

           ?_LCD_Command 0070                       l33 0706                       l51 07AE  
                     l36 06F2                       l54 072E                       l38 06F6  
                     l39 06F7                       l48 07FB                       l59 075F  
                     u20 06F6                       u21 06F5                       u15 07DA  
                     u35 078D                       u57 0758                       u67 0729  
                     u77 07B8                       u87 07C6                       u97 07D2  
                     _tx 06ED                      l711 073D                      l713 0743  
                    l705 072F                      l651 07B0                      l715 074C  
                    l707 0733                      ?_tx 0070                      l661 07E4  
                    l653 07B4                      l717 0752                      l709 0738  
                    l663 07E5                      l655 07C1                      l671 06F8  
                    l681 077E                      l665 07E6                      l657 07CB  
                    l673 06EE                      l691 07A2                      l683 078A  
                    l675 0763                      l667 07EF                      l659 07D7  
                    l693 07A5                      l685 0797                      l677 0767  
                    l669 07F2                      l687 0798                      l679 0774  
                    l695 0707                      l689 0799                      l697 0725  
                    _RD1 0041                      _RD2 0042                      _RD3 0043  
                    u107 07EA                      u117 07F6                      u127 076B  
                    u137 0779                      u147 0785                      u157 079D  
                    u167 07A9                      tx@a 0070                     ??_tx 0070  
                   _RCIF 0065                     _TXIF 0064                     _main 072F  
                   btemp 007E                     start 0000         __end_of_LCD_data 07AF  
       __end_of_LCD_init 072F                    ?_main 0070                    _RCREG 001A  
                  _RCSTA 0018                    _SPBRG 0099                    _PORTD 0008  
                  _TRISB 0086                    _TRISC 0087                    _TRISD 0088  
                  _TXREG 0019                    _TXSTA 0098                    main@b 0078  
        __end_of_ser_int 0707                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 0762                   ??_main 0075  
           LCD_data@data 0072     __size_of_LCD_Command 004D                ??_ser_int 0070  
__end_of__initialization 07FC                ?_LCD_data 0070                ?_LCD_init 0070  
         __pcstackCOMMON 0070               __end_of_tx 06F8               ??_LCD_data 0070  
             ??_LCD_init 0073               __pmaintext 072F                  __ptext1 06ED  
                __ptext2 06F8                  __ptext3 0707                  __ptext4 07AF  
                __ptext5 0762                  _ser_int 06F8     end_of_initialization 07FC  
         LCD_Command@cmd 0072        __size_of_LCD_data 004D        __size_of_LCD_init 0028  
          ??_LCD_Command 0070      start_initialization 07FC      __end_of_LCD_Command 07FC  
              ___latbits 0002                 ?_ser_int 0070              __size_of_tx 000B  
               _LCD_data 0762                 _LCD_init 0707              _LCD_Command 07AF  
       __size_of_ser_int 000F            __size_of_main 0033  
